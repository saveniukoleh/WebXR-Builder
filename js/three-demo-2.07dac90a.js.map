{"version":3,"file":"js/three-demo-2.07dac90a.js","mappings":"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","sources":["webpack://webxr-builder/./src/views/ThreeDemoSphereView.vue","webpack://webxr-builder/./src/views/ThreeDemoSphereView.vue?73ae"],"sourcesContent":["<template>\r\n  <div class=\"three-demo-2\">\r\n    <h1>This is a Three.js Demo 2 page</h1>\r\n    <div class=\"renderer-wrapper\">\r\n      <Renderer ref=\"renderer\" pointer resize shadow @click=\"randomColors\">\r\n        <Camera :position=\"{ z: 2.5 }\" />\r\n        <Scene background=\"white\">\r\n          <AmbientLight color=\"#ffffff\" />\r\n          <SpotLight\r\n            color=\"#ffffff\"\r\n            :intensity=\"5\"\r\n            :position=\"{ x: 0, y: 3, z: 2 }\"\r\n            :angle=\"Math.PI / 8\"\r\n            :penumbra=\"0.1\"\r\n            cast-shadow\r\n            :shadow-map-size=\"{ width: 2048, height: 2048 }\"\r\n          />\r\n          <SpotLight\r\n            color=\"#ff0000\"\r\n            :intensity=\"5\"\r\n            :position=\"{ x: 0, y: -3, z: 2 }\"\r\n            :angle=\"Math.PI / 8\"\r\n            :penumbra=\"0.1\"\r\n            cast-shadow\r\n            :shadow-map-size=\"{ width: 2048, height: 2048 }\"\r\n          />\r\n          <CannonWorld\r\n            :gravity=\"{ x: 0, y: 0, z: 0 }\"\r\n            @before-step=\"onBeforeStep\"\r\n          >\r\n            <InstancedMesh\r\n              ref=\"imeshC\"\r\n              :count=\"COUNT\"\r\n              @created=\"initIMesh\"\r\n              cast-shadow\r\n              receive-shadow\r\n            >\r\n              <SphereGeometry\r\n                :radius=\"0.1\"\r\n                :width-segments=\"16\"\r\n                :height-segments=\"16\"\r\n              />\r\n              <PhongMaterial />\r\n            </InstancedMesh>\r\n            <Sphere\r\n              v-for=\"i in 3\"\r\n              :key=\"`sphere-${i}`\"\r\n              :radius=\"0.25\"\r\n              :position=\"{ x: i - 2 }\"\r\n              :width-segments=\"16\"\r\n              :height-segments=\"16\"\r\n              receive-shadow\r\n            >\r\n              <PhongMaterial />\r\n            </Sphere>\r\n          </CannonWorld>\r\n        </Scene>\r\n        <EffectComposer>\r\n          <RenderPass />\r\n          <UnrealBloomPass :strength=\"0.5\" :threshold=\"0.99\" />\r\n          <FXAAPass />\r\n        </EffectComposer>\r\n      </Renderer>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Color, MathUtils, Object3D, Vector3 } from 'three'\r\nimport {\r\n  AmbientLight,\r\n  Camera,\r\n  EffectComposer,\r\n  FXAAPass,\r\n  InstancedMesh,\r\n  PhongMaterial,\r\n  Renderer,\r\n  RenderPass,\r\n  Scene,\r\n  Sphere,\r\n  SphereGeometry,\r\n  SpotLight,\r\n  UnrealBloomPass\r\n} from 'troisjs'\r\nimport CannonWorld from 'troisjs/src/components/physics/CannonWorld.js'\r\nimport niceColors from 'nice-color-palettes'\r\n\r\nconst { randFloat: rnd, randFloatSpread: rndFS } = MathUtils\r\n\r\nexport default {\r\n  components: {\r\n    AmbientLight,\r\n    Camera,\r\n    CannonWorld,\r\n    EffectComposer,\r\n    FXAAPass,\r\n    InstancedMesh,\r\n    PhongMaterial,\r\n    Renderer,\r\n    RenderPass,\r\n    Scene,\r\n    Sphere,\r\n    SphereGeometry,\r\n    SpotLight,\r\n    UnrealBloomPass\r\n  },\r\n  setup() {\r\n    return {\r\n      COUNT: 250\r\n    }\r\n  },\r\n  methods: {\r\n    onBeforeStep() {\r\n      const v = new Vector3()\r\n      const target = this.$refs.renderer.three.pointer.positionV3\r\n      this.imesh.userData.bodies.forEach((body) => {\r\n        v.copy(target).sub(body.position).normalize().multiplyScalar(0.5)\r\n        v.clampScalar(-0.5, 0.5)\r\n        body.force.copy(v)\r\n      })\r\n    },\r\n    initIMesh(imesh) {\r\n      this.imesh = imesh\r\n\r\n      const dummy = new Object3D()\r\n      const color = new Color()\r\n      const scales = new Array(this.COUNT)\r\n      const masses = new Array(this.COUNT)\r\n      const colors = new Array(this.COUNT)\r\n        .fill()\r\n        .map(() => niceColors[20][Math.floor(rnd(0, 5))])\r\n\r\n      for (let i = 0; i < this.COUNT; i++) {\r\n        dummy.position.set(rndFS(2), rndFS(2), rndFS(2))\r\n        const scale = rnd(0.2, 1)\r\n        scales[i] = scale\r\n        masses[i] = scale\r\n        dummy.scale.set(scale, scale, scale)\r\n        dummy.updateMatrix()\r\n        imesh.setMatrixAt(i, dummy.matrix)\r\n        imesh.setColorAt(i, color.set(colors[i]))\r\n      }\r\n      imesh.instanceMatrix.needsUpdate = true\r\n      imesh.userData.scales = scales\r\n      imesh.userData.masses = masses\r\n      imesh.userData.damping = 0.1\r\n    },\r\n    randomColors() {\r\n      const ci = Math.floor(rnd(0, 100))\r\n      const color = new Color()\r\n      const colors = new Array(this.COUNT)\r\n        .fill()\r\n        .map(() => niceColors[ci][Math.floor(rnd(0, 5))])\r\n      for (let i = 0; i < this.COUNT; i++) {\r\n        this.imesh.setColorAt(i, color.set(colors[i]))\r\n      }\r\n      this.imesh.instanceColor.needsUpdate = true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.three-demo-2 {\r\n  height: calc(100% - 168px);\r\n}\r\n\r\n.renderer-wrapper {\r\n  border: 5px #2c3e50 solid;\r\n  height: 100%;\r\n}\r\n</style>\r\n","import { render } from \"./ThreeDemoSphereView.vue?vue&type=template&id=98dfe5d4\"\nimport script from \"./ThreeDemoSphereView.vue?vue&type=script&lang=js\"\nexport * from \"./ThreeDemoSphereView.vue?vue&type=script&lang=js\"\n\nimport \"./ThreeDemoSphereView.vue?vue&type=style&index=0&id=98dfe5d4&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_Renderer","ref","pointer","resize","shadow","onClick","$options","randomColors","_component_Camera","position","z","_component_Scene","background","_component_AmbientLight","color","_component_SpotLight","intensity","x","y","angle","Math","PI","penumbra","width","height","_component_CannonWorld","gravity","onBeforeStep","_component_InstancedMesh","count","$setup","COUNT","onCreated","initIMesh","_component_SphereGeometry","radius","_component_PhongMaterial","_Fragment","_renderList","i","_component_Sphere","key","_component_EffectComposer","_component_RenderPass","_component_UnrealBloomPass","strength","threshold","_component_FXAAPass","randFloat","rnd","randFloatSpread","rndFS","MathUtils","components","AmbientLight","Camera","CannonWorld","EffectComposer","FXAAPass","InstancedMesh","PhongMaterial","Renderer","RenderPass","Scene","Sphere","SphereGeometry","SpotLight","UnrealBloomPass","setup","methods","v","Vector3","target","this","$refs","renderer","three","positionV3","imesh","userData","bodies","forEach","body","copy","sub","normalize","multiplyScalar","clampScalar","force","dummy","Object3D","Color","scales","Array","masses","colors","fill","map","niceColors","floor","set","scale","updateMatrix","setMatrixAt","matrix","setColorAt","instanceMatrix","needsUpdate","damping","ci","instanceColor","__exports__","render"],"sourceRoot":""}