{"version":3,"file":"js/three-demo-1.dcf6b72e.js","mappings":"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","sources":["webpack://webxr-builder/./src/views/ThreeDemoPlaneView.vue","webpack://webxr-builder/./src/views/ThreeDemoPlaneView.vue?b80b"],"sourcesContent":["<template>\n  <div class=\"three-demo-wall\">\n    <h1>Three.js Wall</h1>\n    <div class=\"renderer-wrapper\">\n      <Renderer\n        ref=\"renderer\"\n        antialias\n        orbit-ctrl\n        resize\n        shadow\n        @click=\"randomColors\"\n      >\n        <Camera :position=\"{ z: 7 }\" />\n        <Scene background=\"white\">\n          <AmbientLight color=\"#ffffff\" />\n          <SpotLight\n            color=\"#ffffff\"\n            :intensity=\"5\"\n            :position=\"{ x: 0, y: 1, z: 2 }\"\n            :angle=\"Math.PI / 3\"\n            :penumbra=\"0.5\"\n            cast-shadow\n            :shadow-map-size=\"{ width: 1024, height: 1024 }\"\n          />\n          <SpotLight\n            color=\"#ff0000\"\n            :intensity=\"5\"\n            :position=\"{ x: 0, y: -1, z: 2 }\"\n            :angle=\"Math.PI / 3\"\n            :penumbra=\"0.5\"\n            cast-shadow\n            :shadow-map-size=\"{ width: 1024, height: 1024 }\"\n          />\n          <Plane\n            :width=\"15\"\n            :height=\"15\"\n            :position=\"{ z: -0.1 }\"\n            receive-shadow\n          >\n            <PhongMaterial color=\"#aaaaaa\" />\n          </Plane>\n          <CannonWorld\n            :gravity=\"{ x: 0, y: -9.82, z: 0 }\"\n            @before-step=\"onBeforeStep\"\n          >\n            <InstancedMesh\n              ref=\"imeshC\"\n              :count=\"COUNT\"\n              @created=\"initIMesh\"\n              cast-shadow\n            >\n              <SphereGeometry\n                :radius=\"0.1\"\n                :width-segments=\"16\"\n                :height-segments=\"16\"\n              />\n              <ToonMaterial />\n            </InstancedMesh>\n            <Box\n              v-for=\"i in 6\"\n              :key=\"`box-${i}`\"\n              :width=\"3\"\n              :height=\"0.05\"\n              :depth=\"0.2\"\n              :position=\"{\n                x: (i % 2 === 0 ? 1 : -1) * 1,\n                y: (i - 3.5) * 1.5,\n                z: 0\n              }\"\n              :rotation=\"{ z: ((i % 2 === 0 ? 1 : -1) * Math.PI) / 6 }\"\n              cast-shadow\n            >\n              <PhongMaterial color=\"#aaaaaa\" />\n            </Box>\n          </CannonWorld>\n        </Scene>\n      </Renderer>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Color, MathUtils, Object3D } from 'three'\nimport {\n  AmbientLight,\n  Box,\n  Camera,\n  InstancedMesh,\n  PhongMaterial,\n  Plane,\n  Renderer,\n  Scene,\n  SphereGeometry,\n  SpotLight,\n  ToonMaterial\n} from 'troisjs'\nimport CannonWorld from 'troisjs/src/components/physics/CannonWorld.js'\nimport niceColors from 'nice-color-palettes'\n\nconst { randFloat: rnd, randFloatSpread: rndFS } = MathUtils\n\nexport default {\n  components: {\n    AmbientLight,\n    Box,\n    Camera,\n    InstancedMesh,\n    PhongMaterial,\n    Plane,\n    Renderer,\n    Scene,\n    SphereGeometry,\n    SpotLight,\n    ToonMaterial,\n    CannonWorld\n  },\n  setup() {\n    return {\n      COUNT: 500\n    }\n  },\n  methods: {\n    initIMesh(imesh) {\n      this.imesh = imesh\n\n      const dummy = new Object3D()\n      const color = new Color()\n      // const cscale = chroma.scale(niceColors[Math.floor(rnd(0, 100))]);\n      const scales = new Array(this.COUNT)\n      const masses = new Array(this.COUNT)\n      const colors = new Array(this.COUNT)\n        .fill()\n        .map(() => niceColors[20][Math.floor(rnd(0, 5))])\n\n      for (let i = 0; i < this.COUNT; i++) {\n        dummy.position.set(rndFS(2), rndFS(5), 0)\n        const scale = rnd(0.2, 1)\n        scales[i] = scale\n        masses[i] = scale * 0.01\n        dummy.scale.set(scale, scale, scale)\n        dummy.updateMatrix()\n        imesh.setMatrixAt(i, dummy.matrix)\n        imesh.setColorAt(i, color.set(colors[i]))\n        // imesh.setColorAt(i, color.set(cscale(rnd(0, 1)).hex()));\n      }\n      imesh.instanceMatrix.needsUpdate = true\n      imesh.userData.scales = scales\n      imesh.userData.masses = masses\n      imesh.userData.damping = 0.7\n    },\n    onBeforeStep() {\n      this.imesh.userData.bodies.forEach((body) => {\n        if (body.position.y < -7) {\n          body.position.set(rndFS(2), rnd(5, 7), 0)\n          body.angularVelocity.set(0, 0, 0, 0)\n          body.velocity.set(0, 0, 0)\n          body.quaternion.set(0, 0, 0, 1)\n        }\n      })\n    },\n    randomColors() {\n      const ci = Math.floor(rnd(0, 100))\n      const color = new Color()\n      const colors = new Array(this.COUNT)\n        .fill()\n        .map(() => niceColors[ci][Math.floor(rnd(0, 5))])\n      for (let i = 0; i < this.COUNT; i++) {\n        this.imesh.setColorAt(i, color.set(colors[i]))\n      }\n      this.imesh.instanceColor.needsUpdate = true\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.three-demo-wall {\n  height: calc(100% - 168px);\n}\n\n.renderer-wrapper {\n  border: 5px #2c3e50 solid;\n  height: 100%;\n}\n</style>\n","import { render } from \"./ThreeDemoPlaneView.vue?vue&type=template&id=b500f95e\"\nimport script from \"./ThreeDemoPlaneView.vue?vue&type=script&lang=js\"\nexport * from \"./ThreeDemoPlaneView.vue?vue&type=script&lang=js\"\n\nimport \"./ThreeDemoPlaneView.vue?vue&type=style&index=0&id=b500f95e&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_Renderer","ref","antialias","resize","shadow","onClick","$options","randomColors","_component_Camera","position","z","_component_Scene","background","_component_AmbientLight","color","_component_SpotLight","intensity","x","y","angle","Math","PI","penumbra","width","height","_component_Plane","_component_PhongMaterial","_component_CannonWorld","gravity","onBeforeStep","_component_InstancedMesh","count","$setup","COUNT","onCreated","initIMesh","_component_SphereGeometry","radius","_component_ToonMaterial","_Fragment","_renderList","i","_component_Box","key","depth","rotation","randFloat","rnd","randFloatSpread","rndFS","MathUtils","components","AmbientLight","Box","Camera","InstancedMesh","PhongMaterial","Plane","Renderer","Scene","SphereGeometry","SpotLight","ToonMaterial","CannonWorld","setup","methods","imesh","this","dummy","Object3D","Color","scales","Array","masses","colors","fill","map","niceColors","floor","set","scale","updateMatrix","setMatrixAt","matrix","setColorAt","instanceMatrix","needsUpdate","userData","damping","bodies","forEach","body","angularVelocity","velocity","quaternion","ci","instanceColor","__exports__","render"],"sourceRoot":""}