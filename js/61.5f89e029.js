"use strict";(self["webpackChunkwebxr_builder"]=self["webpackChunkwebxr_builder"]||[]).push([[61],{7061:function(e,t,s){s.d(t,{i:function(){return y}});var o=s(1114),n=s(9469);s(560);const a={Handedness:Object.freeze({NONE:"none",LEFT:"left",RIGHT:"right"}),ComponentState:Object.freeze({DEFAULT:"default",TOUCHED:"touched",PRESSED:"pressed"}),ComponentProperty:Object.freeze({BUTTON:"button",X_AXIS:"xAxis",Y_AXIS:"yAxis",STATE:"state"}),ComponentType:Object.freeze({TRIGGER:"trigger",SQUEEZE:"squeeze",TOUCHPAD:"touchpad",THUMBSTICK:"thumbstick",BUTTON:"button"}),ButtonTouchThreshold:.05,AxisTouchThreshold:.1,VisualResponseProperty:Object.freeze({TRANSFORM:"transform",VISIBILITY:"visibility"})};async function i(e){const t=await fetch(e);if(t.ok)return t.json();throw new Error(t.statusText)}async function r(e){if(!e)throw new Error("No basePath supplied");const t="profilesList.json",s=await i(`${e}/${t}`);return s}async function l(e,t,s=null,o=!0){if(!e)throw new Error("No xrInputSource supplied");if(!t)throw new Error("No basePath supplied");const n=await r(t);let a;if(e.profiles.some((e=>{const s=n[e];return s&&(a={profileId:e,profilePath:`${t}/${s.path}`,deprecated:!!s.deprecated}),!!a})),!a){if(!s)throw new Error("No matching profile name found");const e=n[s];if(!e)throw new Error(`No matching profile name found and default profile "${s}" missing.`);a={profileId:s,profilePath:`${t}/${e.path}`,deprecated:!!e.deprecated}}const l=await i(a.profilePath);let u;if(o){let t;if(t="any"===e.handedness?l.layouts[Object.keys(l.layouts)[0]]:l.layouts[e.handedness],!t)throw new Error(`No matching handedness, ${e.handedness}, in profile ${a.profileId}`);t.assetPath&&(u=a.profilePath.replace("profile.json",t.assetPath))}return{profile:l,assetPath:u}}const u={xAxis:0,yAxis:0,button:0,state:a.ComponentState.DEFAULT};function h(e=0,t=0){let s=e,o=t;const n=Math.sqrt(e*e+t*t);if(n>1){const n=Math.atan2(t,e);s=Math.cos(n),o=Math.sin(n)}const a={normalizedXAxis:.5*s+.5,normalizedYAxis:.5*o+.5};return a}class d{constructor(e){this.componentProperty=e.componentProperty,this.states=e.states,this.valueNodeName=e.valueNodeName,this.valueNodeProperty=e.valueNodeProperty,this.valueNodeProperty===a.VisualResponseProperty.TRANSFORM&&(this.minNodeName=e.minNodeName,this.maxNodeName=e.maxNodeName),this.value=0,this.updateFromComponent(u)}updateFromComponent({xAxis:e,yAxis:t,button:s,state:o}){const{normalizedXAxis:n,normalizedYAxis:i}=h(e,t);switch(this.componentProperty){case a.ComponentProperty.X_AXIS:this.value=this.states.includes(o)?n:.5;break;case a.ComponentProperty.Y_AXIS:this.value=this.states.includes(o)?i:.5;break;case a.ComponentProperty.BUTTON:this.value=this.states.includes(o)?s:0;break;case a.ComponentProperty.STATE:this.valueNodeProperty===a.VisualResponseProperty.VISIBILITY?this.value=this.states.includes(o):this.value=this.states.includes(o)?1:0;break;default:throw new Error(`Unexpected visualResponse componentProperty ${this.componentProperty}`)}}}class p{constructor(e,t){if(!e||!t||!t.visualResponses||!t.gamepadIndices||0===Object.keys(t.gamepadIndices).length)throw new Error("Invalid arguments supplied");this.id=e,this.type=t.type,this.rootNodeName=t.rootNodeName,this.touchPointNodeName=t.touchPointNodeName,this.visualResponses={},Object.keys(t.visualResponses).forEach((e=>{const s=new d(t.visualResponses[e]);this.visualResponses[e]=s})),this.gamepadIndices=Object.assign({},t.gamepadIndices),this.values={state:a.ComponentState.DEFAULT,button:void 0!==this.gamepadIndices.button?0:void 0,xAxis:void 0!==this.gamepadIndices.xAxis?0:void 0,yAxis:void 0!==this.gamepadIndices.yAxis?0:void 0}}get data(){const e={id:this.id,...this.values};return e}updateFromGamepad(e){if(this.values.state=a.ComponentState.DEFAULT,void 0!==this.gamepadIndices.button&&e.buttons.length>this.gamepadIndices.button){const t=e.buttons[this.gamepadIndices.button];this.values.button=t.value,this.values.button=this.values.button<0?0:this.values.button,this.values.button=this.values.button>1?1:this.values.button,t.pressed||1===this.values.button?this.values.state=a.ComponentState.PRESSED:(t.touched||this.values.button>a.ButtonTouchThreshold)&&(this.values.state=a.ComponentState.TOUCHED)}void 0!==this.gamepadIndices.xAxis&&e.axes.length>this.gamepadIndices.xAxis&&(this.values.xAxis=e.axes[this.gamepadIndices.xAxis],this.values.xAxis=this.values.xAxis<-1?-1:this.values.xAxis,this.values.xAxis=this.values.xAxis>1?1:this.values.xAxis,this.values.state===a.ComponentState.DEFAULT&&Math.abs(this.values.xAxis)>a.AxisTouchThreshold&&(this.values.state=a.ComponentState.TOUCHED)),void 0!==this.gamepadIndices.yAxis&&e.axes.length>this.gamepadIndices.yAxis&&(this.values.yAxis=e.axes[this.gamepadIndices.yAxis],this.values.yAxis=this.values.yAxis<-1?-1:this.values.yAxis,this.values.yAxis=this.values.yAxis>1?1:this.values.yAxis,this.values.state===a.ComponentState.DEFAULT&&Math.abs(this.values.yAxis)>a.AxisTouchThreshold&&(this.values.state=a.ComponentState.TOUCHED)),Object.values(this.visualResponses).forEach((e=>{e.updateFromComponent(this.values)}))}}class c{constructor(e,t,s){if(!e)throw new Error("No xrInputSource supplied");if(!t)throw new Error("No profile supplied");this.xrInputSource=e,this.assetUrl=s,this.id=t.profileId,this.layoutDescription=t.layouts[e.handedness],this.components={},Object.keys(this.layoutDescription.components).forEach((e=>{const t=this.layoutDescription.components[e];this.components[e]=new p(e,t)})),this.updateFromGamepad()}get gripSpace(){return this.xrInputSource.gripSpace}get targetRaySpace(){return this.xrInputSource.targetRaySpace}get data(){const e=[];return Object.values(this.components).forEach((t=>{e.push(t.data)})),e}updateFromGamepad(){Object.values(this.components).forEach((e=>{e.updateFromGamepad(this.xrInputSource.gamepad)}))}}const m="https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets@1.0/dist/profiles",v="generic-trigger";class f extends o.Tme{constructor(){super(),this.motionController=null,this.envMap=null}setEnvironmentMap(e){return this.envMap==e||(this.envMap=e,this.traverse((e=>{e.isMesh&&(e.material.envMap=this.envMap,e.material.needsUpdate=!0)}))),this}updateMatrixWorld(e){super.updateMatrixWorld(e),this.motionController&&(this.motionController.updateFromGamepad(),Object.values(this.motionController.components).forEach((e=>{Object.values(e.visualResponses).forEach((e=>{const{valueNode:t,minNode:s,maxNode:o,value:n,valueNodeProperty:i}=e;t&&(i===a.VisualResponseProperty.VISIBILITY?t.visible=n:i===a.VisualResponseProperty.TRANSFORM&&(t.quaternion.slerpQuaternions(s.quaternion,o.quaternion,n),t.position.lerpVectors(s.position,o.position,n)))}))})))}}function x(e,t){Object.values(e.components).forEach((e=>{const{type:s,touchPointNodeName:n,visualResponses:i}=e;if(s===a.ComponentType.TOUCHPAD)if(e.touchPointNode=t.getObjectByName(n),e.touchPointNode){const t=new o.xo$(.001),s=new o.vBJ({color:255}),n=new o.Kj0(t,s);e.touchPointNode.add(n)}else console.warn(`Could not find touch dot, ${e.touchPointNodeName}, in touchpad component ${e.id}`);Object.values(i).forEach((e=>{const{valueNodeName:s,minNodeName:o,maxNodeName:n,valueNodeProperty:i}=e;if(i===a.VisualResponseProperty.TRANSFORM){if(e.minNode=t.getObjectByName(o),e.maxNode=t.getObjectByName(n),!e.minNode)return void console.warn(`Could not find ${o} in the model`);if(!e.maxNode)return void console.warn(`Could not find ${n} in the model`)}e.valueNode=t.getObjectByName(s),e.valueNode||console.warn(`Could not find ${s} in the model`)}))}))}function N(e,t){x(e.motionController,t),e.envMap&&t.traverse((t=>{t.isMesh&&(t.material.envMap=e.envMap,t.material.needsUpdate=!0)})),e.add(t)}class y{constructor(e=null){this.gltfLoader=e,this.path=m,this._assetCache={},this.gltfLoader||(this.gltfLoader=new n.E)}createControllerModel(e){const t=new f;let s=null;return e.addEventListener("connected",(e=>{const o=e.data;"tracked-pointer"===o.targetRayMode&&o.gamepad&&l(o,this.path,v).then((({profile:e,assetPath:n})=>{t.motionController=new c(o,e,n);const a=this._assetCache[t.motionController.assetUrl];if(a)s=a.scene.clone(),N(t,s);else{if(!this.gltfLoader)throw new Error("GLTFLoader not set.");this.gltfLoader.setPath(""),this.gltfLoader.load(t.motionController.assetUrl,(e=>{this._assetCache[t.motionController.assetUrl]=e,s=e.scene.clone(),N(t,s)}),null,(()=>{throw new Error(`Asset ${t.motionController.assetUrl} missing or malformed.`)}))}})).catch((e=>{console.warn(e)}))})),e.addEventListener("disconnected",(()=>{t.motionController=null,t.remove(s),s=null})),t}}}}]);
//# sourceMappingURL=61.5f89e029.js.map