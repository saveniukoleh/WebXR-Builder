{"version":3,"file":"js/three-webvr-examples-handinput.ac5322aa.js","mappings":"6LACOA,MAAM,gB,GACTC,EAAAA,EAAAA,GAAkC,UAA9B,6BAAyB,G,GAC7BA,EAAAA,EAAAA,GAA8C,OAAzCC,GAAG,iCAA+B,S,GADvCC,EACAC,G,0CAFFC,EAAAA,EAAAA,IAGM,MAHNC,EAGMC,E,sDCFR,MAAMC,EAA4B,4FAElC,MAAMC,EAELC,WAAAA,CAAaC,EAAWC,EAAYC,EAAMC,EAAYC,EAAS,MAE9DC,KAAKJ,WAAaA,EAClBI,KAAKL,UAAYA,EAEjBK,KAAKC,MAAQ,GAEG,OAAXF,IAEJA,EAAS,IAAIG,EAAAA,EACbH,EAAOI,QAASN,GAAQL,IAIzBO,EAAOK,KAAO,GAAEN,SAAkBO,IAEjC,MAAMC,EAASD,EAAKE,MAAMC,SAAU,GACpCR,KAAKL,UAAUc,IAAKH,GAEpB,MAAMI,EAAOJ,EAAOK,oBAAqB,OAAQ,eACjDD,EAAKE,eAAgB,EACrBF,EAAKG,YAAa,EAClBH,EAAKI,eAAgB,EAErB,MAAMC,EAAS,CACd,QACA,mBACA,yBACA,uBACA,YACA,0BACA,gCACA,oCACA,8BACA,mBACA,2BACA,iCACA,qCACA,+BACA,oBACA,yBACA,+BACA,mCACA,6BACA,kBACA,0BACA,gCACA,oCACA,8BACA,oBAGDA,EAAOC,SAASC,IAEf,MAAMC,EAAOZ,EAAOa,gBAAiBF,QAEvBG,IAATF,EAEJA,EAAKD,UAAYA,EAIjBI,QAAQC,KAAO,iBAAgBL,QAAgBnB,eAIhDE,KAAKC,MAAMsB,KAAML,EAAM,GAErB,GAIL,CAEAM,UAAAA,GAGC,MAAMC,EAAWzB,KAAKJ,WAAWmB,OAEjC,IAAM,IAAIW,EAAI,EAAGA,EAAI1B,KAAKC,MAAM0B,OAAQD,IAAO,CAE9C,MAAMR,EAAOlB,KAAKC,MAAOyB,GAEzB,GAAKR,EAAO,CAEX,MAAMU,EAAUH,EAAUP,EAAKD,WAE/B,GAAKW,EAAQC,QAAU,CAEtB,MAAMC,EAAWF,EAAQE,SAEzBZ,EAAKY,SAASC,KAAMD,GACpBZ,EAAKc,WAAWD,KAAMH,EAAQI,WAG/B,CAED,CAED,CAED,ECxGD,MAAMC,EAAe,IACfC,EAAiB,mBAEvB,MAAMC,UAAwBC,EAAAA,IAE7B1C,WAAAA,CAAaE,EAAYG,EAAS,MAEjCsC,QAEArC,KAAKJ,WAAaA,EAClBI,KAAKsC,iBAAmB,KACxBtC,KAAKuC,OAAS,KACdvC,KAAKD,OAASA,EAEdC,KAAKU,KAAO,KAEZd,EAAW4C,iBAAkB,aAAeC,IAE3C,MAAMC,EAAgBD,EAAME,KAEvBD,EAAcE,OAAU5C,KAAKsC,mBAEjCtC,KAAK0C,cAAgBA,EAErB1C,KAAKsC,iBAAmB,IAAI7C,EAAiBO,KAAMJ,EAAYI,KAAKH,KAAM6C,EAAc5C,WAAYE,KAAKD,QAE1G,IAIDH,EAAW4C,iBAAkB,gBAAgB,KAE5CxC,KAAK6C,QACL7C,KAAKsC,iBAAmB,IAAI,GAI9B,CAEAQ,iBAAAA,CAAmBC,GAElBV,MAAMS,kBAAmBC,GAEpB/C,KAAKsC,kBAETtC,KAAKsC,iBAAiBd,YAIxB,CAEAwB,kBAAAA,GAEC,MAAMC,EAAiBjD,KAAKJ,WAAWmB,OAAQmB,GAC/C,OAAKe,EAEGA,EAAenB,SAIf,IAIT,CAEAoB,kBAAAA,CAAoBC,GAEnB,MAAMC,EAAkBpD,KAAKgD,qBAC7B,GAAKI,EAAkB,CAEtB,MAAMC,EAAc,IAAIC,EAAAA,IAAQF,EAAiBnB,GAC3CsB,GAAM,IAAIC,EAAAA,KAAOC,cAAeN,GACtC,OAAOE,EAAYK,cAAeH,EAEnC,CAEC,OAAO,CAIT,CAEAI,WAAAA,CAAaC,GAEP5D,KAAKkD,mBAAoBU,GAE7BA,EAAOC,UAIPD,EAAOE,UAIHF,EAAOG,aAEXH,EAAOI,cAIT,ECtGD,MAAMC,EAAY,IACZC,EAAkB,IAClBC,EAAY,IACZC,EAAsB,IACtBC,EAAsB,EACtBC,EAAsB,GACtBC,EAAuB,KACvBC,EAAsB,IACtBC,EAA0B,KAC1BC,EAAiB,KACjBC,EAAmB,GACnBC,EAAgB,GAChBC,EAA2B,IAC3BC,EAAwB,IAAIC,EAAAA,IAAe,EAAG,EAAG,GACjDC,EAAwB,IAAID,EAAAA,IAAe,EAAG,EAAG,GAEjDE,EAAgB,IAChBC,EAAsB,IAE5B,MAAMC,UAA+BJ,EAAAA,IAEpCrF,WAAAA,CAAakD,EAAMhD,GAElByC,QAEArC,KAAK4C,KAAOA,EACZ5C,KAAKJ,WAAaA,EAGlBI,KAAKsC,iBAAmB,KACxBtC,KAAKuC,OAAS,KACdvC,KAAKU,KAAO,KAEZV,KAAKoF,gBAAkB,KACvBpF,KAAKqF,YAAc,KACnBrF,KAAKsF,cAAgB,KAErBtF,KAAKuF,SAAU,EACfvF,KAAKwF,UAAW,EAEhBxF,KAAKyF,aAAe,KAEpBzF,KAAK0F,UAAY,KAEjB1F,KAAK2F,aAAe3F,KAAK2F,aAAaC,KAAM5F,MAC5CA,KAAK6F,gBAAkB7F,KAAK6F,gBAAgBD,KAAM5F,MAClDA,KAAK4C,KAAKJ,iBAAkB,YAAaxC,KAAK2F,cAC9C3F,KAAK4C,KAAKJ,iBAAkB,eAAgBxC,KAAK6F,gBAElD,CAEAF,YAAAA,CAAclD,GAEb,MAAMC,EAAgBD,EAAME,KACvBD,EAAcE,OAElB5C,KAAK6B,SAAU,EACf7B,KAAK0C,cAAgBA,EAErB1C,KAAK8F,gBAIP,CAEAD,eAAAA,GAEC7F,KAAK6B,SAAU,EACf7B,KAAK0C,cAAgB,KAEhB1C,KAAKoF,iBAAkBpF,KAAKoF,gBAAgBW,UAC5C/F,KAAKqF,aAAerF,KAAKqF,YAAYW,UAAWhG,KAAKqF,YAAYW,SAASD,UAE/E/F,KAAK6C,OAEN,CAEAoD,iBAAAA,CAAmBC,EAAUC,EAAYC,GAExC,MAAMC,EAAgBF,EAAWG,QACjC,IAAM,IAAI5E,EAAI,EAAGA,EAAIiD,EAAkBjD,IAAO,CAE7C2E,EAAcE,eAAgBvB,EAAmB,EAAVwB,KAAKC,GAAW9B,GACvD,MAAM+B,EAAMN,EAAYzB,EAAmBjD,EAC3CwE,EAAU,EAAIQ,GAAQL,EAAcM,EACpCT,EAAU,EAAIQ,EAAM,GAAML,EAAcO,EACxCV,EAAU,EAAIQ,EAAM,GAAML,EAAcQ,CAEzC,CAED,CAEAC,sBAAAA,CAAwBC,GAEvB,MAAMb,EAAWlG,KAAKoF,gBAAgB4B,WAAWlF,SAASmF,MAEpDC,EAAgB,IAAInC,EAAAA,IACzBR,EACA,GACE,GAAMG,EAAiBqC,IAE1B/G,KAAKiG,kBAAmBC,EAAUgB,EAAe,GAGjD,MAAMC,EAAW,IAAIpC,EAAAA,IACpByB,KAAKY,IAAOZ,KAAKC,GAAK5B,EAA6B,KAAQkC,EAC3DP,KAAKa,IAAOb,KAAKC,GAAK5B,EAA6B,KAAQkC,EAC3D,GAED,IAAM,IAAIrF,EAAI,EAAGA,EAAIkD,EAAelD,IAEnC1B,KAAKiG,kBAAmBC,EAAUiB,EAAUzF,EAAI,GAChDyF,EAASZ,eACRzB,EACE0B,KAAKC,GAAK5B,EAA6B,MAA0B,EAAlBD,IAMnD,MAAM0C,EAAmB3C,GAAqB,EAAIC,GAC5C2C,EAAkB5C,GAAqB,EAAIC,GAAkB,EAC7D4C,EAAc,IAAIzC,EAAAA,IACvB,EACA,GACE,GAAML,EAAiBqC,IAE1Bb,EAA6B,EAAnBoB,GAAyBE,EAAYb,EAC/CT,EAA6B,EAAnBoB,EAAuB,GAAME,EAAYZ,EACnDV,EAA6B,EAAnBoB,EAAuB,GAAME,EAAYX,EACnD,MAAMY,EAAa,IAAI1C,EAAAA,IAAe,EAAG,EAAGgC,GAC5Cb,EAA4B,EAAlBqB,GAAwBE,EAAWd,EAC7CT,EAA4B,EAAlBqB,EAAsB,GAAME,EAAWb,EACjDV,EAA4B,EAAlBqB,EAAsB,GAAME,EAAWZ,EAEjD7G,KAAKoF,gBAAgBsC,aACpB,WACA,IAAI3C,EAAAA,IAA8BmB,EAAU,GAI9C,CAEAJ,aAAAA,GAEC,IAAIpE,EAAGiG,EACP,MAAMzB,EAAW,IAAI0B,MAC+B,IAA/ChD,EAAgB,GAAMD,EAAmB,IAC5CkD,KAAM,GAEFC,EAAU,GAWhB,IAVA9H,KAAKoF,gBAAkB,IAAIL,EAAAA,IAE3B/E,KAAKoF,gBAAgBsC,aACpB,WACA,IAAI3C,EAAAA,IAA8BmB,EAAU,IAG7ClG,KAAK8G,uBAAwBtC,GAGvB9C,EAAI,EAAGA,EAAIkD,EAAelD,IAAO,CAEtC,IAAMiG,EAAI,EAAGA,EAAIhD,EAAmB,EAAGgD,IAEtCG,EAAQvG,KACPG,EAAIiD,EAAmBgD,EACvBjG,EAAIiD,EAAmBgD,EAAI,GACzBjG,EAAI,GAAMiD,EAAmBgD,GAEhCG,EAAQvG,KACPG,EAAIiD,EAAmBgD,EAAI,GACzBjG,EAAI,GAAMiD,EAAmBgD,EAAI,GACjCjG,EAAI,GAAMiD,EAAmBgD,GAKjCG,EAAQvG,MACLG,EAAI,GAAMiD,EAAmB,EAC/BjD,EAAIiD,GACFjD,EAAI,GAAMiD,EAAmB,GAEhCmD,EAAQvG,KACPG,EAAIiD,GACFjD,EAAI,GAAMiD,GACVjD,EAAI,GAAMiD,EAAmB,EAGjC,CAGA,MAAM2C,EAAmB3C,GAAqB,EAAIC,GAC5C2C,EAAkB5C,GAAqB,EAAIC,GAAkB,EAEnE,IAAMlD,EAAI,EAAGA,EAAIiD,EAAmB,EAAGjD,IAEtCoG,EAAQvG,KAAM+F,EAAkB5F,EAAI,EAAGA,GACvCoG,EAAQvG,KACPgG,EACA7F,EAAIiD,EAAmBC,EACvBlD,EAAIiD,EAAmBC,EAAgB,GAKzCkD,EAAQvG,KAAM+F,EAAkB,EAAG3C,EAAmB,GACtDmD,EAAQvG,KACPgG,EACA5C,GAAqBC,EAAgB,GAAM,EAC3CD,EAAmBC,GAGpB,MAAMoB,EAAW,IAAIjB,EAAAA,IACrBiB,EAAS+B,aAAc,EACvB/B,EAASgC,QAAU1D,EAEnBtE,KAAKoF,gBAAgB6C,SAAUH,GAE/B9H,KAAKqF,YAAc,IAAIN,EAAAA,IAAY/E,KAAKoF,gBAAiBY,GAEzDhG,KAAKqF,YAAYvD,SAASoG,IAAK,EAAG,GAAK,EAAI1D,GAC3CxE,KAAKsF,cAAgB,IAAIP,EAAAA,IACzB/E,KAAKsF,cAAc7E,IAAKT,KAAKqF,aAE7BrF,KAAK0F,UAAY,IAAIX,EAAAA,IAGrB,MAAMoD,EAAiB,IAAIpD,EAAAA,IAAsBE,EAAe,GAAI,IAC9DmD,EAAiB,IAAIrD,EAAAA,IAC3BqD,EAAeL,aAAc,EAC7BK,EAAeJ,QAAU1D,EAEzBtE,KAAKyF,aAAe,IAAIV,EAAAA,IAAYoD,EAAgBC,GACpDpI,KAAKsF,cAAc7E,IAAKT,KAAKyF,cAE7BzF,KAAKS,IAAKT,KAAKsF,cAEhB,CAEA+C,gBAAAA,GAEC,GAAKrI,KAAK0F,UAAY,CAErB,MAAM4C,EAAgBtI,KAAKsF,cAAciD,YACnCC,EAAa,IAAIzD,EAAAA,IACvByD,EAAWC,WAAWC,gBAAiBJ,GACvCtI,KAAK0F,UAAUiD,IAAIC,OAAOC,sBAAuBP,GACjDtI,KAAK0F,UAAUiD,IAAIG,UAAUZ,IAAK,EAAG,GAAK,GAAIa,aAAcP,EAE7D,CAED,CAEAQ,cAAAA,GAEChJ,KAAKsF,cAAczD,QAAU7B,KAAKJ,WAAWiC,QAC7C,MAAMoH,EAAWjJ,KAAK4C,KAAK7B,OAAQ,oBAC7BmI,EAAWlJ,KAAK4C,KAAK7B,OAAQ,aAC7BoI,EAAWF,EAASnH,SAASsH,WAAYF,EAASpH,UAClDA,EAAWmH,EAASnH,SACxBwE,QACA7F,IAAKyI,EAASpH,UACduH,eAAgB,IAClBrJ,KAAKsF,cAAcxD,SAASC,KAAMD,GAClC9B,KAAKsF,cAActD,WAAWD,KAAM/B,KAAKJ,WAAWoC,YAEpDhC,KAAKuF,QAAU4D,GAAYjF,EAE3B,MAAMoF,GAAeH,EAAWhF,IAAgBF,EAAYE,GACtDoF,GAAeJ,EAAWhF,IAAgBD,EAAkBC,GAClE,GAAKmF,EAAa,EAEjBtJ,KAAK8G,uBAAwBtC,GAC7BxE,KAAKqF,YAAYvD,SAASoG,IAAK,EAAG,GAAK,EAAI1D,GAC3CxE,KAAKqF,YAAYW,SAASgC,QAAU1D,OAE9B,GAAKgF,EAAa,EAAI,CAE5B,MAAMvC,GACCvC,EAAsBC,GAA4B6E,EACpD7E,EACLzE,KAAK8G,uBAAwBC,GACxBwC,EAAa,GAEjBvJ,KAAKqF,YAAYvD,SAASoG,IACzB,EACA,GACE,EAAInB,GAAe,EAAIwC,GAAenF,GAEzCpE,KAAKqF,YAAYW,SAASgC,QACpB1D,GACE,EAAIiF,IAAiBlF,EAAsBC,KAInDtE,KAAKqF,YAAYvD,SAASoG,IAAK,EAAG,GAAK,EAAInB,GAC3C/G,KAAKqF,YAAYW,SAASgC,QAAU1D,EAItC,MAECtE,KAAK8G,uBAAwBrC,GAC7BzE,KAAKqF,YAAYvD,SAASoG,IACzB,EACA,GACE,EAAIzD,EAA0BL,GAEjCpE,KAAKqF,YAAYW,SAASgC,QAAU3D,EAIrCrE,KAAKyF,aAAaO,SAASgC,QAAUhI,KAAKqF,YAAYW,SAASgC,OAEhE,CAEAlF,iBAAAA,CAAmBC,GAElBV,MAAMS,kBAAmBC,GACpB/C,KAAKoF,kBAETpF,KAAKgJ,iBACLhJ,KAAKqI,mBAIP,CAEAmB,SAAAA,GAEC,OAAOxJ,KAAKuF,OAEb,CAEAkE,WAAAA,CAAajE,GAEZxF,KAAKwF,SAAWA,CAEjB,CAEAkE,UAAAA,GAEC,OAAO1J,KAAKwF,QAEb,CAEAmE,eAAAA,CAAiBrJ,EAAQsJ,GAAY,GAEpC,GAAK5J,KAAK0F,UAET,OAAO1F,KAAK0F,UAAUiE,gBAAiBrJ,EAAQsJ,EAIjD,CAEAC,gBAAAA,CAAkBC,EAASF,GAAY,GAEtC,GAAK5J,KAAK0F,UAET,OAAO1F,KAAK0F,UAAUmE,iBAAkBC,EAASF,EAInD,CAEAG,kBAAAA,CAAoBD,EAASF,GAAY,GAExC,GAAK5J,KAAK0F,YAAe1F,KAAKwF,SAAW,CAExC,MAAMwE,EAAgBhK,KAAK0F,UAAUmE,iBAAkBC,EAASF,GAC1Dd,EAAY,IAAI/D,EAAAA,IAAe,EAAG,GAAK,GAC7C,GAAKiF,EAAcrI,OAAS,EAAI,CAE/B,MAAMsI,EAAeD,EAAe,GAC9Bb,EAAWc,EAAad,SAC9BnJ,KAAKyF,aAAa3D,SAASC,KAAM+G,EAAUO,eAAgBF,GAE5D,MAECnJ,KAAKyF,aAAa3D,SAASC,KAAM+G,EAAUO,eAAgBnE,GAI7D,CAED,CAEAgF,SAAAA,CAAWf,GAEV,MAAML,EAAY,IAAI/D,EAAAA,IAAe,EAAG,GAAK,GACxC/E,KAAK0F,YAAe1F,KAAKwF,UAE7BxF,KAAKyF,aAAa3D,SAASC,KAAM+G,EAAUO,eAAgBF,GAI7D,CAEApD,OAAAA,GAEC/F,KAAK6F,kBACL7F,KAAK4C,KAAKuH,oBAAqB,YAAanK,KAAK2F,cACjD3F,KAAK4C,KAAKuH,oBAAqB,eAAgBnK,KAAK6F,gBAErD,ECtZD,SAASuE,EAAYC,EAASC,GAE7B,MAAMC,EAASC,SAASC,cAAe,UACjCC,EAAUH,EAAOI,WAAY,MACnC,IAAIC,EAAU,KACd,MAAMC,EAAa,IACnBH,EAAQI,KAAO,UAAYD,EAAa,WACxCD,EAAUF,EAAQK,YAAaV,GAC/B,MAAMW,EAAYJ,EAAQK,MAC1BV,EAAOU,MAAQD,EACfT,EAAOD,OAASO,EAChBH,EAAQI,KAAO,UAAYD,EAAa,WACxCH,EAAQQ,UAAY,SACpBR,EAAQS,aAAe,SACvBT,EAAQU,UAAY,UACpBV,EAAQW,SAAUhB,EAASW,EAAY,EAAGH,EAAa,GAEvD,MAAMS,EAAU,IAAIvG,EAAAA,IAAewF,GACnCe,EAAQC,aAAc,EAEtB,MAAMvF,EAAW,IAAIjB,EAAAA,IAAyB,CAC7CyG,MAAO,SACPC,KAAM1G,EAAAA,IACN2G,IAAKJ,EACLvD,aAAa,IAER4D,EAAW,IAAI5G,EAAAA,IAClBuF,EAASU,EAAcH,EACzBP,GAEKsB,EAAQ,IAAI7G,EAAAA,IAAY4G,EAAU3F,GACxC,OAAO4F,CAER,C,aJZA,GAEEC,OAAAA,GACE,MAAMzJ,UAAiB0J,EAAAA,IAEvB1J,EAAS2J,OAAS,CAChBzL,OAAQ,CAAE0L,KAAMC,EAAAA,GAAMC,MAGxB,MAAMC,UAAeL,EAAAA,IAErBK,EAAOJ,OAAS,CAEdK,UAAW,CAAEJ,KAAMC,EAAAA,GAAMI,OAAQC,QAAS,QAC1CC,UAAW,CAAEP,KAAMC,EAAAA,GAAMI,OAAQC,QAAS,QAC1CE,OAAQ,CACNR,KAAMC,EAAAA,GAAMC,IACZI,QAASA,SAMb,MAAMG,UAAqBC,EAAAA,GACzBC,OAAAA,GACE3M,KAAK4M,QAAQC,QAAQC,QAAQ9L,SAAS+L,IACpC,MAAMnJ,EAASmJ,EAAOC,oBAAoBb,GACpCc,EAAaF,EAAOG,aAAa9K,GAAU9B,OACzB,QAApBsD,EAAOwI,UACTa,EAAWE,MAAMjF,IAAI,EAAG,EAAG,GAE3B+E,EAAWE,MAAMjF,IAAI,IAAK,IAAK,KAGT,WAApBtE,EAAOwI,WAA8C,WAApBxI,EAAO2I,WAC1C3I,EAAO4I,SAKT5I,EAAO2I,UAAY3I,EAAOwI,UAC1BxI,EAAOwI,UAAY,MAAK,GAE5B,EAGFK,EAAaG,QAAU,CACrBC,QAAS,CACPO,WAAY,CAACjB,KAIjB,MAAMkB,UAAkBvB,EAAAA,IAExBuB,EAAUtB,OAAS,CAEjBuB,MAAO,CAAEtB,KAAMC,EAAAA,GAAMI,OAAQC,QAAS,QACtCiB,eAAgB,CAAEvB,KAAMC,EAAAA,GAAMC,IAAKI,QAAS,MAC5CkB,gBAAiB,CAAExB,KAAMC,EAAAA,GAAMC,IAAKI,QAAS,OAG/C,MAAMmB,UAAwBf,EAAAA,GAC5BC,OAAAA,GACE3M,KAAK4M,QAAQc,UAAUZ,QAAQ9L,SAAS+L,IACtC,MAAMW,EAAYX,EAAOC,oBAAoBK,GACvC/M,EAASyM,EAAOG,aAAa9K,GAAU9B,OAK7C,OAJgC,MAA5BoN,EAAUH,iBACZG,EAAUH,eAAiBjN,EAAOqN,QAG5BD,EAAUJ,OAChB,IAAK,iBACHI,EAAUF,gBAAgBhN,SAAS,GAAGoN,OAAOtN,GAC7CoN,EAAUJ,MAAQ,WAClB,MACF,IAAK,iBACHI,EAAUH,eAAeK,OAAOtN,GAChCoN,EAAUJ,MAAQ,WAClB,MACF,QACEhN,EAAO6M,MAAMjF,IAAI,EAAG,EAAG,GAC3B,GAEJ,EAGFuF,EAAgBb,QAAU,CACxBc,UAAW,CACTN,WAAY,CAACC,KAIjB,MAAMQ,UAAsBC,EAAAA,IAE5B,MAAMC,UAAsBrB,EAAAA,GAC1BsB,IAAAA,CAAKhH,GACHhH,KAAKiO,aAAejH,EAAWiH,YACjC,CAEAtB,OAAAA,GACE3M,KAAKiO,aAAajN,SAASkN,IACzB,IAAI/E,EAAW,KACXgF,EAAqB,KAWzB,GAVAnO,KAAK4M,QAAQwB,cAActB,QAAQ9L,SAAS+L,IAC1C,MAAMzM,EAASyM,EAAOG,aAAa9K,GAAU9B,OACvC0J,EAAgBkE,EAAGvE,gBAAgBrJ,GAAQ,GAC7C0J,GAAiBA,EAAcrI,OAAS,IAC1B,MAAZwH,GAAoBa,EAAc,GAAGb,SAAWA,KAClDA,EAAWa,EAAc,GAAGb,SAC5BgF,EAAqBpB,EAEzB,IAEE5D,EAAU,CAEZ,GADA+E,EAAGhE,UAAUf,GACTgF,EAAmBE,aAAalC,GAAS,CAC3C,MAAMvI,EAASuK,EAAmBnB,oBAAoBb,GAClD+B,EAAG1E,YACL5F,EAAOwI,UAAY,UACU,WAApBxI,EAAOwI,YAChBxI,EAAOwI,UAAY,UAEvB,CAEA,GAAI+B,EAAmBE,aAAahB,GAAY,CAC9C,MAAMK,EACJS,EAAmBnB,oBAAoBK,GACnC/M,EAAS6N,EAAmBjB,aAAa9K,GAAU9B,OACzDA,EAAO6M,MAAMjF,IAAI,IAAK,IAAK,KACvBgG,EAAG1E,YACA0E,EAAGxE,cAAmC,YAAnBgE,EAAUJ,QAChCI,EAAUJ,MAAQ,iBAClBI,EAAUF,gBAAkBU,EAC5BA,EAAGzE,aAAY,IAGbyE,EAAGxE,cAAmC,YAAnBgE,EAAUJ,QAC/BjM,QAAQiN,IAAI,SACZZ,EAAUJ,MAAQ,iBAClBI,EAAUF,gBAAkB,KAC5BU,EAAGzE,aAAY,GAGrB,CACF,MACEyE,EAAGhE,UAAU,IACf,GAEJ,EAGF6D,EAAcnB,QAAU,CACtBwB,cAAe,CACbhB,WAAY,CAACS,KAIjB,MAAMU,UAA6BT,EAAAA,IAEnC,MAAMU,UAA0B9B,EAAAA,GAC9BsB,IAAAA,CAAKhH,GACHhH,KAAKyO,YAAczH,EAAWyH,WAChC,CAEA9B,OAAAA,GACE,IAAI9K,GAAU,EACd7B,KAAKyO,YAAYzN,SAASpB,IACpBA,EAAWiC,UACbA,GAAU,EACZ,IAGF7B,KAAK4M,QAAQ8B,iBAAiB5B,QAAQ9L,SAAS+L,IAC7C,MAAMzM,EAASyM,EAAOG,aAAa9K,GAAU9B,OAC7CA,EAAOuB,QAAUA,CAAM,GAE3B,EAGF2M,EAAkB5B,QAAU,CAC1B8B,iBAAkB,CAChBtB,WAAY,CAACmB,KAIjB,MAAMI,UAAyB7C,EAAAA,IAE/B6C,EAAiB5C,OAAS,CACxBpF,EAAG,CAAEqF,KAAMC,EAAAA,GAAM2C,OAAQtC,QAAS,GAClC1F,EAAG,CAAEoF,KAAMC,EAAAA,GAAM2C,OAAQtC,QAAS,GAClCzF,EAAG,CAAEmF,KAAMC,EAAAA,GAAM2C,OAAQtC,QAAS,IAGpC,MAAMuC,UAAwBf,EAAAA,IAE9B,MAAMgB,UAA0BpC,EAAAA,GAC9BsB,IAAAA,CAAKhH,GACHhH,KAAK+O,OAAS/H,EAAW+H,OACzB/O,KAAKgP,SAAWhI,EAAWgI,QAC7B,CAEArC,OAAAA,GACE3M,KAAK4M,QAAQqC,gBAAgBnC,QAAQ9L,SAAS+L,IAC5C,GAAI/M,KAAKgP,SAASE,GAAGC,aAAc,CACjC,MAAMC,EAASrC,EAAOG,aAAayB,GAC7BrO,EAASyM,EAAOG,aAAa9K,GAAU9B,OACvC+O,EAAWrP,KAAKgP,SAASE,GAAGI,YAClChP,EAAOwB,SAAS6E,EAAI0I,EAASvN,SAAS6E,EAAIyI,EAAOzI,EACjDrG,EAAOwB,SAAS8E,EAAIyI,EAASvN,SAAS8E,EAAIwI,EAAOxI,EACjDtG,EAAOwB,SAAS+E,EAAIwI,EAASvN,SAAS+E,EAAIuI,EAAOvI,EACjDkG,EAAOwC,gBAAgBV,EACzB,IAEJ,EAGFC,EAAkBlC,QAAU,CAC1BqC,gBAAiB,CACf7B,WAAY,CAACyB,KAIjB,MAAMW,UAAqB1B,EAAAA,IAE3B,MAAM2B,UAAyB/C,EAAAA,GAC7BsB,IAAAA,GACEhO,KAAK0P,iBAAkB,CACzB,CAEA/C,OAAAA,GACO3M,KAAK0P,iBAIV1P,KAAK4M,QAAQ+C,aAAa7C,QAAQ9L,SAAS+L,IACzC,MAAMzM,EAASyM,EAAOG,aAAa9K,GAAU9B,OAE7CA,EAAO0F,SAASwF,MAAMoE,OAAuB,SAAhBpJ,KAAKqJ,UAElCvP,EAAOwB,SAAS6E,EAAoB,EAAhBH,KAAKqJ,SAAe,EACxCvP,EAAOwB,SAAS8E,EAAoB,EAAhBJ,KAAKqJ,SACzBvP,EAAOwB,SAAS+E,EAAoB,EAAhBL,KAAKqJ,SAAe,EAExCvP,EAAOwP,SAASnJ,EAAoB,EAAhBH,KAAKqJ,SAAerJ,KAAKC,GAC7CnG,EAAOwP,SAASlJ,EAAoB,EAAhBJ,KAAKqJ,SAAerJ,KAAKC,GAC7CnG,EAAOwP,SAASjJ,EAAoB,EAAhBL,KAAKqJ,SAAerJ,KAAKC,GAE7CnG,EAAO6M,MAAMxG,EAAIH,KAAKqJ,SAAW,GACjCvP,EAAO6M,MAAMvG,EAAIJ,KAAKqJ,SAAW,GACjCvP,EAAO6M,MAAMtG,EAAIL,KAAKqJ,SAAW,GACjC7P,KAAK0P,iBAAkB,CAAI,GAE/B,EAGFD,EAAiB7C,QAAU,CACzB+C,aAAc,CACZvC,WAAY,CAACoC,KAIjB,MAAMO,EAAQ,IAAIC,EAAAA,GACZC,EAAQ,IAAIlL,EAAAA,IAClB,IAAIgK,EAAQxO,EAAOyO,EAKnB,SAASkB,EAAevJ,EAAGC,EAAGC,EAAG2E,GAC/B,MAAMG,EAAW,IAAI5G,EAAAA,IAAkB4B,EAAGC,EAAGC,GACvCb,EAAW,IAAIjB,EAAAA,IAAwB,CAAEyG,MAAOA,IAChDyB,EAAa,IAAIlI,EAAAA,IAAW4G,EAAU3F,GAC5C,OAAOiH,CACT,CAEA,SAASe,IAEP,MAAMmC,EAAkB3F,SAAS4F,eAC/B,iCAEIC,EAAY7F,SAASC,cAAc,OACzC0F,EAAgBG,YAAYD,GAE5B9P,EAAQ,IAAIwE,EAAAA,IACZxE,EAAMgQ,WAAa,IAAIxL,EAAAA,IAAY,SAEnCgK,EAAS,IAAIhK,EAAAA,IACX,GACAyL,OAAOC,WAAaD,OAAOE,YAC3B,GACA,IAEF3B,EAAOjN,SAASoG,IAAI,EAAG,IAAK,IAE5B3H,EAAME,IAAI,IAAIsE,EAAAA,IAAsB,SAAU,SAAU,IAExD,MAAM4L,EAAQ,IAAI5L,EAAAA,IAAuB,SAAU,GACnD4L,EAAM7O,SAASoG,IAAI,EAAG,EAAG,GACzByI,EAAM9P,YAAa,EACnB8P,EAAMC,OAAO7B,OAAO8B,IAAM,EAC1BF,EAAMC,OAAO7B,OAAO+B,QAAU,EAC9BH,EAAMC,OAAO7B,OAAOgC,MAAQ,EAC5BJ,EAAMC,OAAO7B,OAAOiC,MAAQ,EAC5BL,EAAMC,OAAOK,QAAQ/I,IAAI,KAAM,MAC/B3H,EAAME,IAAIkQ,GAEV3B,EAAW,IAAIjK,EAAAA,IAAoB,CAAEmM,WAAW,IAChDlC,EAASmC,cAAcX,OAAOY,kBAC9BpC,EAASqC,QAAQb,OAAOC,WAAYD,OAAOE,aAC3C1B,EAASsC,UAAUC,SAAU,EAC7BvC,EAASE,GAAGqC,SAAU,EACtBvC,EAASE,GAAGsC,kBAAmB,EAE/BnB,EAAUC,YAAYtB,EAASyC,YAE/B,MAAMC,EAAc,CAClBC,iBAAkB,CAAC,kBAGrBnH,SAASoH,KAAKtB,YAAYuB,EAAAA,EAASC,aAAa9C,EAAU0C,IAG1D,MAAMK,EAAc/C,EAASE,GAAG8C,cAAc,GAC9CzR,EAAME,IAAIsR,GAEV,MAAME,EAAcjD,EAASE,GAAG8C,cAAc,GAC9CzR,EAAME,IAAIwR,GAEV,MAAMC,EAAyB,IAAIC,EAAAA,EAG7BC,EAAkBpD,EAASE,GAAGmD,kBAAkB,GACtDD,EAAgB3R,IACdyR,EAAuBI,sBAAsBF,IAE/C7R,EAAME,IAAI2R,GAEV,MAAMG,EAAQvD,EAASE,GAAGsD,QAAQ,GAClCD,EAAM9R,IAAI,IAAI0B,EAAgBoQ,IAC9B,MAAME,EAAe,IAAItN,EAAuBoN,EAAOR,GACvDQ,EAAM9R,IAAIgS,GAEVlS,EAAME,IAAI8R,GAGV,MAAMG,EAAkB1D,EAASE,GAAGmD,kBAAkB,GACtDK,EAAgBjS,IACdyR,EAAuBI,sBAAsBI,IAE/CnS,EAAME,IAAIiS,GAEV,MAAMC,EAAQ3D,EAASE,GAAGsD,QAAQ,GAClCG,EAAMlS,IAAI,IAAI0B,EAAgBwQ,IAC9B,MAAMC,EAAe,IAAIzN,EAAuBwN,EAAOV,GACvDU,EAAMlS,IAAImS,GACVrS,EAAME,IAAIkS,GAGV,MAAME,EAAgB,IAAI9N,EAAAA,IAAoB,EAAG,GAC3C+N,EAAgB,IAAI/N,EAAAA,IAAwB,CAAEyG,MAAO,UACrDuH,EAAQ,IAAIhO,EAAAA,IAAW8N,EAAeC,GAC5CC,EAAMjD,SAASnJ,GAAKH,KAAKC,GAAK,EAC9BsM,EAAMjS,eAAgB,EACtBP,EAAME,IAAIsS,GAEV,MAAMC,EAAe,IAAIjO,EAAAA,IAAoB,IAAM,IAC7CkO,EAAe,IAAIlO,EAAAA,IAAwB,CAC/CiD,QAAS,EACTD,aAAa,IAETmL,EAAW,IAAInO,EAAAA,IAAWiO,EAAcC,GAC9CC,EAASpR,SAASoG,IAAI,GAAK,GAAI,GAC/BgL,EAASpD,SAASlJ,GAAKJ,KAAKC,GAAK,GACjClG,EAAME,IAAIyS,GAEV,MAAMC,EAAcjD,EAAe,GAAK,GAAK,IAAM,SAC7CkD,EAAkBhJ,EAAW,QAAS,KAC5C+I,EAAY1S,IAAI2S,GAChBA,EAAgBtR,SAASoG,IAAI,EAAG,EAAG,OACnCiL,EAAYrR,SAASoG,IAAI,GAAI,IAAM,GACnCgL,EAASzS,IAAI0S,GAEb,MAAME,EAAanD,EAAe,GAAK,GAAK,IAAM,UAC5CoD,EAAiBlJ,EAAW,OAAQ,KAC1CiJ,EAAW5S,IAAI6S,GACfA,EAAexR,SAASoG,IAAI,EAAG,EAAG,OAClCmL,EAAWvR,SAASoG,IAAI,GAAI,IAAM,GAClCgL,EAASzS,IAAI4S,GAEb,MAAME,EAAkBnJ,EACtB,yDACA,KAEFmJ,EAAgBzR,SAASoG,IAAI,EAAG,KAAM,IACtC3H,EAAME,IAAI8S,GAEV,MAAMC,EAAWpJ,EAAW,qBAAsB,KAClDoJ,EAAS1R,SAASoG,IAAI,EAAG,KAAM,IAC/BsL,EAAS3R,SAAU,EACnBtB,EAAME,IAAI+S,GAEVzD,EACG0D,kBAAkBrR,GAClBqR,kBAAkBtH,GAClBsH,kBAAkB5F,GAClB4F,kBAAkBlF,GAClBkF,kBAAkB9E,GAClB8E,kBAAkB5E,GAClB4E,kBAAkBjE,GAClBiE,kBAAkBpG,GAErB0C,EACG2D,eAAejE,GACfiE,eAAelF,EAAmB,CACjCC,YAAa,CAAC2D,EAAiBM,KAEhCgB,eAAe5E,EAAmB,CACjCE,SAAUA,EACVD,OAAQA,IAET2E,eAAejH,GACfiH,eAAejG,GACfiG,eAAe3F,EAAe,CAC7BE,aAAc,CAACwE,EAAcG,KAGjC,IAAK,IAAIlR,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,MAAMpB,EAAS,IAAIyE,EAAAA,IACjB,IAAIA,EAAAA,IAAkB,IAAM,IAAM,KAClC,IAAIA,EAAAA,IAA0B,CAAEyG,MAAO,YAEzCjL,EAAME,IAAIH,GAEV,MAAMyM,EAASgD,EAAM4D,eACrB5G,EAAO6G,aAAa/F,GACpBd,EAAO6G,aAAapE,GACpBzC,EAAO6G,aAAaxR,EAAU,CAAE9B,OAAQA,IACxCyM,EAAO6G,aAAavG,EACtB,CAEA,MAAMwG,EAAa9D,EAAM4D,eACzBE,EAAWD,aAAa/F,GACxBgG,EAAWD,aAAajF,EAAkB,CAAEhI,EAAG,GAAKC,EAAG,EAAGC,GAAI,IAC9DgN,EAAWD,aAAa/E,GACxBgF,EAAWD,aAAaxR,EAAU,CAAE9B,OAAQ4S,IAE5C,MAAMY,EAAW/D,EAAM4D,eACvBG,EAASF,aAAa/F,GACtBiG,EAASF,aAAaxR,EAAU,CAAE9B,OAAQ6S,IAC1C,MAAMY,EAAW,WACfhE,EAAMiE,UAAUvE,GAAkBC,iBAAkB,CACtD,EAEAoE,EAASF,aAAazH,EAAQ,CAAEK,OAAQuH,IAExC,MAAME,GAAWlE,EAAM4D,eACvBM,GAASL,aAAa/F,GACtBoG,GAASL,aAAaxR,EAAU,CAAE9B,OAAQ+S,IAC1C,MAAMa,GAAW,WACfV,EAAS3R,SAAU,EACnBsS,YAAW,WACTX,EAAS3R,SAAU,EAEnBmN,GAAUE,IAAIC,cAAciF,KAC9B,GAAG,IACL,EAEAH,GAASL,aAAazH,EAAQ,CAAEK,OAAQ0H,KAExC,MAAMG,GAAWtE,EAAM4D,eACvBU,GAAST,aAAarF,GACtB8F,GAAST,aAAaxR,EAAU,CAAE9B,OAAQiT,IAE1C/C,OAAOhO,iBAAiB,SAAU8R,EACpC,CAEA,SAASA,IACPvF,EAAOwF,OAAS/D,OAAOC,WAAaD,OAAOE,YAC3C3B,EAAOyF,yBAEPxF,EAASqC,QAAQb,OAAOC,WAAYD,OAAOE,YAC7C,CAEA,SAAS+D,IACPzF,EAAS0F,iBAAiBC,EAC5B,CAEA,SAASA,IACP,MAAMC,EAAQ3E,EAAM4E,WACdC,EAAc7E,EAAM6E,YAC1B9F,EAASE,GAAG6F,aAAahG,GACzBgB,EAAMpD,QAAQiI,EAAOE,GACrB9F,EAAS2F,OAAOpU,EAAOwO,EACzB,CApOAf,IACAyG,IAsOA,MAAMO,EAAuBA,KAC3BhG,EAAS0F,iBAAiB,MAC1BlE,OAAOrG,oBAAoB,SAAUmK,GACrC9D,OAAOrG,oBAAoB,uBAAwB6K,GACnD,MAAMC,EAAWzK,SAAS4F,eAAe,YACrC6E,GACFzK,SAASoH,KAAKsD,YAAYD,EAC5B,EAIFzE,OAAOhO,iBAAiB,sBAAuBwS,EACjD,EAEAG,SAAAA,GACE3E,OAAO4E,cAAc,IAAIC,MAAM,uBACjC,G,QKhhBF,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASX,KAEpE,O,4qBCEA,SAASY,SAASC,GAEhB,IADA,IAAIC,EAAM,GACDC,EAAI,EAAGA,EAAIF,EAAW7T,OAAQ+T,IAAK,CAC1C,IAAIC,EAAIH,EAAWE,GAEnB,IAAKE,oBAAoBD,GACvB,MAAM,IAAIE,MAAO,0DAGnB,GAAiB,kBAANF,EAAgB,CACzB,IAAIG,EAA0B,QAAfH,EAAEG,SAAqB,IAAMH,EAAEG,SAC9CL,EAAIlU,KAAKuU,EAAWH,EAAE7J,UAAUiK,QAClC,MACEN,EAAIlU,KAAKoU,EAAEI,QAEf,CAEA,OAAON,EAAIO,OAAOC,KAAK,IACzB,CAGA,MAAMC,UAA8B,qBAAX1F,OAGnB2F,IACJD,WAA2C,qBAAvB1F,OAAO4F,YACvBA,YAAYD,IAAIvQ,KAAKwQ,aACrBC,KAAKF,IAAIvQ,KAAKyQ,MAEpB,SAAST,oBAAoBD,GAC3B,MACgB,kBAANA,QAA0CvU,IAAxBuU,EAAE7J,UAAUiK,SACrCJ,EAAEW,kBAA6BlV,IAAduU,EAAEI,OAExB,CAEA,MAAMQ,cACJ7W,WAAAA,CAAYqQ,GACV/P,KAAKwW,SAAW,GAChBxW,KAAKyW,gBAAkB,GACvBzW,KAAK+P,MAAQA,EACb/P,KAAK0W,mBAAqB,IAC5B,CAEAhD,cAAAA,CAAeiD,EAAa3P,GAC1B,IAAK2P,EAAYC,SACf,MAAM,IAAIf,MACP,WAAUc,EAAYE,wCAI3B,QAAoCzV,IAAhCpB,KAAKgU,UAAU2C,GAEjB,OADAtV,QAAQC,KAAM,WAAUqV,EAAYG,kCAC7B9W,KAGT,IAAI+W,EAAS,IAAIJ,EAAY3W,KAAK+P,MAAO/I,GAQzC,OAPI+P,EAAO/I,MAAM+I,EAAO/I,KAAKhH,GAC7B+P,EAAOC,MAAQhX,KAAKwW,SAAS7U,OAC7B3B,KAAKwW,SAASjV,KAAKwV,GACfA,EAAOpK,UACT3M,KAAKyW,gBAAgBlV,KAAKwV,GAC1B/W,KAAKiX,eAEAjX,IACT,CAEAkX,gBAAAA,CAAiBP,GACf,IAAII,EAAS/W,KAAKgU,UAAU2C,GAC5B,YAAevV,IAAX2V,GACF1V,QAAQC,KACL,0BAAyBqV,EAAYG,iCAEjC9W,OAGTA,KAAKwW,SAASW,OAAOnX,KAAKwW,SAASY,QAAQL,GAAS,GAEhDA,EAAOpK,SACT3M,KAAKyW,gBAAgBU,OAAOnX,KAAKyW,gBAAgBW,QAAQL,GAAS,GAI7D/W,KACT,CAEAiX,WAAAA,GACEjX,KAAKyW,gBAAgBT,MAAK,CAACqB,EAAGC,IACrBD,EAAEE,SAAWD,EAAEC,UAAYF,EAAEL,MAAQM,EAAEN,OAElD,CAEAhD,SAAAA,CAAU2C,GACR,OAAO3W,KAAKwW,SAASgB,MAAMC,GAAMA,aAAad,GAChD,CAEAe,UAAAA,GACE,OAAO1X,KAAKwW,QACd,CAEAmB,YAAAA,CAAahB,GACX,IAAIiB,EAAQ5X,KAAKwW,SAASY,QAAQT,IAC5BiB,GAEN5X,KAAKwW,SAASW,OAAOS,EAAO,EAC9B,CAEAC,aAAAA,CAAcd,EAAQnC,EAAOkD,GAC3B,GAAIf,EAAOgB,aACLhB,EAAOiB,aAAc,CACvB,IAAIC,EAAY9B,MAChBY,EAAOpK,QAAQiI,EAAOkD,GACtBf,EAAOmB,YAAc/B,MAAQ8B,EAC7BjY,KAAK0W,mBAAqBK,EAC1BA,EAAOoB,aACT,CAEJ,CAEAC,IAAAA,GACEpY,KAAKyW,gBAAgBzV,SAAS+V,GAAWA,EAAOqB,QAClD,CAEAzL,OAAAA,CAAQiI,EAAOkD,EAAMO,GACnBrY,KAAKyW,gBAAgBzV,SAClB+V,IACEsB,GAAatB,EAAOxF,UAAYvR,KAAK6X,cAAcd,EAAQnC,EAAOkD,IAEzE,CAEAQ,KAAAA,GAME,IALA,IAAIA,EAAQ,CACVC,WAAYvY,KAAKwW,SAAS7U,OAC1B6W,QAAS,CAAC,GAGH9W,EAAI,EAAGA,EAAI1B,KAAKwW,SAAS7U,OAAQD,IAAK,CAC7C,IAAIqV,EAAS/W,KAAKwW,SAAS9U,GACvB+W,EAAeH,EAAME,QAAQzB,EAAOD,WAAa,CACnDlK,QAAS,CAAC,EACVsL,YAAanB,EAAOmB,aAEtB,IAAK,IAAIrB,KAAQE,EAAO2B,IACtBD,EAAY7L,QAAQiK,GAAQE,EAAO2B,IAAI7B,GAAMyB,OAEjD,CAEA,OAAOA,CACT,EAGF,MAAMK,WAEJjZ,WAAAA,CAAYiW,EAAGiD,GACb5Y,KAAK6Y,SAAW,GAChB7Y,KAAK8Y,MAAQ,EACb9Y,KAAK2V,EAAIA,EACT3V,KAAK+Y,cAAe,EAEO,qBAAhBH,GACT5Y,KAAKgZ,OAAOJ,EAEhB,CAEAK,OAAAA,GAEMjZ,KAAK6Y,SAASlX,QAAU,GAC1B3B,KAAKgZ,OAAOxS,KAAK0S,MAAmB,GAAblZ,KAAK8Y,OAAe,GAG7C,IAAIK,EAAOnZ,KAAK6Y,SAASO,MAEzB,OAAOD,CACT,CAEAE,OAAAA,CAAQF,GACNA,EAAKG,QACLtZ,KAAK6Y,SAAStX,KAAK4X,EACrB,CAEAH,MAAAA,CAAOF,GACL,IAAK,IAAIpD,EAAI,EAAGA,EAAIoD,EAAOpD,IAAK,CAC9B,IAAIpP,EAAQ,IAAItG,KAAK2V,EACrBrP,EAAMiT,MAAQvZ,KACdA,KAAK6Y,SAAStX,KAAK+E,EACrB,CACAtG,KAAK8Y,OAASA,CAChB,CAEAU,SAAAA,GACE,OAAOxZ,KAAK8Y,KACd,CAEAW,SAAAA,GACE,OAAOzZ,KAAK6Y,SAASlX,MACvB,CAEA+X,SAAAA,GACE,OAAO1Z,KAAK8Y,MAAQ9Y,KAAK6Y,SAASlX,MACpC,EAOF,MAAMgY,gBACJja,WAAAA,GACEM,KAAK4Z,WAAa,CAAC,EACnB5Z,KAAKsY,MAAQ,CACXuB,MAAO,EACPC,QAAS,EAEb,CAOAtX,gBAAAA,CAAiBuX,EAAWC,GAC1B,IAAIC,EAAYja,KAAK4Z,gBACQxY,IAAzB6Y,EAAUF,KACZE,EAAUF,GAAa,KAGuB,IAA5CE,EAAUF,GAAW3C,QAAQ4C,IAC/BC,EAAUF,GAAWxY,KAAKyY,EAE9B,CAOAE,gBAAAA,CAAiBH,EAAWC,GAC1B,YACiC5Y,IAA/BpB,KAAK4Z,WAAWG,KACkC,IAAlD/Z,KAAK4Z,WAAWG,GAAW3C,QAAQ4C,EAEvC,CAOA7P,mBAAAA,CAAoB4P,EAAWC,GAC7B,IAAIG,EAAgBna,KAAK4Z,WAAWG,GACpC,QAAsB3Y,IAAlB+Y,EAA6B,CAC/B,IAAIvC,EAAQuC,EAAc/C,QAAQ4C,IACnB,IAAXpC,GACFuC,EAAchD,OAAOS,EAAO,EAEhC,CACF,CAQAxC,aAAAA,CAAc2E,EAAWhN,EAAQqN,GAC/Bpa,KAAKsY,MAAMuB,QAEX,IAAIM,EAAgBna,KAAK4Z,WAAWG,GACpC,QAAsB3Y,IAAlB+Y,EAGF,IAFA,IAAIlT,EAAQkT,EAAcE,MAAM,GAEvB3Y,EAAI,EAAGA,EAAIuF,EAAMtF,OAAQD,IAChCuF,EAAMvF,GAAG4Y,KAAKta,KAAM+M,EAAQqN,EAGlC,CAKAG,aAAAA,GACEva,KAAKsY,MAAMuB,MAAQ7Z,KAAKsY,MAAMwB,QAAU,CAC1C,EAGF,MAAMU,MAIJ9a,WAAAA,CAAY8V,EAAYiF,GAYtB,GAXAza,KAAKwV,WAAa,GAClBxV,KAAK0a,cAAgB,GAErBlF,EAAWxU,SAASoZ,IACO,kBAAdA,EACTpa,KAAK0a,cAAcnZ,KAAK6Y,EAAUtO,WAElC9L,KAAKwV,WAAWjU,KAAK6Y,EACvB,IAG6B,IAA3Bpa,KAAKwV,WAAW7T,OAClB,MAAM,IAAIkU,MAAM,2CAGlB7V,KAAK2a,SAAW,GAEhB3a,KAAK4a,gBAAkB,IAAIjB,gBAG3B3Z,KAAK6a,UAAW,EAEhB7a,KAAK8a,IAAMvF,SAASC,GAGpB,IAAK,IAAI9T,EAAI,EAAGA,EAAI+Y,EAAQM,UAAUpZ,OAAQD,IAAK,CACjD,IAAIqL,EAAS0N,EAAQM,UAAUrZ,GAC3B1B,KAAKgb,MAAMjO,KAEbA,EAAOH,QAAQrL,KAAKvB,MACpBA,KAAK2a,SAASpZ,KAAKwL,GAEvB,CACF,CAMAkO,SAAAA,CAAUlO,GACRA,EAAOH,QAAQrL,KAAKvB,MACpBA,KAAK2a,SAASpZ,KAAKwL,GAEnB/M,KAAK4a,gBAAgBxF,cAAcoF,MAAMU,UAAUC,aAAcpO,EACnE,CAMAqO,YAAAA,CAAarO,GACX,IAAI6K,EAAQ5X,KAAK2a,SAASvD,QAAQrK,IAC7B6K,IACH5X,KAAK2a,SAASxD,OAAOS,EAAO,GAE5BA,EAAQ7K,EAAOH,QAAQwK,QAAQpX,MAC/B+M,EAAOH,QAAQuK,OAAOS,EAAO,GAE7B5X,KAAK4a,gBAAgBxF,cACnBoF,MAAMU,UAAUG,eAChBtO,GAGN,CAEAiO,KAAAA,CAAMjO,GACJ,OACEA,EAAOuO,iBAAiBtb,KAAKwV,cAC5BzI,EAAOwO,iBAAiBvb,KAAK0a,cAElC,CAEAc,MAAAA,GACE,MAAO,CACLV,IAAK9a,KAAK8a,IACVD,SAAU7a,KAAK6a,SACfzN,WAAY,CACVqO,SAAUzb,KAAKwV,WAAW9J,KAAKgQ,GAAMA,EAAE7E,OACvC8E,IAAK3b,KAAK0a,cAAchP,KAAKgQ,GAAMA,EAAE7E,QAEvC+E,YAAa5b,KAAK2a,SAAShZ,OAE/B,CAKA2W,KAAAA,GACE,MAAO,CACLuD,cAAe7b,KAAKwV,WAAW7T,OAC/Bia,YAAa5b,KAAK2a,SAAShZ,OAE/B,EAGF6Y,MAAMU,UAAUC,aAAe,qBAC/BX,MAAMU,UAAUG,eAAiB,uBACjCb,MAAMU,UAAUY,kBAAoB,0BAMpC,MAAMC,aACJrc,WAAAA,CAAYqQ,GACV/P,KAAKgc,OAASjM,EAGd/P,KAAKic,SAAW,CAAC,CACnB,CAEAC,eAAAA,CAAgBnP,GACd,IAAK,IAAIoP,KAAanc,KAAKic,SAAU,CACnC,IAAIG,EAAQpc,KAAKic,SAASE,IACa,IAAnCpP,EAAOH,QAAQwK,QAAQgF,IACzBA,EAAMhB,aAAarO,EAEvB,CACF,CAOAsP,sBAAAA,CAAuBtP,EAAQjB,GAI7B,IAAK,IAAIqQ,KAAanc,KAAKic,SAAU,CACnC,IAAIG,EAAQpc,KAAKic,SAASE,IAGrBC,EAAM1B,cAActD,QAAQtL,KAC9BsQ,EAAMzB,SAASvD,QAAQrK,GAExBqP,EAAMhB,aAAarO,IASjBqP,EAAM5G,WAAW4B,QAAQtL,IAC1BsQ,EAAMpB,MAAMjO,MACZqP,EAAMzB,SAASvD,QAAQrK,IAI1BqP,EAAMnB,UAAUlO,EAClB,CACF,CAOAuP,wBAAAA,CAAyBvP,EAAQjB,GAC/B,IAAK,IAAIqQ,KAAanc,KAAKic,SAAU,CACnC,IAAIG,EAAQpc,KAAKic,SAASE,IAGrBC,EAAM1B,cAActD,QAAQtL,MAC7BsQ,EAAMzB,SAASvD,QAAQrK,IACzBqP,EAAMpB,MAAMjO,GAEZqP,EAAMnB,UAAUlO,IAKbqP,EAAM5G,WAAW4B,QAAQtL,KACzBsQ,EAAMzB,SAASvD,QAAQrK,KACzBqP,EAAMpB,MAAMjO,IAEbqP,EAAMhB,aAAarO,EAGvB,CACF,CAMAwP,QAAAA,CAAS/G,GACP,IAAIsF,EAAMvF,SAASC,GACf4G,EAAQpc,KAAKic,SAASnB,GAI1B,OAHKsB,IACHpc,KAAKic,SAASnB,GAAOsB,EAAQ,IAAI5B,MAAMhF,EAAYxV,KAAKgc,SAEnDI,CACT,CAKA9D,KAAAA,GACE,IAAIA,EAAQ,CAAC,EACb,IAAK,IAAI6D,KAAanc,KAAKic,SACzB3D,EAAM6D,GAAanc,KAAKic,SAASE,GAAW7D,QAE9C,OAAOA,CACT,EAGF,MAAMxM,UACJpM,WAAAA,CAAY8c,GACV,IAAc,IAAVA,EAAiB,CACnB,MAAMzQ,EAAS/L,KAAKN,YAAYqM,OAEhC,IAAK,MAAM+O,KAAO/O,EAChB,GAAIyQ,GAASA,EAAMC,eAAe3B,GAChC9a,KAAK8a,GAAO0B,EAAM1B,OACb,CACL,MAAM4B,EAAa3Q,EAAO+O,GAC1B,GAAI4B,EAAWD,eAAe,WAC5Bzc,KAAK8a,GAAO4B,EAAW1Q,KAAK1F,MAAMoW,EAAWpQ,aACxC,CACL,MAAMN,EAAO0Q,EAAW1Q,KACxBhM,KAAK8a,GAAO9O,EAAK1F,MAAM0F,EAAKM,QAC9B,CACF,MAGalL,IAAVob,GACHxc,KAAK2c,yBAAyBH,EAElC,CAEAxc,KAAKuZ,MAAQ,IACf,CAEAxX,IAAAA,CAAK6a,GACH,MAAM7Q,EAAS/L,KAAKN,YAAYqM,OAEhC,IAAK,MAAM+O,KAAO/O,EAAQ,CACxB,MAAM8Q,EAAO9Q,EAAO+O,GAEhB8B,EAAOH,eAAe3B,KACxB9a,KAAK8a,GAAO+B,EAAK7Q,KAAKjK,KAAK6a,EAAO9B,GAAM9a,KAAK8a,IAEjD,CAOA,OAHE9a,KAAK2c,yBAAyBC,GAGzB5c,IACT,CAEAsG,KAAAA,GACE,OAAO,IAAItG,KAAKN,aAAcqC,KAAK/B,KACrC,CAEAsZ,KAAAA,GACE,MAAMvN,EAAS/L,KAAKN,YAAYqM,OAEhC,IAAK,MAAM+O,KAAO/O,EAAQ,CACxB,MAAM2Q,EAAa3Q,EAAO+O,GAE1B,GAAI4B,EAAWD,eAAe,WAC5Bzc,KAAK8a,GAAO4B,EAAW1Q,KAAKjK,KAAK2a,EAAWpQ,QAAStM,KAAK8a,QACrD,CACL,MAAM9O,EAAO0Q,EAAW1Q,KACxBhM,KAAK8a,GAAO9O,EAAKjK,KAAKiK,EAAKM,QAAStM,KAAK8a,GAC3C,CACF,CACF,CAEA/U,OAAAA,GACM/F,KAAKuZ,OACPvZ,KAAKuZ,MAAMF,QAAQrZ,KAEvB,CAEA8W,OAAAA,GACE,OAAO9W,KAAKN,YAAYoX,SAC1B,CAEA6F,wBAAAA,CAAyBG,GACvB,MAAM/Q,EAAS/L,KAAKN,YAAYqM,OAGhCgR,OAAOC,KAAKF,GAAK9b,SAASic,IACnBlR,EAAO0Q,eAAeQ,IACzB5b,QAAQC,KACL,4BAA2B2b,0BAA+Bjd,KAAKN,YAAYmX,wEAEhF,GAEJ,EAGF/K,UAAUC,OAAS,CAAC,EACpBD,UAAUwK,aAAc,EACxBxK,UAAUgL,QAAU,WAClB,OAAO9W,KAAKkd,aAAeld,KAAK6W,IAClC,EAEA,MAAMsG,6BAA6BrR,WAEnCqR,qBAAqBC,wBAAyB,EAE9C,MAAMC,mBAAmB1E,WACvBjZ,WAAAA,CAAY4d,EAAeC,EAAa3E,GACtCvW,MAAMkb,OAAanc,GACnBpB,KAAKsd,cAAgBA,EAEM,qBAAhB1E,GACT5Y,KAAKgZ,OAAOJ,EAEhB,CAEAI,MAAAA,CAAOF,GACL,IAAK,IAAIpD,EAAI,EAAGA,EAAIoD,EAAOpD,IAAK,CAC9B,IAAIpP,EAAQ,IAAItG,KAAK2V,EAAE3V,KAAKsd,eAC5BhX,EAAMiT,MAAQvZ,KACdA,KAAK6Y,SAAStX,KAAK+E,EACrB,CACAtG,KAAK8Y,OAASA,CAChB,EAOF,MAAM0E,cACJ9d,WAAAA,CAAYqQ,GACV/P,KAAK+P,MAAQA,EACb/P,KAAKyd,kBAAoB1N,EAAM0N,kBAG/Bzd,KAAK+a,UAAY,GACjB/a,KAAK0d,cAAgB,EAErB1d,KAAK2d,iBAAmB,CAAC,EAEzB3d,KAAK4d,cAAgB,IAAI7B,aAAa/b,MACtCA,KAAK4a,gBAAkB,IAAIjB,gBAC3B3Z,KAAK6d,YAAc,IAAIR,WACrBrd,KACAA,KAAK+P,MAAM+N,QAAQP,YACnBvd,KAAK+P,MAAM+N,QAAQC,gBAIrB/d,KAAKge,+BAAiC,GACtChe,KAAKie,iBAAmB,GACxBje,KAAKke,wBAAyB,CAChC,CAEAC,eAAAA,CAAgBtH,GACd,OAAO7W,KAAK2d,iBAAiB9G,EAC/B,CAKAlD,YAAAA,CAAakD,GACX,IAAI9J,EAAS/M,KAAK6d,YAAY5E,UAa9B,OAZAlM,EAAOqR,OAAQ,EACfrR,EAAO8J,KAAOA,GAAQ,GAClBA,IACE7W,KAAK2d,iBAAiB9G,GACxBxV,QAAQC,KAAM,gBAAeuV,oBAE7B7W,KAAK2d,iBAAiB9G,GAAQ9J,GAIlC/M,KAAK+a,UAAUxZ,KAAKwL,GACpB/M,KAAK4a,gBAAgBxF,cAAciJ,eAAgBtR,GAC5CA,CACT,CAUAuR,kBAAAA,CAAmBvR,EAAQjB,EAAWyS,GAEpC,GAC+B,qBAAtBzS,EAAUiK,UAChB/V,KAAK+P,MAAM0N,kBAAkBe,eAAe1S,EAAUiK,SAEvD,MAAM,IAAIF,MACP,4CAA2C/J,EAAUgL,cAI1D,IAAK/J,EAAO0R,gBAAgBrH,QAAQtL,GAEhCzK,QAAQC,KACN,2CACAyL,EACAjB,EAAUgL,eALhB,CAWA/J,EAAO0R,gBAAgBld,KAAKuK,GAExBA,EAAU4S,YAAcvB,sBAC1BpQ,EAAO4R,qBAGT,IAAIC,EAAgB5e,KAAK+P,MAAM0N,kBAAkBoB,kBAC/C/S,GAGEsO,EAAYwE,EACZA,EAAc3F,UACd,IAAInN,EAAUyS,GAEdK,GAAiBL,GACnBnE,EAAUrY,KAAKwc,GAGjBxR,EAAO+R,YAAYhT,EAAUiK,SAAWqE,EAExCpa,KAAK4d,cAAcvB,uBAAuBtP,EAAQjB,GAClD9L,KAAK+P,MAAM0N,kBAAkBsB,uBAAuBjT,GAEpD9L,KAAK4a,gBAAgBxF,cAAc4J,gBAAiBjS,EAAQjB,EAzB5D,CA0BF,CAQAmT,qBAAAA,CAAsBlS,EAAQjB,EAAWoT,GACvC,IAAItH,EAAQ7K,EAAO0R,gBAAgBrH,QAAQtL,IACrC8L,IAEN5X,KAAK4a,gBAAgBxF,cAAc+J,iBAAkBpS,EAAQjB,GAEzDoT,EACFlf,KAAKof,2BAA2BrS,EAAQjB,EAAW8L,IAEL,IAA1C7K,EAAOsS,wBAAwB1d,QACjC3B,KAAKge,+BAA+Bzc,KAAKwL,GAE3CA,EAAO0R,gBAAgBtH,OAAOS,EAAO,GACrC7K,EAAOsS,wBAAwB9d,KAAKuK,GAEpCiB,EAAOuS,oBAAoBxT,EAAUiK,SACnChJ,EAAO+R,YAAYhT,EAAUiK,gBACxBhJ,EAAO+R,YAAYhT,EAAUiK,UAItC/V,KAAK4d,cAActB,yBAAyBvP,EAAQjB,GAEhDA,EAAU4S,YAAcvB,uBAC1BpQ,EAAO4R,qBAG2B,IAA9B5R,EAAO4R,oBAA6B5R,EAAOqR,OAC7CrR,EAAOwS,UAGb,CAEAH,0BAAAA,CAA2BrS,EAAQjB,EAAW8L,GAE5C7K,EAAO0R,gBAAgBtH,OAAOS,EAAO,GACrC,IAAIwC,EAAYrN,EAAO+R,YAAYhT,EAAUiK,gBACtChJ,EAAO+R,YAAYhT,EAAUiK,SACpCqE,EAAUrU,UACV/F,KAAK+P,MAAM0N,kBAAkB+B,2BAA2B1T,EAC1D,CAMA2T,yBAAAA,CAA0B1S,EAAQmS,GAChC,IAAI1J,EAAazI,EAAO0R,gBAExB,IAAK,IAAI9W,EAAI6N,EAAW7T,OAAS,EAAGgG,GAAK,EAAGA,IACtC6N,EAAW7N,GAAG+W,YAAcvB,sBAC9Bnd,KAAKif,sBAAsBlS,EAAQyI,EAAW7N,GAAIuX,EAExD,CAOA9D,YAAAA,CAAarO,EAAQmS,GACnB,IAAItH,EAAQ5X,KAAK+a,UAAU3D,QAAQrK,GAEnC,KAAM6K,EAAO,MAAM,IAAI/B,MAAM,sCAE7B9I,EAAOqR,OAAQ,EACfpe,KAAKyf,0BAA0B1S,EAAQmS,GAEL,IAA9BnS,EAAO4R,qBAET3e,KAAK4a,gBAAgBxF,cAAciG,eAAgBtO,GACnD/M,KAAK4d,cAAc1B,gBAAgBnP,IACf,IAAhBmS,EACFlf,KAAK0f,eAAe3S,EAAQ6K,GAE5B5X,KAAKie,iBAAiB1c,KAAKwL,GAGjC,CAEA2S,cAAAA,CAAe3S,EAAQ6K,GACrB5X,KAAK+a,UAAU5D,OAAOS,EAAO,GAEzB5X,KAAK2d,iBAAiB5Q,EAAO8J,cACxB7W,KAAK2d,iBAAiB5Q,EAAO8J,MAEtC9J,EAAOwM,MAAMF,QAAQtM,EACvB,CAKA4S,iBAAAA,GACE,IAAK,IAAIje,EAAI1B,KAAK+a,UAAUpZ,OAAS,EAAGD,GAAK,EAAGA,IAC9C1B,KAAKob,aAAapb,KAAK+a,UAAUrZ,GAErC,CAEAke,sBAAAA,GACE,GAAK5f,KAAKke,uBAAV,CAIA,IAAK,IAAIxc,EAAI,EAAGA,EAAI1B,KAAKie,iBAAiBtc,OAAQD,IAAK,CACrD,IAAIqL,EAAS/M,KAAKie,iBAAiBvc,GAC/BkW,EAAQ5X,KAAK+a,UAAU3D,QAAQrK,GACnC/M,KAAK0f,eAAe3S,EAAQ6K,EAC9B,CACA5X,KAAKie,iBAAiBtc,OAAS,EAE/B,IAAK,IAAID,EAAI,EAAGA,EAAI1B,KAAKge,+BAA+Brc,OAAQD,IAAK,CACnE,IAAIqL,EAAS/M,KAAKge,+BAA+Btc,GACjD,MAAOqL,EAAOsS,wBAAwB1d,OAAS,EAAG,CAChD,IAAImK,EAAYiB,EAAOsS,wBAAwBjG,MAE/C,IAAIgB,EAAYrN,EAAOuS,oBAAoBxT,EAAUiK,gBAC9ChJ,EAAOuS,oBAAoBxT,EAAUiK,SAC5CqE,EAAUrU,UACV/F,KAAK+P,MAAM0N,kBAAkB+B,2BAA2B1T,EAG1D,CACF,CAEA9L,KAAKge,+BAA+Brc,OAAS,CAvB7C,CAwBF,CAMAke,eAAAA,CAAgBrK,GACd,OAAOxV,KAAK4d,cAAcrB,SAAS/G,EACrC,CAOAsD,KAAAA,GACE,OAAO9Y,KAAK+a,UAAUpZ,MACxB,CAKA2W,KAAAA,GACE,IAAIA,EAAQ,CACVsD,YAAa5b,KAAK+a,UAAUpZ,OAC5Bme,WAAY/C,OAAOC,KAAKhd,KAAK4d,cAAc3B,UAAUta,OACrDiL,QAAS5M,KAAK4d,cAActF,QAC5ByH,iBAAkBhD,OAAOC,KAAKhd,KAAKyd,kBAAkBuC,gBAClDre,OACHid,cAAe,CAAC,EAChBhE,gBAAiB5a,KAAK4a,gBAAgBtC,OAGxC,IAAK,IAAI2H,KAAmBjgB,KAAKyd,kBAAkBuC,eAAgB,CACjE,IAAIE,EAAOlgB,KAAKyd,kBAAkBuC,eAAeC,GACjD3H,EAAMsG,cAAcsB,EAAKvK,EAAEmB,WAAa,CACtCqJ,KAAMD,EAAKxG,YACX0G,KAAMF,EAAKpH,MAEf,CAEA,OAAOR,CACT,EAGF,MAAM+F,eAAiB,8BACjBhD,eAAiB,+BACjB2D,gBAAkB,gCAClBG,iBAAmB,iCAEzB,MAAMkB,iBACJ3gB,WAAAA,GACEM,KAAKwV,WAAa,GAClBxV,KAAKwe,eAAiB,CAAC,EAEvBxe,KAAKggB,eAAiB,CAAC,EACvBhgB,KAAK6b,cAAgB,CAAC,EACtB7b,KAAKsgB,gBAAkB,CACzB,CAEAjS,YAAAA,CAAavC,GACX,OAA+C,IAAxC9L,KAAKwV,WAAW4B,QAAQtL,EACjC,CAEA2H,iBAAAA,CAAkB3H,EAAWyU,GAC3B,IAA4C,IAAxCvgB,KAAKwV,WAAW4B,QAAQtL,GAI1B,YAHAzK,QAAQC,KACL,oBAAmBwK,EAAUgL,kCAKlC,MAAM/K,EAASD,EAAUC,OAEzB,IAAKA,EACH,MAAM,IAAI8J,MACP,cAAa/J,EAAUgL,sCAI5B,IAAK,MAAM0J,KAAYzU,EAAQ,CAC7B,MAAM8Q,EAAO9Q,EAAOyU,GAEpB,IAAK3D,EAAK7Q,KACR,MAAM,IAAI6J,MACP,iCAAgC/J,EAAUgL,iCAAiC0J,eAGlF,CAEA1U,EAAUiK,QAAU/V,KAAKsgB,kBACzBtgB,KAAKwV,WAAWjU,KAAKuK,GACrB9L,KAAKwe,eAAe1S,EAAUiK,SAAWjK,EACzC9L,KAAK6b,cAAc/P,EAAUiK,SAAW,OAErB3U,IAAfmf,EACFA,EAAa,IAAI5H,WAAW7M,IACJ,IAAfyU,IACTA,OAAanf,GAGfpB,KAAKggB,eAAelU,EAAUiK,SAAWwK,CAC3C,CAEAxB,sBAAAA,CAAuBjT,GACrB9L,KAAK6b,cAAc/P,EAAUiK,UAC/B,CAEAyJ,0BAAAA,CAA2B1T,GACzB9L,KAAK6b,cAAc/P,EAAUiK,UAC/B,CAEA8I,iBAAAA,CAAkB/S,GAChB,OAAO9L,KAAKggB,eAAelU,EAAUiK,QACvC,EAGF,MAAM0K,QAAU,QAEVC,SAAW,IAAIC,QAEfC,aAAe,CACnB1Y,GAAAA,CAAI2Y,EAAQhE,GACV,MAAM,IAAIhH,MACP,sBAAqBgL,EAAOnhB,YAAYoX,aAAazK,OACpDwQ,gFAGN,GAGF,SAASiE,uBAAuBnL,EAAGyE,GACjC,QAAkBhZ,IAAdgZ,EACF,OAGF,IAAI2G,EAAmBL,SAASM,IAAI5G,GAOpC,OALK2G,IACHA,EAAmB,IAAIE,MAAM7G,EAAWwG,cACxCF,SAASxY,IAAIkS,EAAW2G,IAGnBA,CACT,CAEA,MAAMG,OACJxhB,WAAAA,CAAY4d,GACVtd,KAAKmhB,eAAiB7D,GAAiB,KAGvCtd,KAAKd,GAAKoe,EAAcI,gBAGxB1d,KAAKye,gBAAkB,GAGvBze,KAAK8e,YAAc,CAAC,EAEpB9e,KAAKsf,oBAAsB,CAAC,EAG5Btf,KAAK4M,QAAU,GAGf5M,KAAKqf,wBAA0B,GAE/Brf,KAAKoe,OAAQ,EAGbpe,KAAK2e,mBAAqB,CAC5B,CAIAzR,YAAAA,CAAapB,EAAWsV,GACtB,IAAIhH,EAAYpa,KAAK8e,YAAYhT,EAAUiK,SAM3C,OAJKqE,IAAgC,IAAnBgH,IAChBhH,EAAYpa,KAAKsf,oBAAoBxT,EAAUiK,UAGzC+K,uBAAuBhV,EAAWsO,EAE5C,CAEAiH,mBAAAA,CAAoBvV,GAClB,MAAMsO,EAAYpa,KAAKsf,oBAAoBxT,EAAUiK,SAErD,OAAQ+K,uBAAuBhV,EAAWsO,EAE5C,CAEAkH,aAAAA,GACE,OAAOthB,KAAK8e,WACd,CAEAyC,qBAAAA,GACE,OAAOvhB,KAAKsf,mBACd,CAEAkC,iBAAAA,GACE,OAAOxhB,KAAKye,eACd,CAEAzR,mBAAAA,CAAoBlB,GAClB,IAAIsO,EAAYpa,KAAK8e,YAAYhT,EAAUiK,SAE3C,GAAKqE,EAAL,CAIA,IAAK,IAAI1Y,EAAI,EAAGA,EAAI1B,KAAK4M,QAAQjL,OAAQD,IAAK,CAC5C,IAAI0a,EAAQpc,KAAK4M,QAAQlL,GAGrB0a,EAAMvB,WAAqD,IAAzCuB,EAAM5G,WAAW4B,QAAQtL,IAC7CsQ,EAAMxB,gBAAgBxF,cACpBoF,MAAMU,UAAUY,kBAChB9b,KACAoa,EAGN,CACA,OAAOA,CAdP,CAeF,CAEAxG,YAAAA,CAAa9H,EAAWyS,GAEtB,OADAve,KAAKmhB,eAAe7C,mBAAmBte,KAAM8L,EAAWyS,GACjDve,IACT,CAEAuP,eAAAA,CAAgBzD,EAAW2V,GAEzB,OADAzhB,KAAKmhB,eAAelC,sBAAsBjf,KAAM8L,EAAW2V,GACpDzhB,IACT,CAEAqO,YAAAA,CAAavC,EAAWsV,GACtB,SACKphB,KAAKye,gBAAgBrH,QAAQtL,KACZ,IAAnBsV,GAA2BphB,KAAK0hB,oBAAoB5V,EAEzD,CAEA4V,mBAAAA,CAAoB5V,GAClB,SAAU9L,KAAKqf,wBAAwBjI,QAAQtL,EACjD,CAEAwP,gBAAAA,CAAiB9F,GACf,IAAK,IAAI9T,EAAI,EAAGA,EAAI8T,EAAW7T,OAAQD,IACrC,IAAK1B,KAAKqO,aAAamH,EAAW9T,IAAK,OAAO,EAEhD,OAAO,CACT,CAEA6Z,gBAAAA,CAAiB/F,GACf,IAAK,IAAI9T,EAAI,EAAGA,EAAI8T,EAAW7T,OAAQD,IACrC,GAAI1B,KAAKqO,aAAamH,EAAW9T,IAAK,OAAO,EAE/C,OAAO,CACT,CAEAigB,mBAAAA,CAAoBF,GAClB,OAAOzhB,KAAKmhB,eAAe1B,0BAA0Bzf,KAAMyhB,EAC7D,CAEA1f,IAAAA,CAAK+a,GAEH,IAAK,IAAImD,KAAmBnD,EAAIgC,YAAa,CAC3C,IAAI8C,EAAe9E,EAAIgC,YAAYmB,GACnCjgB,KAAK4T,aAAagO,EAAaliB,aAC/B,IAAI0a,EAAYpa,KAAKkN,aAAa0U,EAAaliB,aAC/C0a,EAAUrY,KAAK6f,EACjB,CAEA,OAAO5hB,IACT,CAEAsG,KAAAA,GACE,OAAO,IAAI4a,OAAOlhB,KAAKmhB,gBAAgBpf,KAAK/B,KAC9C,CAEAsZ,KAAAA,GAKE,IAAK,IAAI2G,KAJTjgB,KAAKd,GAAKc,KAAKmhB,eAAezD,gBAC9B1d,KAAKye,gBAAgB9c,OAAS,EAC9B3B,KAAK4M,QAAQjL,OAAS,EAEM3B,KAAK8e,mBACxB9e,KAAK8e,YAAYmB,EAE5B,CAEAV,MAAAA,CAAOkC,GACL,OAAOzhB,KAAKmhB,eAAe/F,aAAapb,KAAMyhB,EAChD,EAGF,MAAMI,gBAAkB,CACtB9D,eAAgB,EAChBR,YAAa2D,QAGf,MAAMlR,MACJtQ,WAAAA,CAAYoe,EAAU,CAAC,GAWrB,GAVA9d,KAAK8d,QAAUf,OAAO+E,OAAO,CAAC,EAAGD,gBAAiB/D,GAElD9d,KAAKyd,kBAAoB,IAAI4C,iBAAiBrgB,MAC9CA,KAAKsd,cAAgB,IAAIE,cAAcxd,MACvCA,KAAK+hB,cAAgB,IAAIxL,cAAcvW,MAEvCA,KAAKuR,SAAU,EAEfvR,KAAKgiB,YAAc,CAAC,EAEhB9L,WAAoC,qBAAhB+L,YAA6B,CACnD,IAAIxf,EAAQ,IAAIwf,YAAY,qBAAsB,CAChDC,OAAQ,CAAEnS,MAAO/P,KAAMmiB,QAAS1B,WAElCjQ,OAAO4E,cAAc3S,EACvB,CAEAzC,KAAKoiB,SAAWjM,MAAQ,GAC1B,CAEA1C,iBAAAA,CAAkB3H,EAAWyU,GAE3B,OADAvgB,KAAKyd,kBAAkBhK,kBAAkB3H,EAAWyU,GAC7CvgB,IACT,CAEA0T,cAAAA,CAAehH,EAAQ1F,GAErB,OADAhH,KAAK+hB,cAAcrO,eAAehH,EAAQ1F,GACnChH,IACT,CAEAqiB,sBAAAA,CAAuBvW,GACrB,OAAO9L,KAAKyd,kBAAkBpP,aAAavC,EAC7C,CAEAoL,gBAAAA,CAAiBxK,GAEf,OADA1M,KAAK+hB,cAAc7K,iBAAiBxK,GAC7B1M,IACT,CAEAgU,SAAAA,CAAU2C,GACR,OAAO3W,KAAK+hB,cAAc/N,UAAU2C,EACtC,CAEAe,UAAAA,GACE,OAAO1X,KAAK+hB,cAAcrK,YAC5B,CAEA/K,OAAAA,CAAQiI,EAAOkD,GACRlD,IACHkD,EAAO3B,MAAQ,IACfvB,EAAQkD,EAAO9X,KAAKoiB,SACpBpiB,KAAKoiB,SAAWtK,GAGd9X,KAAKuR,UACPvR,KAAK+hB,cAAcpV,QAAQiI,EAAOkD,GAClC9X,KAAKsd,cAAcsC,yBAEvB,CAEAxH,IAAAA,GACEpY,KAAKuR,SAAU,CACjB,CAEA+Q,IAAAA,GACEtiB,KAAKuR,SAAU,CACjB,CAEAoC,YAAAA,CAAakD,GACX,OAAO7W,KAAKsd,cAAc3J,aAAakD,EACzC,CAEAyB,KAAAA,GACE,IAAIA,EAAQ,CACVqC,SAAU3a,KAAKsd,cAAchF,QAC7BvB,OAAQ/W,KAAK+hB,cAAczJ,SAG7B,OAAOA,CACT,EAGF,MAAM5L,OACJsL,UAAAA,GACE,GAAsC,IAAlChY,KAAKuiB,kBAAkB5gB,OAAc,OAAO,EAEhD,IAAK,IAAID,EAAI,EAAGA,EAAI1B,KAAKuiB,kBAAkB5gB,OAAQD,IAAK,CACtD,IAAI0a,EAAQpc,KAAKuiB,kBAAkB7gB,GACnC,GAA8B,IAA1B0a,EAAMzB,SAAShZ,OACjB,OAAO,CAEX,CAEA,OAAO,CACT,CAEAmV,OAAAA,GACE,OAAO9W,KAAKN,YAAYoX,SAC1B,CAEApX,WAAAA,CAAYqQ,EAAO/I,GAqBjB,GApBAhH,KAAK+P,MAAQA,EACb/P,KAAKuR,SAAU,EAGfvR,KAAKic,SAAW,CAAC,EACjBjc,KAAK4M,QAAU,CAAC,EAEhB5M,KAAKuX,SAAW,EAGhBvX,KAAKkY,YAAc,EAEflR,GAAcA,EAAWuQ,WAC3BvX,KAAKuX,SAAWvQ,EAAWuQ,UAG7BvX,KAAKuiB,kBAAoB,GAEzBviB,KAAK+X,aAAc,EAEf/X,KAAKN,YAAYkN,QACnB,IAAK,IAAIuP,KAAanc,KAAKN,YAAYkN,QAAS,CAC9C,IAAI4V,EAAcxiB,KAAKN,YAAYkN,QAAQuP,GACvC3G,EAAagN,EAAYpV,WAC7B,IAAKoI,GAAoC,IAAtBA,EAAW7T,OAC5B,MAAM,IAAIkU,MAAM,oDAIlB,IAAI4M,EAAyBjN,EAAWkN,QACrC5W,IAAe8J,oBAAoB9J,KAGtC,GAAI2W,EAAuB9gB,OAAS,EAClC,MAAM,IAAIkU,MACP,4BACC7V,KAAKN,YAAYmX,QACfsF,qCAA6CsG,EAC9C/W,KAAKiX,GAAMA,EAAE7L,YACbb,KAAK,UAIZ,IAAImG,EAAQpc,KAAK+P,MAAMuN,cAAcuC,gBAAgBrK,GAErDxV,KAAKic,SAASE,GAAaC,GACG,IAA1BoG,EAAYI,WACd5iB,KAAKuiB,kBAAkBhhB,KAAK6a,GAE9Bpc,KAAK4M,QAAQuP,GAAa,CACxBrP,QAASsP,EAAMzB,UAIjB,IAAIkI,EAAc,CAAC,QAAS,UAAW,WAEvC,MAAMC,EAAe,CACnBC,MAAOvI,MAAMU,UAAUC,aACvB6H,QAASxI,MAAMU,UAAUG,eACzB4H,QAASzI,MAAMU,UAAUY,mBAGvB0G,EAAYU,QACdL,EAAY7hB,SAAS+Y,IAUnB,GATK/Z,KAAK2M,SACRtL,QAAQC,KACL,WAAUtB,KAAK8W,yCAAyC+L,EAAY5M,KACnE,qBACekG,sDAKjBqG,EAAYU,OAAOnJ,GAAY,CACjC,IAAItX,EAAQ+f,EAAYU,OAAOnJ,GAE/B,GAAkB,YAAdA,GAEF,GADAqC,EAAMvB,UAAW,GACH,IAAVpY,EAAgB,CAElB,IAAI0gB,EAAanjB,KAAK4M,QAAQuP,GAAWpC,GAAa,GACtDqC,EAAMxB,gBAAgBpY,iBACpBgY,MAAMU,UAAUY,mBACf/O,KAEoC,IAA/BoW,EAAU/L,QAAQrK,IACpBoW,EAAU5hB,KAAKwL,EACjB,GAGN,MAAO,GAAInF,MAAMwb,QAAQ3gB,GAAQ,CAC/B,IAAI0gB,EAAanjB,KAAK4M,QAAQuP,GAAWpC,GAAa,GACtDqC,EAAMxB,gBAAgBpY,iBACpBgY,MAAMU,UAAUY,mBAChB,CAAC/O,EAAQsW,MAG4C,IAAjD5gB,EAAM2U,QAAQiM,EAAiB3jB,eACA,IAA/ByjB,EAAU/L,QAAQrK,IAElBoW,EAAU5hB,KAAKwL,EACjB,GAGN,MACK,CACL,IAAIoW,EAAanjB,KAAK4M,QAAQuP,GAAWpC,GAAa,GAEtDqC,EAAMxB,gBAAgBpY,iBACpBsgB,EAAa/I,IACZhN,KAEoC,IAA/BoW,EAAU/L,QAAQrK,IACpBoW,EAAU5hB,KAAKwL,EAAO,GAG9B,CACF,IAGN,CAEJ,CAEAqL,IAAAA,GACEpY,KAAKkY,YAAc,EACnBlY,KAAKuR,SAAU,CACjB,CAEA+Q,IAAAA,GACEtiB,KAAKuR,SAAU,CACjB,CAGA4G,WAAAA,GACE,IAAK,IAAIgE,KAAanc,KAAK4M,QAAS,CAClC,IAAIwP,EAAQpc,KAAK4M,QAAQuP,GAOzB,GANIC,EAAM2G,QACR3G,EAAM2G,MAAMphB,OAAS,GAEnBya,EAAM4G,UACR5G,EAAM4G,QAAQrhB,OAAS,GAErBya,EAAM6G,QACR,GAAIrb,MAAMwb,QAAQhH,EAAM6G,SACtB7G,EAAM6G,QAAQthB,OAAS,OAEvB,IAAK,IAAIkV,KAAQuF,EAAM6G,QACrB7G,EAAM6G,QAAQpM,GAAMlV,OAAS,CAIrC,CACF,CAEA6Z,MAAAA,GACE,IAAI8H,EAAO,CACTzM,KAAM7W,KAAK8W,UACXvF,QAASvR,KAAKuR,QACd2G,YAAalY,KAAKkY,YAClBX,SAAUvX,KAAKuX,SACf3K,QAAS,CAAC,GAGZ,GAAI5M,KAAKN,YAAYkN,QAAS,CAC5B,IAAIA,EAAU5M,KAAKN,YAAYkN,QAC/B,IAAK,IAAIuP,KAAavP,EAAS,CAC7B,IAAIwP,EAAQpc,KAAK4M,QAAQuP,GACrBoH,EAAkB3W,EAAQuP,GAC1BqH,EAAaF,EAAK1W,QAAQuP,GAAa,CACzCrB,IAAK9a,KAAKic,SAASE,GAAWrB,KAWhC,GARA0I,EAAUZ,WAA0C,IAA9BW,EAAgBX,UACtCY,EAAU3I,SACR0I,EAAgBL,UACkB,IAAjCK,EAAgBL,OAAOH,QACa,IAAnCQ,EAAgBL,OAAOF,UACY,IAAnCO,EAAgBL,OAAOD,SACvBrb,MAAMwb,QAAQG,EAAgBL,OAAOD,UAErCO,EAAU3I,SAAU,CACtB2I,EAAUN,OAAS,CAAC,EAEpB,MAAMO,EAAU,CAAC,QAAS,UAAW,WACrCA,EAAQziB,SAAS0iB,IACXtH,EAAMsH,KACRF,EAAUN,OAAOQ,GAAU,CACzB/I,SAAUyB,EAAMsH,GAAQ/hB,QAE5B,GAEJ,CACF,CACF,CAEA,OAAO2hB,CACT,EAQF,SAASK,IAAI7X,GACX,MAAO,CACLgK,SAAU,MACVhK,UAAWA,EAEf,CAVAY,OAAOkK,UAAW,EAClBlK,OAAOoK,QAAU,WACf,OAAO9W,KAAKkd,aAAeld,KAAK6W,IAClC,EASA,MAAM/I,qBAAqBhC,UACzBpM,WAAAA,GACE2C,OAAM,EACR,EAGFyL,aAAa8V,gBAAiB,EAE9B,MAAMC,UAAa/G,GAAQA,EAErBgH,WAAchH,GAAQA,EAEtBiH,UAAYA,CAACjH,EAAKkH,KACtB,IAAKlH,EACH,OAAOA,EAGT,IAAKkH,EACH,OAAOlH,EAAIzC,QAGb2J,EAAKriB,OAAS,EAEd,IAAK,IAAID,EAAI,EAAGA,EAAIob,EAAInb,OAAQD,IAC9BsiB,EAAKziB,KAAKub,EAAIpb,IAGhB,OAAOsiB,CAAI,EAGPC,WAAcnH,GAAQA,GAAOA,EAAIzC,QAEjC6J,SAAYpH,GAAQqH,KAAKC,MAAMD,KAAKE,UAAUvH,IAE9CwH,UAAaxH,GAAQqH,KAAKC,MAAMD,KAAKE,UAAUvH,IAE/CyH,aAAeA,CAACzH,EAAKkH,IACpBlH,EAIAkH,EAIEA,EAAKjiB,KAAK+a,GAHRA,EAAIxW,QAJJwW,EAUL0H,cAAiB1H,GAAQA,GAAOA,EAAIxW,QAE1C,SAASme,WAAWC,GAClB,IAAIC,EAAsB,CAAC,OAAQ,UAAW,OAAQ,SAElDC,EAAsBD,EAAoBjC,QAAQmC,IAC5CH,EAAejI,eAAeoI,KAGxC,GAAID,EAAoBjjB,OAAS,EAC/B,MAAM,IAAIkU,MACP,uEAAsE+O,EAAoB3O,KACzF,SAON,OAFAyO,EAAeI,QAAS,EAEjBJ,CACT,CAKA,MAAMzY,MAAQ,CACZ2C,OAAQ6V,WAAW,CACjB5N,KAAM,SACNvK,QAAS,EACTvK,KAAM8hB,UACNvd,MAAOwd,aAGTiB,QAASN,WAAW,CAClB5N,KAAM,UACNvK,SAAS,EACTvK,KAAM8hB,UACNvd,MAAOwd,aAGTzX,OAAQoY,WAAW,CACjB5N,KAAM,SACNvK,QAAS,GACTvK,KAAM8hB,UACNvd,MAAOwd,aAGTlc,MAAO6c,WAAW,CAChB5N,KAAM,QACNvK,QAAS,GACTvK,KAAMgiB,UACNzd,MAAO2d,aAGT/X,IAAKuY,WAAW,CACd5N,KAAM,MACNvK,aAASlL,EACTW,KAAM8hB,UACNvd,MAAOwd,aAGTK,KAAMM,WAAW,CACf5N,KAAM,OACNvK,QAAS,KACTvK,KAAMmiB,SACN5d,MAAOge,aAIX,SAASU,WAAWrjB,GAIlB,IAHA,IAAIsjB,EAAS,GACTC,EAAa,uCACbC,EAAmBD,EAAWvjB,OACzBD,EAAI,EAAGA,EAAIC,EAAQD,IAC1BujB,GAAUC,EAAWE,OAAO5e,KAAKuM,MAAMvM,KAAKqJ,SAAWsV,IAEzD,OAAOF,CACT,CAEA,SAASI,aAAavI,EAAKwI,GACzB,IAAIC,EAAS/a,SAASC,cAAc,UAEpC8a,EAAOzI,IAAMA,EACbyI,EAAOC,OAASF,GACf9a,SAASib,MAAQjb,SAASkb,iBAAiBpV,YAAYiV,EAC1D,CAIA,SAASI,qBAAqBC,GAC5B,IAAIC,EAAgB,CAAC,QAAS,UAAW,OACzCA,EAAc7kB,SAAS8Z,IACrB,GAA4B,oBAAjBzZ,QAAQyZ,GAAqB,CACtC,IAAIgL,EAAKzkB,QAAQyZ,GAAKlV,KAAKvE,SAC3BA,QAAQyZ,GAAO,IAAIiL,KACjBH,EAAWI,KAAK,CACdtC,OAAQ,UACR1X,KAAM8O,EACNiL,KAAM5B,KAAKE,UAAU0B,KAEhBD,EAAGG,MAAM,KAAMF,GAE1B,KAGFvV,OAAOhO,iBAAiB,SAAU0jB,IAChCN,EAAWI,KAAK,CACdtC,OAAQ,QACRwC,MAAO/B,KAAKE,UAAU,CACpBha,QAAS6b,EAAMA,MAAM7b,QACrB8b,MAAOD,EAAMA,MAAMC,SAErB,GAEN,CAEA,SAASC,oBAAoBC,GAC3B,IAAIC,EAAU9b,SAASC,cAAc,OAqBrC,OApBA6b,EAAQC,MAAMC,QAAW,mTAiBzBF,EAAQG,UAAa,0FAAyFJ,4EAC9G7b,SAASoH,KAAKtB,YAAYgW,GAEnBA,CACT,CAEA,SAASI,qBAAqBL,UAC5B,IAAKnQ,UAEH,YADA7U,QAAQC,KAAK,qDAIfkP,OAAOmW,gBAAkB,KACvBnW,OAAOoW,aAAa/jB,QACpBwjB,SAAWrB,WAAW,GACtBxU,OAAOoW,aAAaC,QAAQ,eAAgBR,UAC5C7V,OAAOsW,SAASC,QAAO,EAAM,EAG/BV,SAAWA,UAAY7V,OAAOoW,aAAaI,QAAQ,gBAC9CX,WACHA,SAAWrB,WAAW,GACtBxU,OAAOoW,aAAaC,QAAQ,eAAgBR,WAG9C,IAAIC,QAAUF,oBAAoBC,UAElC7V,OAAOyW,iCAAkC,EACzCzW,OAAO0W,uBAAyB,CAAC,EAEjC,IAAIzG,QAAU,GAGV0G,oBAAsB,GACtBC,eAAkBC,IACpB,IAAItX,EAAQsX,EAAEnF,OAAOnS,MACrB0Q,QAAU4G,EAAEnF,OAAOC,QACnBgF,oBAAoB5lB,KAAKwO,EAAM,EAEjCS,OAAOhO,iBAAiB,qBAAsB4kB,gBAE9C,IAAIE,SAAWA,KAEb,IAAIC,KAAO,IAAIC,KAAKnB,SAAU,CAC5BoB,KAAM,iBACNC,QAAQ,EACRC,KAAM,IACNC,OAAQ,CACNC,WAAY,CACV,CAAEC,IAAK,gCACP,CAAEA,IAAK,iCACP,CAAEA,IAAK,iCACP,CAAEA,IAAK,iCACP,CAAEA,IAAK,mCAGXC,MAAO,IAGTR,KAAKS,GAAG,QAAQ,KACdT,KAAKS,GAAG,cAAepC,aACrBpV,OAAO0W,uBAAuBtB,WAAaA,WAC3CA,WAAWoC,GAAG,QAAQ,WAEpB1B,QAAQG,UAAY,YAGpBb,WAAWoC,GAAG,QAAQ,SAAUrlB,MAC9B,GAAkB,SAAdA,KAAKqJ,KAAiB,CACxB,IAAIuZ,OAAS/a,SAASC,cAAc,UACpC8a,OAAO7d,aAAa,OAAQ,mBAC5B6d,OAAOC,OAAS,KACdD,OAAO0C,WAAW/S,YAAYqQ,QAG9B/U,OAAOrG,oBACL,qBACAid,gBAEFD,oBAAoBnmB,SAAS+O,IAC3B,IAAItN,EAAQ,IAAIwf,YAAY,qBAAsB,CAChDC,OAAQ,CAAEnS,MAAOA,EAAOoS,QAAS1B,WAEnCjQ,OAAO4E,cAAc3S,EAAM,GAC3B,EAEJ8iB,OAAOkB,UAAY9jB,KAAK4iB,QACvB/a,SAASib,MAAQjb,SAASkb,iBAAiBpV,YAAYiV,QACxDA,OAAOC,SAEPG,qBAAqBC,WACvB,MAAO,GAAkB,kBAAdjjB,KAAKqJ,KAA0B,CACxC,IAAIkc,MAAQC,KAAKxlB,KAAK4iB,QAClB5iB,KAAKylB,YACPxC,WAAWI,KAAK,CACdtC,OAAQ,aACRwE,MAAOA,OAGb,CACF,GACF,GAAE,GACF,GACF,EAIJ7C,aACE,8DACAiC,SAEJ,CAEA,GAAIpR,UAAW,CACb,MAAMmS,EAAY,IAAIC,gBAAgB9X,OAAOsW,SAASyB,QAGlDF,EAAUG,IAAI,2BAChB9B,sBAEJ,C,uDC7vDA,MAAM7U,EAEL,mBAAOC,CAAc9C,GAEpB,MAAMpL,EAAS4G,SAASC,cAAe,UAEvC,SAASge,IAER,IAAIC,EAAiB,KAErBC,eAAeC,EAAkBC,GAEhCA,EAAQrmB,iBAAkB,MAAOsmB,SAE3B9Z,EAASE,GAAG6Z,WAAYF,GAC9BjlB,EAAOolB,YAAc,UAErBN,EAAiBG,CAElB,CAEA,SAASC,IAERJ,EAAeve,oBAAqB,MAAO2e,GAE3CllB,EAAOolB,YAAc,WAErBN,EAAiB,IAElB,CAIA9kB,EAAO2iB,MAAM0C,QAAU,GAEvBrlB,EAAO2iB,MAAM2C,OAAS,UACtBtlB,EAAO2iB,MAAMvV,KAAO,mBACpBpN,EAAO2iB,MAAMtb,MAAQ,QAErBrH,EAAOolB,YAAc,WAErBplB,EAAOulB,aAAe,WAErBvlB,EAAO2iB,MAAMve,QAAU,KAExB,EAEApE,EAAOwlB,aAAe,WAErBxlB,EAAO2iB,MAAMve,QAAU,KAExB,EAEApE,EAAOylB,QAAU,WAEhB,GAAwB,OAAnBX,EAA0B,CAS9B,MAAMhX,EAAc,CAAE4X,iBAAkB,CAAE,cAAe,gBAAiB,gBAAiB,WAC3FC,UAAUra,GAAGsa,eAAgB,eAAgB9X,GAAc+X,KAAMb,EAElE,MAECF,EAAetU,KAIjB,CAED,CAEA,SAASsV,IAER9lB,EAAO2iB,MAAM0C,QAAU,GAEvBrlB,EAAO2iB,MAAM2C,OAAS,OACtBtlB,EAAO2iB,MAAMvV,KAAO,mBACpBpN,EAAO2iB,MAAMtb,MAAQ,QAErBrH,EAAOulB,aAAe,KACtBvlB,EAAOwlB,aAAe,KAEtBxlB,EAAOylB,QAAU,IAElB,CAEA,SAASM,IAERD,IAEA9lB,EAAOolB,YAAc,kBAEtB,CAEA,SAASY,EAAkBC,GAE1BH,IAEAroB,QAAQC,KAAM,sDAAuDuoB,GAErEjmB,EAAOolB,YAAc,gBAEtB,CAEA,SAASc,EAAgBC,GAExBA,EAAQxD,MAAMzkB,SAAW,WACzBioB,EAAQxD,MAAMzV,OAAS,OACvBiZ,EAAQxD,MAAMyD,QAAU,WACxBD,EAAQxD,MAAM0D,OAAS,iBACvBF,EAAQxD,MAAM2D,aAAe,MAC7BH,EAAQxD,MAAMhW,WAAa,kBAC3BwZ,EAAQxD,MAAM/a,MAAQ,OACtBue,EAAQxD,MAAMzb,KAAO,yBACrBif,EAAQxD,MAAMrb,UAAY,SAC1B6e,EAAQxD,MAAMve,QAAU,MACxB+hB,EAAQxD,MAAM4D,QAAU,OACxBJ,EAAQxD,MAAM6D,OAAS,KAExB,CAEA,GAAK,OAAQb,UAmBZ,OAjBA3lB,EAAO1E,GAAK,WACZ0E,EAAO2iB,MAAM0C,QAAU,OAEvBa,EAAgBlmB,GAEhB2lB,UAAUra,GAAGmb,mBAAoB,gBAAiBZ,MAAM,SAAWa,GAElEA,EAAY7B,IAAgBkB,IAEvBW,GAAazY,EAAS0Y,oBAE1B3mB,EAAO4mB,OAIT,IAAIC,MAAOb,GAEJhmB,EAED,CAEN,MAAMyG,EAAUG,SAASC,cAAe,KAoBxC,OAlBgC,IAA3B+F,OAAOka,iBAEXrgB,EAAQsgB,KAAOngB,SAASsc,SAAS6D,KAAKC,QAAS,SAAU,UACzDvgB,EAAQoc,UAAY,sBAIpBpc,EAAQsgB,KAAO,4BACftgB,EAAQoc,UAAY,uBAIrBpc,EAAQkc,MAAMvV,KAAO,mBACrB3G,EAAQkc,MAAMtb,MAAQ,QACtBZ,EAAQkc,MAAMsE,eAAiB,OAE/Bf,EAAgBzf,GAETA,CAER,CAED,CAEA,qCAAOygB,GAEN,GAA0B,qBAAdvB,WAA6B,OAAQA,UAAY,CAI5D,GAAK,iBAAiBwB,KAAMxB,UAAUyB,WAAc,OAEpDzB,UAAUra,GAAG1M,iBAAkB,kBAAkB,KAEhDqP,EAAS0Y,oBAAqB,CAAI,GAIpC,CAED,EAID1Y,EAAS0Y,oBAAqB,EAC9B1Y,EAASiZ,gC","sources":["webpack://webxr-builder/./src/views/ThreeWebVRExamplesHandInput.vue","webpack://webxr-builder/./node_modules/three/examples/jsm/webxr/XRHandMeshModel.js","webpack://webxr-builder/./node_modules/three/examples/jsm/webxr/OculusHandModel.js","webpack://webxr-builder/./node_modules/three/examples/jsm/webxr/OculusHandPointerModel.js","webpack://webxr-builder/./node_modules/three/examples/jsm/webxr/Text2D.js","webpack://webxr-builder/./src/views/ThreeWebVRExamplesHandInput.vue?20f4","webpack://webxr-builder/./node_modules/three/examples/jsm/libs/ecsy.module.js","webpack://webxr-builder/./node_modules/three/examples/jsm/webxr/VRButton.js"],"sourcesContent":["<template>\n  <div class=\"three-demo-1\">\n    <h1>Three.js WebVR Hand Input</h1>\n    <div id=\"vr-renderer-wrapper-handinput\"></div>\n  </div>\n</template>\n\n<script>\nimport * as THREE from 'three'\nimport { VRButton } from 'three/addons/webxr/VRButton.js'\nimport { XRControllerModelFactory } from 'three/addons/webxr/XRControllerModelFactory.js'\nimport { OculusHandModel } from 'three/addons/webxr/OculusHandModel.js'\nimport { OculusHandPointerModel } from 'three/addons/webxr/OculusHandPointerModel.js'\nimport { createText } from 'three/addons/webxr/Text2D.js'\n\nimport {\n  World,\n  System,\n  Component,\n  TagComponent,\n  Types\n} from 'three/addons/libs/ecsy.module.js'\n\nexport default {\n  // TODO\n  mounted() {\n    class Object3D extends Component {}\n\n    Object3D.schema = {\n      object: { type: Types.Ref }\n    }\n\n    class Button extends Component {}\n\n    Button.schema = {\n      // button states: [none, hovered, pressed]\n      currState: { type: Types.String, default: 'none' },\n      prevState: { type: Types.String, default: 'none' },\n      action: {\n        type: Types.Ref,\n        default: () => {\n          // empty\n        }\n      }\n    }\n\n    class ButtonSystem extends System {\n      execute(/*delta, time*/) {\n        this.queries.buttons.results.forEach((entity) => {\n          const button = entity.getMutableComponent(Button)\n          const buttonMesh = entity.getComponent(Object3D).object\n          if (button.currState == 'none') {\n            buttonMesh.scale.set(1, 1, 1)\n          } else {\n            buttonMesh.scale.set(1.1, 1.1, 1.1)\n          }\n\n          if (button.currState == 'pressed' && button.prevState != 'pressed') {\n            button.action()\n          }\n\n          // preserve prevState, clear currState\n          // HandRaySystem will update currState\n          button.prevState = button.currState\n          button.currState = 'none'\n        })\n      }\n    }\n\n    ButtonSystem.queries = {\n      buttons: {\n        components: [Button]\n      }\n    }\n\n    class Draggable extends Component {}\n\n    Draggable.schema = {\n      // draggable states: [detached, hovered, to-be-attached, attached, to-be-detached]\n      state: { type: Types.String, default: 'none' },\n      originalParent: { type: Types.Ref, default: null },\n      attachedPointer: { type: Types.Ref, default: null }\n    }\n\n    class DraggableSystem extends System {\n      execute(/*delta, time*/) {\n        this.queries.draggable.results.forEach((entity) => {\n          const draggable = entity.getMutableComponent(Draggable)\n          const object = entity.getComponent(Object3D).object\n          if (draggable.originalParent == null) {\n            draggable.originalParent = object.parent\n          }\n\n          switch (draggable.state) {\n            case 'to-be-attached':\n              draggable.attachedPointer.children[0].attach(object)\n              draggable.state = 'attached'\n              break\n            case 'to-be-detached':\n              draggable.originalParent.attach(object)\n              draggable.state = 'detached'\n              break\n            default:\n              object.scale.set(1, 1, 1)\n          }\n        })\n      }\n    }\n\n    DraggableSystem.queries = {\n      draggable: {\n        components: [Draggable]\n      }\n    }\n\n    class Intersectable extends TagComponent {}\n\n    class HandRaySystem extends System {\n      init(attributes) {\n        this.handPointers = attributes.handPointers\n      }\n\n      execute(/*delta, time*/) {\n        this.handPointers.forEach((hp) => {\n          let distance = null\n          let intersectingEntity = null\n          this.queries.intersectable.results.forEach((entity) => {\n            const object = entity.getComponent(Object3D).object\n            const intersections = hp.intersectObject(object, false)\n            if (intersections && intersections.length > 0) {\n              if (distance == null || intersections[0].distance < distance) {\n                distance = intersections[0].distance\n                intersectingEntity = entity\n              }\n            }\n          })\n          if (distance) {\n            hp.setCursor(distance)\n            if (intersectingEntity.hasComponent(Button)) {\n              const button = intersectingEntity.getMutableComponent(Button)\n              if (hp.isPinched()) {\n                button.currState = 'pressed'\n              } else if (button.currState != 'pressed') {\n                button.currState = 'hovered'\n              }\n            }\n\n            if (intersectingEntity.hasComponent(Draggable)) {\n              const draggable =\n                intersectingEntity.getMutableComponent(Draggable)\n              const object = intersectingEntity.getComponent(Object3D).object\n              object.scale.set(1.1, 1.1, 1.1)\n              if (hp.isPinched()) {\n                if (!hp.isAttached() && draggable.state != 'attached') {\n                  draggable.state = 'to-be-attached'\n                  draggable.attachedPointer = hp\n                  hp.setAttached(true)\n                }\n              } else {\n                if (hp.isAttached() && draggable.state == 'attached') {\n                  console.log('hello')\n                  draggable.state = 'to-be-detached'\n                  draggable.attachedPointer = null\n                  hp.setAttached(false)\n                }\n              }\n            }\n          } else {\n            hp.setCursor(1.5)\n          }\n        })\n      }\n    }\n\n    HandRaySystem.queries = {\n      intersectable: {\n        components: [Intersectable]\n      }\n    }\n\n    class HandsInstructionText extends TagComponent {}\n\n    class InstructionSystem extends System {\n      init(attributes) {\n        this.controllers = attributes.controllers\n      }\n\n      execute(/*delta, time*/) {\n        let visible = false\n        this.controllers.forEach((controller) => {\n          if (controller.visible) {\n            visible = true\n          }\n        })\n\n        this.queries.instructionTexts.results.forEach((entity) => {\n          const object = entity.getComponent(Object3D).object\n          object.visible = visible\n        })\n      }\n    }\n\n    InstructionSystem.queries = {\n      instructionTexts: {\n        components: [HandsInstructionText]\n      }\n    }\n\n    class OffsetFromCamera extends Component {}\n\n    OffsetFromCamera.schema = {\n      x: { type: Types.Number, default: 0 },\n      y: { type: Types.Number, default: 0 },\n      z: { type: Types.Number, default: 0 }\n    }\n\n    class NeedCalibration extends TagComponent {}\n\n    class CalibrationSystem extends System {\n      init(attributes) {\n        this.camera = attributes.camera\n        this.renderer = attributes.renderer\n      }\n\n      execute(/*delta, time*/) {\n        this.queries.needCalibration.results.forEach((entity) => {\n          if (this.renderer.xr.getSession()) {\n            const offset = entity.getComponent(OffsetFromCamera)\n            const object = entity.getComponent(Object3D).object\n            const xrCamera = this.renderer.xr.getCamera()\n            object.position.x = xrCamera.position.x + offset.x\n            object.position.y = xrCamera.position.y + offset.y\n            object.position.z = xrCamera.position.z + offset.z\n            entity.removeComponent(NeedCalibration)\n          }\n        })\n      }\n    }\n\n    CalibrationSystem.queries = {\n      needCalibration: {\n        components: [NeedCalibration]\n      }\n    }\n\n    class Randomizable extends TagComponent {}\n\n    class RandomizerSystem extends System {\n      init(/*attributes*/) {\n        this.needRandomizing = true\n      }\n\n      execute(/*delta, time*/) {\n        if (!this.needRandomizing) {\n          return\n        }\n\n        this.queries.randomizable.results.forEach((entity) => {\n          const object = entity.getComponent(Object3D).object\n\n          object.material.color.setHex(Math.random() * 0xffffff)\n\n          object.position.x = Math.random() * 2 - 1\n          object.position.y = Math.random() * 2\n          object.position.z = Math.random() * 2 - 1\n\n          object.rotation.x = Math.random() * 2 * Math.PI\n          object.rotation.y = Math.random() * 2 * Math.PI\n          object.rotation.z = Math.random() * 2 * Math.PI\n\n          object.scale.x = Math.random() + 0.5\n          object.scale.y = Math.random() + 0.5\n          object.scale.z = Math.random() + 0.5\n          this.needRandomizing = false\n        })\n      }\n    }\n\n    RandomizerSystem.queries = {\n      randomizable: {\n        components: [Randomizable]\n      }\n    }\n\n    const world = new World()\n    const clock = new THREE.Clock()\n    let camera, scene, renderer\n\n    init()\n    animate()\n\n    function makeButtonMesh(x, y, z, color) {\n      const geometry = new THREE.BoxGeometry(x, y, z)\n      const material = new THREE.MeshPhongMaterial({ color: color })\n      const buttonMesh = new THREE.Mesh(geometry, material)\n      return buttonMesh\n    }\n\n    function init() {\n      // TODO\n      const rendererWrapper = document.getElementById(\n        'vr-renderer-wrapper-handinput'\n      )\n      const container = document.createElement('div')\n      rendererWrapper.appendChild(container)\n\n      scene = new THREE.Scene()\n      scene.background = new THREE.Color(0x444444)\n\n      camera = new THREE.PerspectiveCamera(\n        50,\n        window.innerWidth / window.innerHeight,\n        0.1,\n        10\n      )\n      camera.position.set(0, 1.2, 0.3)\n\n      scene.add(new THREE.HemisphereLight(0xcccccc, 0x999999, 3))\n\n      const light = new THREE.DirectionalLight(0xffffff, 3)\n      light.position.set(0, 6, 0)\n      light.castShadow = true\n      light.shadow.camera.top = 2\n      light.shadow.camera.bottom = -2\n      light.shadow.camera.right = 2\n      light.shadow.camera.left = -2\n      light.shadow.mapSize.set(4096, 4096)\n      scene.add(light)\n\n      renderer = new THREE.WebGLRenderer({ antialias: true })\n      renderer.setPixelRatio(window.devicePixelRatio)\n      renderer.setSize(window.innerWidth, window.innerHeight)\n      renderer.shadowMap.enabled = true\n      renderer.xr.enabled = true\n      renderer.xr.cameraAutoUpdate = false\n\n      container.appendChild(renderer.domElement)\n\n      const sessionInit = {\n        requiredFeatures: ['hand-tracking']\n      }\n\n      document.body.appendChild(VRButton.createButton(renderer, sessionInit))\n\n      // controllers\n      const controller1 = renderer.xr.getController(0)\n      scene.add(controller1)\n\n      const controller2 = renderer.xr.getController(1)\n      scene.add(controller2)\n\n      const controllerModelFactory = new XRControllerModelFactory()\n\n      // Hand 1\n      const controllerGrip1 = renderer.xr.getControllerGrip(0)\n      controllerGrip1.add(\n        controllerModelFactory.createControllerModel(controllerGrip1)\n      )\n      scene.add(controllerGrip1)\n\n      const hand1 = renderer.xr.getHand(0)\n      hand1.add(new OculusHandModel(hand1))\n      const handPointer1 = new OculusHandPointerModel(hand1, controller1)\n      hand1.add(handPointer1)\n\n      scene.add(hand1)\n\n      // Hand 2\n      const controllerGrip2 = renderer.xr.getControllerGrip(1)\n      controllerGrip2.add(\n        controllerModelFactory.createControllerModel(controllerGrip2)\n      )\n      scene.add(controllerGrip2)\n\n      const hand2 = renderer.xr.getHand(1)\n      hand2.add(new OculusHandModel(hand2))\n      const handPointer2 = new OculusHandPointerModel(hand2, controller2)\n      hand2.add(handPointer2)\n      scene.add(hand2)\n\n      // setup objects in scene and entities\n      const floorGeometry = new THREE.PlaneGeometry(4, 4)\n      const floorMaterial = new THREE.MeshPhongMaterial({ color: 0x222222 })\n      const floor = new THREE.Mesh(floorGeometry, floorMaterial)\n      floor.rotation.x = -Math.PI / 2\n      floor.receiveShadow = true\n      scene.add(floor)\n\n      const menuGeometry = new THREE.PlaneGeometry(0.24, 0.5)\n      const menuMaterial = new THREE.MeshPhongMaterial({\n        opacity: 0,\n        transparent: true\n      })\n      const menuMesh = new THREE.Mesh(menuGeometry, menuMaterial)\n      menuMesh.position.set(0.4, 1, -1)\n      menuMesh.rotation.y = -Math.PI / 12\n      scene.add(menuMesh)\n\n      const resetButton = makeButtonMesh(0.2, 0.1, 0.01, 0x355c7d)\n      const resetButtonText = createText('reset', 0.06)\n      resetButton.add(resetButtonText)\n      resetButtonText.position.set(0, 0, 0.0051)\n      resetButton.position.set(0, -0.06, 0)\n      menuMesh.add(resetButton)\n\n      const exitButton = makeButtonMesh(0.2, 0.1, 0.01, 0xff0000)\n      const exitButtonText = createText('exit', 0.06)\n      exitButton.add(exitButtonText)\n      exitButtonText.position.set(0, 0, 0.0051)\n      exitButton.position.set(0, -0.18, 0)\n      menuMesh.add(exitButton)\n\n      const instructionText = createText(\n        'This is a WebXR Hands demo, please explore with hands.',\n        0.04\n      )\n      instructionText.position.set(0, 1.6, -0.6)\n      scene.add(instructionText)\n\n      const exitText = createText('Exiting session...', 0.04)\n      exitText.position.set(0, 1.5, -0.6)\n      exitText.visible = false\n      scene.add(exitText)\n\n      world\n        .registerComponent(Object3D)\n        .registerComponent(Button)\n        .registerComponent(Intersectable)\n        .registerComponent(HandsInstructionText)\n        .registerComponent(OffsetFromCamera)\n        .registerComponent(NeedCalibration)\n        .registerComponent(Randomizable)\n        .registerComponent(Draggable)\n\n      world\n        .registerSystem(RandomizerSystem)\n        .registerSystem(InstructionSystem, {\n          controllers: [controllerGrip1, controllerGrip2]\n        })\n        .registerSystem(CalibrationSystem, {\n          renderer: renderer,\n          camera: camera\n        })\n        .registerSystem(ButtonSystem)\n        .registerSystem(DraggableSystem)\n        .registerSystem(HandRaySystem, {\n          handPointers: [handPointer1, handPointer2]\n        })\n\n      for (let i = 0; i < 20; i++) {\n        const object = new THREE.Mesh(\n          new THREE.BoxGeometry(0.15, 0.15, 0.15),\n          new THREE.MeshLambertMaterial({ color: 0xffffff })\n        )\n        scene.add(object)\n\n        const entity = world.createEntity()\n        entity.addComponent(Intersectable)\n        entity.addComponent(Randomizable)\n        entity.addComponent(Object3D, { object: object })\n        entity.addComponent(Draggable)\n      }\n\n      const menuEntity = world.createEntity()\n      menuEntity.addComponent(Intersectable)\n      menuEntity.addComponent(OffsetFromCamera, { x: 0.4, y: 0, z: -1 })\n      menuEntity.addComponent(NeedCalibration)\n      menuEntity.addComponent(Object3D, { object: menuMesh })\n\n      const rbEntity = world.createEntity()\n      rbEntity.addComponent(Intersectable)\n      rbEntity.addComponent(Object3D, { object: resetButton })\n      const rbAction = function () {\n        world.getSystem(RandomizerSystem).needRandomizing = true\n      }\n\n      rbEntity.addComponent(Button, { action: rbAction })\n\n      const ebEntity = world.createEntity()\n      ebEntity.addComponent(Intersectable)\n      ebEntity.addComponent(Object3D, { object: exitButton })\n      const ebAction = function () {\n        exitText.visible = true\n        setTimeout(function () {\n          exitText.visible = false\n          // TODO\n          renderer?.xr?.getSession()?.end()\n        }, 2000)\n      }\n\n      ebEntity.addComponent(Button, { action: ebAction })\n\n      const itEntity = world.createEntity()\n      itEntity.addComponent(HandsInstructionText)\n      itEntity.addComponent(Object3D, { object: instructionText })\n\n      window.addEventListener('resize', onWindowResize)\n    }\n\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight\n      camera.updateProjectionMatrix()\n\n      renderer.setSize(window.innerWidth, window.innerHeight)\n    }\n\n    function animate() {\n      renderer.setAnimationLoop(render)\n    }\n\n    function render() {\n      const delta = clock.getDelta()\n      const elapsedTime = clock.elapsedTime\n      renderer.xr.updateCamera(camera)\n      world.execute(delta, elapsedTime)\n      renderer.render(scene, camera)\n    }\n\n    // TODO\n    const onComponentUnmounted = () => {\n      renderer.setAnimationLoop(null)\n      window.removeEventListener('resize', onWindowResize)\n      window.removeEventListener('component-unm÷ounted', onComponentUnmounted)\n      const vrButton = document.getElementById('VRButton')\n      if (vrButton) {\n        document.body.removeChild(vrButton)\n      }\n    }\n\n    // TODO\n    window.addEventListener('component-unmounted', onComponentUnmounted)\n  },\n  // TODO\n  unmounted() {\n    window.dispatchEvent(new Event('component-unmounted'))\n  }\n}\n</script>\n\n<style lang=\"scss\">\n#vr-renderer-wrapper-handinput {\n  border: 5px #2c3e50 solid;\n  height: calc(100% - 256px);\n}\n</style>\n","import { GLTFLoader } from '../loaders/GLTFLoader.js';\n\nconst DEFAULT_HAND_PROFILE_PATH = 'https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets@1.0/dist/profiles/generic-hand/';\n\nclass XRHandMeshModel {\n\n\tconstructor( handModel, controller, path, handedness, loader = null ) {\n\n\t\tthis.controller = controller;\n\t\tthis.handModel = handModel;\n\n\t\tthis.bones = [];\n\n\t\tif ( loader === null ) {\n\n\t\t\tloader = new GLTFLoader();\n\t\t\tloader.setPath( path || DEFAULT_HAND_PROFILE_PATH );\n\n\t\t}\n\n\t\tloader.load( `${handedness}.glb`, gltf => {\n\n\t\t\tconst object = gltf.scene.children[ 0 ];\n\t\t\tthis.handModel.add( object );\n\n\t\t\tconst mesh = object.getObjectByProperty( 'type', 'SkinnedMesh' );\n\t\t\tmesh.frustumCulled = false;\n\t\t\tmesh.castShadow = true;\n\t\t\tmesh.receiveShadow = true;\n\n\t\t\tconst joints = [\n\t\t\t\t'wrist',\n\t\t\t\t'thumb-metacarpal',\n\t\t\t\t'thumb-phalanx-proximal',\n\t\t\t\t'thumb-phalanx-distal',\n\t\t\t\t'thumb-tip',\n\t\t\t\t'index-finger-metacarpal',\n\t\t\t\t'index-finger-phalanx-proximal',\n\t\t\t\t'index-finger-phalanx-intermediate',\n\t\t\t\t'index-finger-phalanx-distal',\n\t\t\t\t'index-finger-tip',\n\t\t\t\t'middle-finger-metacarpal',\n\t\t\t\t'middle-finger-phalanx-proximal',\n\t\t\t\t'middle-finger-phalanx-intermediate',\n\t\t\t\t'middle-finger-phalanx-distal',\n\t\t\t\t'middle-finger-tip',\n\t\t\t\t'ring-finger-metacarpal',\n\t\t\t\t'ring-finger-phalanx-proximal',\n\t\t\t\t'ring-finger-phalanx-intermediate',\n\t\t\t\t'ring-finger-phalanx-distal',\n\t\t\t\t'ring-finger-tip',\n\t\t\t\t'pinky-finger-metacarpal',\n\t\t\t\t'pinky-finger-phalanx-proximal',\n\t\t\t\t'pinky-finger-phalanx-intermediate',\n\t\t\t\t'pinky-finger-phalanx-distal',\n\t\t\t\t'pinky-finger-tip',\n\t\t\t];\n\n\t\t\tjoints.forEach( jointName => {\n\n\t\t\t\tconst bone = object.getObjectByName( jointName );\n\n\t\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\t\tbone.jointName = jointName;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( `Couldn't find ${jointName} in ${handedness} hand mesh` );\n\n\t\t\t\t}\n\n\t\t\t\tthis.bones.push( bone );\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\tupdateMesh() {\n\n\t\t// XR Joints\n\t\tconst XRJoints = this.controller.joints;\n\n\t\tfor ( let i = 0; i < this.bones.length; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tconst XRJoint = XRJoints[ bone.jointName ];\n\n\t\t\t\tif ( XRJoint.visible ) {\n\n\t\t\t\t\tconst position = XRJoint.position;\n\n\t\t\t\t\tbone.position.copy( position );\n\t\t\t\t\tbone.quaternion.copy( XRJoint.quaternion );\n\t\t\t\t\t// bone.scale.setScalar( XRJoint.jointRadius || defaultRadius );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nexport { XRHandMeshModel };\n","import { Object3D, Sphere, Box3 } from 'three';\nimport { XRHandMeshModel } from './XRHandMeshModel.js';\n\nconst TOUCH_RADIUS = 0.01;\nconst POINTING_JOINT = 'index-finger-tip';\n\nclass OculusHandModel extends Object3D {\n\n\tconstructor( controller, loader = null ) {\n\n\t\tsuper();\n\n\t\tthis.controller = controller;\n\t\tthis.motionController = null;\n\t\tthis.envMap = null;\n\t\tthis.loader = loader;\n\n\t\tthis.mesh = null;\n\n\t\tcontroller.addEventListener( 'connected', ( event ) => {\n\n\t\t\tconst xrInputSource = event.data;\n\n\t\t\tif ( xrInputSource.hand && ! this.motionController ) {\n\n\t\t\t\tthis.xrInputSource = xrInputSource;\n\n\t\t\t\tthis.motionController = new XRHandMeshModel( this, controller, this.path, xrInputSource.handedness, this.loader );\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcontroller.addEventListener( 'disconnected', () => {\n\n\t\t\tthis.clear();\n\t\t\tthis.motionController = null;\n\n\t\t} );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.motionController ) {\n\n\t\t\tthis.motionController.updateMesh();\n\n\t\t}\n\n\t}\n\n\tgetPointerPosition() {\n\n\t\tconst indexFingerTip = this.controller.joints[ POINTING_JOINT ];\n\t\tif ( indexFingerTip ) {\n\n\t\t\treturn indexFingerTip.position;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t}\n\n\tintersectBoxObject( boxObject ) {\n\n\t\tconst pointerPosition = this.getPointerPosition();\n\t\tif ( pointerPosition ) {\n\n\t\t\tconst indexSphere = new Sphere( pointerPosition, TOUCH_RADIUS );\n\t\t\tconst box = new Box3().setFromObject( boxObject );\n\t\t\treturn indexSphere.intersectsBox( box );\n\n\t\t} else {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\tcheckButton( button ) {\n\n\t\tif ( this.intersectBoxObject( button ) ) {\n\n\t\t\tbutton.onPress();\n\n\t\t} else {\n\n\t\t\tbutton.onClear();\n\n\t\t}\n\n\t\tif ( button.isPressed() ) {\n\n\t\t\tbutton.whilePressed();\n\n\t\t}\n\n\t}\n\n}\n\nexport { OculusHandModel };\n","import * as THREE from 'three';\n\nconst PINCH_MAX = 0.05;\nconst PINCH_THRESHOLD = 0.02;\nconst PINCH_MIN = 0.01;\nconst POINTER_ADVANCE_MAX = 0.02;\nconst POINTER_OPACITY_MAX = 1;\nconst POINTER_OPACITY_MIN = 0.4;\nconst POINTER_FRONT_RADIUS = 0.002;\nconst POINTER_REAR_RADIUS = 0.01;\nconst POINTER_REAR_RADIUS_MIN = 0.003;\nconst POINTER_LENGTH = 0.035;\nconst POINTER_SEGMENTS = 16;\nconst POINTER_RINGS = 12;\nconst POINTER_HEMISPHERE_ANGLE = 110;\nconst YAXIS = /* @__PURE__ */ new THREE.Vector3( 0, 1, 0 );\nconst ZAXIS = /* @__PURE__ */ new THREE.Vector3( 0, 0, 1 );\n\nconst CURSOR_RADIUS = 0.02;\nconst CURSOR_MAX_DISTANCE = 1.5;\n\nclass OculusHandPointerModel extends THREE.Object3D {\n\n\tconstructor( hand, controller ) {\n\n\t\tsuper();\n\n\t\tthis.hand = hand;\n\t\tthis.controller = controller;\n\n\t\t// Unused\n\t\tthis.motionController = null;\n\t\tthis.envMap = null;\n\t\tthis.mesh = null;\n\n\t\tthis.pointerGeometry = null;\n\t\tthis.pointerMesh = null;\n\t\tthis.pointerObject = null;\n\n\t\tthis.pinched = false;\n\t\tthis.attached = false;\n\n\t\tthis.cursorObject = null;\n\n\t\tthis.raycaster = null;\n\n\t\tthis._onConnected = this._onConnected.bind( this );\n\t\tthis._onDisconnected = this._onDisconnected.bind( this );\n\t\tthis.hand.addEventListener( 'connected', this._onConnected );\n\t\tthis.hand.addEventListener( 'disconnected', this._onDisconnected );\n\n\t}\n\n\t_onConnected( event ) {\n\n\t\tconst xrInputSource = event.data;\n\t\tif ( xrInputSource.hand ) {\n\n\t\t\tthis.visible = true;\n\t\t\tthis.xrInputSource = xrInputSource;\n\n\t\t\tthis.createPointer();\n\n\t\t}\n\n\t}\n\n\t_onDisconnected() {\n\n\t\tthis.visible = false;\n\t\tthis.xrInputSource = null;\n\n\t\tif ( this.pointerGeometry ) this.pointerGeometry.dispose();\n\t\tif ( this.pointerMesh && this.pointerMesh.material ) this.pointerMesh.material.dispose();\n\n\t\tthis.clear();\n\n\t}\n\n\t_drawVerticesRing( vertices, baseVector, ringIndex ) {\n\n\t\tconst segmentVector = baseVector.clone();\n\t\tfor ( let i = 0; i < POINTER_SEGMENTS; i ++ ) {\n\n\t\t\tsegmentVector.applyAxisAngle( ZAXIS, ( Math.PI * 2 ) / POINTER_SEGMENTS );\n\t\t\tconst vid = ringIndex * POINTER_SEGMENTS + i;\n\t\t\tvertices[ 3 * vid ] = segmentVector.x;\n\t\t\tvertices[ 3 * vid + 1 ] = segmentVector.y;\n\t\t\tvertices[ 3 * vid + 2 ] = segmentVector.z;\n\n\t\t}\n\n\t}\n\n\t_updatePointerVertices( rearRadius ) {\n\n\t\tconst vertices = this.pointerGeometry.attributes.position.array;\n\t\t// first ring for front face\n\t\tconst frontFaceBase = new THREE.Vector3(\n\t\t\tPOINTER_FRONT_RADIUS,\n\t\t\t0,\n\t\t\t- 1 * ( POINTER_LENGTH - rearRadius )\n\t\t);\n\t\tthis._drawVerticesRing( vertices, frontFaceBase, 0 );\n\n\t\t// rings for rear hemisphere\n\t\tconst rearBase = new THREE.Vector3(\n\t\t\tMath.sin( ( Math.PI * POINTER_HEMISPHERE_ANGLE ) / 180 ) * rearRadius,\n\t\t\tMath.cos( ( Math.PI * POINTER_HEMISPHERE_ANGLE ) / 180 ) * rearRadius,\n\t\t\t0\n\t\t);\n\t\tfor ( let i = 0; i < POINTER_RINGS; i ++ ) {\n\n\t\t\tthis._drawVerticesRing( vertices, rearBase, i + 1 );\n\t\t\trearBase.applyAxisAngle(\n\t\t\t\tYAXIS,\n\t\t\t\t( Math.PI * POINTER_HEMISPHERE_ANGLE ) / 180 / ( POINTER_RINGS * - 2 )\n\t\t\t);\n\n\t\t}\n\n\t\t// front and rear face center vertices\n\t\tconst frontCenterIndex = POINTER_SEGMENTS * ( 1 + POINTER_RINGS );\n\t\tconst rearCenterIndex = POINTER_SEGMENTS * ( 1 + POINTER_RINGS ) + 1;\n\t\tconst frontCenter = new THREE.Vector3(\n\t\t\t0,\n\t\t\t0,\n\t\t\t- 1 * ( POINTER_LENGTH - rearRadius )\n\t\t);\n\t\tvertices[ frontCenterIndex * 3 ] = frontCenter.x;\n\t\tvertices[ frontCenterIndex * 3 + 1 ] = frontCenter.y;\n\t\tvertices[ frontCenterIndex * 3 + 2 ] = frontCenter.z;\n\t\tconst rearCenter = new THREE.Vector3( 0, 0, rearRadius );\n\t\tvertices[ rearCenterIndex * 3 ] = rearCenter.x;\n\t\tvertices[ rearCenterIndex * 3 + 1 ] = rearCenter.y;\n\t\tvertices[ rearCenterIndex * 3 + 2 ] = rearCenter.z;\n\n\t\tthis.pointerGeometry.setAttribute(\n\t\t\t'position',\n\t\t\tnew THREE.Float32BufferAttribute( vertices, 3 )\n\t\t);\n\t\t// verticesNeedUpdate = true;\n\n\t}\n\n\tcreatePointer() {\n\n\t\tlet i, j;\n\t\tconst vertices = new Array(\n\t\t\t( ( POINTER_RINGS + 1 ) * POINTER_SEGMENTS + 2 ) * 3\n\t\t).fill( 0 );\n\t\t// const vertices = [];\n\t\tconst indices = [];\n\t\tthis.pointerGeometry = new THREE.BufferGeometry();\n\n\t\tthis.pointerGeometry.setAttribute(\n\t\t\t'position',\n\t\t\tnew THREE.Float32BufferAttribute( vertices, 3 )\n\t\t);\n\n\t\tthis._updatePointerVertices( POINTER_REAR_RADIUS );\n\n\t\t// construct faces to connect rings\n\t\tfor ( i = 0; i < POINTER_RINGS; i ++ ) {\n\n\t\t\tfor ( j = 0; j < POINTER_SEGMENTS - 1; j ++ ) {\n\n\t\t\t\tindices.push(\n\t\t\t\t\ti * POINTER_SEGMENTS + j,\n\t\t\t\t\ti * POINTER_SEGMENTS + j + 1,\n\t\t\t\t\t( i + 1 ) * POINTER_SEGMENTS + j\n\t\t\t\t);\n\t\t\t\tindices.push(\n\t\t\t\t\ti * POINTER_SEGMENTS + j + 1,\n\t\t\t\t\t( i + 1 ) * POINTER_SEGMENTS + j + 1,\n\t\t\t\t\t( i + 1 ) * POINTER_SEGMENTS + j\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tindices.push(\n\t\t\t\t( i + 1 ) * POINTER_SEGMENTS - 1,\n\t\t\t\ti * POINTER_SEGMENTS,\n\t\t\t\t( i + 2 ) * POINTER_SEGMENTS - 1\n\t\t\t);\n\t\t\tindices.push(\n\t\t\t\ti * POINTER_SEGMENTS,\n\t\t\t\t( i + 1 ) * POINTER_SEGMENTS,\n\t\t\t\t( i + 2 ) * POINTER_SEGMENTS - 1\n\t\t\t);\n\n\t\t}\n\n\t\t// construct front and rear face\n\t\tconst frontCenterIndex = POINTER_SEGMENTS * ( 1 + POINTER_RINGS );\n\t\tconst rearCenterIndex = POINTER_SEGMENTS * ( 1 + POINTER_RINGS ) + 1;\n\n\t\tfor ( i = 0; i < POINTER_SEGMENTS - 1; i ++ ) {\n\n\t\t\tindices.push( frontCenterIndex, i + 1, i );\n\t\t\tindices.push(\n\t\t\t\trearCenterIndex,\n\t\t\t\ti + POINTER_SEGMENTS * POINTER_RINGS,\n\t\t\t\ti + POINTER_SEGMENTS * POINTER_RINGS + 1\n\t\t\t);\n\n\t\t}\n\n\t\tindices.push( frontCenterIndex, 0, POINTER_SEGMENTS - 1 );\n\t\tindices.push(\n\t\t\trearCenterIndex,\n\t\t\tPOINTER_SEGMENTS * ( POINTER_RINGS + 1 ) - 1,\n\t\t\tPOINTER_SEGMENTS * POINTER_RINGS\n\t\t);\n\n\t\tconst material = new THREE.MeshBasicMaterial();\n\t\tmaterial.transparent = true;\n\t\tmaterial.opacity = POINTER_OPACITY_MIN;\n\n\t\tthis.pointerGeometry.setIndex( indices );\n\n\t\tthis.pointerMesh = new THREE.Mesh( this.pointerGeometry, material );\n\n\t\tthis.pointerMesh.position.set( 0, 0, - 1 * POINTER_REAR_RADIUS );\n\t\tthis.pointerObject = new THREE.Object3D();\n\t\tthis.pointerObject.add( this.pointerMesh );\n\n\t\tthis.raycaster = new THREE.Raycaster();\n\n\t\t// create cursor\n\t\tconst cursorGeometry = new THREE.SphereGeometry( CURSOR_RADIUS, 10, 10 );\n\t\tconst cursorMaterial = new THREE.MeshBasicMaterial();\n\t\tcursorMaterial.transparent = true;\n\t\tcursorMaterial.opacity = POINTER_OPACITY_MIN;\n\n\t\tthis.cursorObject = new THREE.Mesh( cursorGeometry, cursorMaterial );\n\t\tthis.pointerObject.add( this.cursorObject );\n\n\t\tthis.add( this.pointerObject );\n\n\t}\n\n\t_updateRaycaster() {\n\n\t\tif ( this.raycaster ) {\n\n\t\t\tconst pointerMatrix = this.pointerObject.matrixWorld;\n\t\t\tconst tempMatrix = new THREE.Matrix4();\n\t\t\ttempMatrix.identity().extractRotation( pointerMatrix );\n\t\t\tthis.raycaster.ray.origin.setFromMatrixPosition( pointerMatrix );\n\t\t\tthis.raycaster.ray.direction.set( 0, 0, - 1 ).applyMatrix4( tempMatrix );\n\n\t\t}\n\n\t}\n\n\t_updatePointer() {\n\n\t\tthis.pointerObject.visible = this.controller.visible;\n\t\tconst indexTip = this.hand.joints[ 'index-finger-tip' ];\n\t\tconst thumbTip = this.hand.joints[ 'thumb-tip' ];\n\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\t\tconst position = indexTip.position\n\t\t\t.clone()\n\t\t\t.add( thumbTip.position )\n\t\t\t.multiplyScalar( 0.5 );\n\t\tthis.pointerObject.position.copy( position );\n\t\tthis.pointerObject.quaternion.copy( this.controller.quaternion );\n\n\t\tthis.pinched = distance <= PINCH_THRESHOLD;\n\n\t\tconst pinchScale = ( distance - PINCH_MIN ) / ( PINCH_MAX - PINCH_MIN );\n\t\tconst focusScale = ( distance - PINCH_MIN ) / ( PINCH_THRESHOLD - PINCH_MIN );\n\t\tif ( pinchScale > 1 ) {\n\n\t\t\tthis._updatePointerVertices( POINTER_REAR_RADIUS );\n\t\t\tthis.pointerMesh.position.set( 0, 0, - 1 * POINTER_REAR_RADIUS );\n\t\t\tthis.pointerMesh.material.opacity = POINTER_OPACITY_MIN;\n\n\t\t} else if ( pinchScale > 0 ) {\n\n\t\t\tconst rearRadius =\n        ( POINTER_REAR_RADIUS - POINTER_REAR_RADIUS_MIN ) * pinchScale +\n        POINTER_REAR_RADIUS_MIN;\n\t\t\tthis._updatePointerVertices( rearRadius );\n\t\t\tif ( focusScale < 1 ) {\n\n\t\t\t\tthis.pointerMesh.position.set(\n\t\t\t\t\t0,\n\t\t\t\t\t0,\n\t\t\t\t\t- 1 * rearRadius - ( 1 - focusScale ) * POINTER_ADVANCE_MAX\n\t\t\t\t);\n\t\t\t\tthis.pointerMesh.material.opacity =\n          POINTER_OPACITY_MIN +\n          ( 1 - focusScale ) * ( POINTER_OPACITY_MAX - POINTER_OPACITY_MIN );\n\n\t\t\t} else {\n\n\t\t\t\tthis.pointerMesh.position.set( 0, 0, - 1 * rearRadius );\n\t\t\t\tthis.pointerMesh.material.opacity = POINTER_OPACITY_MIN;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis._updatePointerVertices( POINTER_REAR_RADIUS_MIN );\n\t\t\tthis.pointerMesh.position.set(\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\t- 1 * POINTER_REAR_RADIUS_MIN - POINTER_ADVANCE_MAX\n\t\t\t);\n\t\t\tthis.pointerMesh.material.opacity = POINTER_OPACITY_MAX;\n\n\t\t}\n\n\t\tthis.cursorObject.material.opacity = this.pointerMesh.material.opacity;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\t\tif ( this.pointerGeometry ) {\n\n\t\t\tthis._updatePointer();\n\t\t\tthis._updateRaycaster();\n\n\t\t}\n\n\t}\n\n\tisPinched() {\n\n\t\treturn this.pinched;\n\n\t}\n\n\tsetAttached( attached ) {\n\n\t\tthis.attached = attached;\n\n\t}\n\n\tisAttached() {\n\n\t\treturn this.attached;\n\n\t}\n\n\tintersectObject( object, recursive = true ) {\n\n\t\tif ( this.raycaster ) {\n\n\t\t\treturn this.raycaster.intersectObject( object, recursive );\n\n\t\t}\n\n\t}\n\n\tintersectObjects( objects, recursive = true ) {\n\n\t\tif ( this.raycaster ) {\n\n\t\t\treturn this.raycaster.intersectObjects( objects, recursive );\n\n\t\t}\n\n\t}\n\n\tcheckIntersections( objects, recursive = false ) {\n\n\t\tif ( this.raycaster && ! this.attached ) {\n\n\t\t\tconst intersections = this.raycaster.intersectObjects( objects, recursive );\n\t\t\tconst direction = new THREE.Vector3( 0, 0, - 1 );\n\t\t\tif ( intersections.length > 0 ) {\n\n\t\t\t\tconst intersection = intersections[ 0 ];\n\t\t\t\tconst distance = intersection.distance;\n\t\t\t\tthis.cursorObject.position.copy( direction.multiplyScalar( distance ) );\n\n\t\t\t} else {\n\n\t\t\t\tthis.cursorObject.position.copy( direction.multiplyScalar( CURSOR_MAX_DISTANCE ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tsetCursor( distance ) {\n\n\t\tconst direction = new THREE.Vector3( 0, 0, - 1 );\n\t\tif ( this.raycaster && ! this.attached ) {\n\n\t\t\tthis.cursorObject.position.copy( direction.multiplyScalar( distance ) );\n\n\t\t}\n\n\t}\n\n\tdispose() {\n\n\t\tthis._onDisconnected();\n\t\tthis.hand.removeEventListener( 'connected', this._onConnected );\n\t\tthis.hand.removeEventListener( 'disconnected', this._onDisconnected );\n\n\t}\n\n}\n\nexport { OculusHandPointerModel };\n","import * as THREE from 'three';\n\nfunction createText( message, height ) {\n\n\tconst canvas = document.createElement( 'canvas' );\n\tconst context = canvas.getContext( '2d' );\n\tlet metrics = null;\n\tconst textHeight = 100;\n\tcontext.font = 'normal ' + textHeight + 'px Arial';\n\tmetrics = context.measureText( message );\n\tconst textWidth = metrics.width;\n\tcanvas.width = textWidth;\n\tcanvas.height = textHeight;\n\tcontext.font = 'normal ' + textHeight + 'px Arial';\n\tcontext.textAlign = 'center';\n\tcontext.textBaseline = 'middle';\n\tcontext.fillStyle = '#ffffff';\n\tcontext.fillText( message, textWidth / 2, textHeight / 2 );\n\n\tconst texture = new THREE.Texture( canvas );\n\ttexture.needsUpdate = true;\n\n\tconst material = new THREE.MeshBasicMaterial( {\n\t\tcolor: 0xffffff,\n\t\tside: THREE.DoubleSide,\n\t\tmap: texture,\n\t\ttransparent: true,\n\t} );\n\tconst geometry = new THREE.PlaneGeometry(\n\t\t( height * textWidth ) / textHeight,\n\t\theight\n\t);\n\tconst plane = new THREE.Mesh( geometry, material );\n\treturn plane;\n\n}\n\nexport { createText };\n","import { render } from \"./ThreeWebVRExamplesHandInput.vue?vue&type=template&id=0f07f0af\"\nimport script from \"./ThreeWebVRExamplesHandInput.vue?vue&type=script&lang=js\"\nexport * from \"./ThreeWebVRExamplesHandInput.vue?vue&type=script&lang=js\"\n\nimport \"./ThreeWebVRExamplesHandInput.vue?vue&type=style&index=0&id=0f07f0af&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/**\n * Return the name of a component\n * @param {Component} Component\n * @private\n */\n\n/**\n * Get a key from a list of components\n * @param {Array(Component)} Components Array of components to generate the key\n * @private\n */\nfunction queryKey(Components) {\n  var ids = [];\n  for (var n = 0; n < Components.length; n++) {\n    var T = Components[n];\n\n    if (!componentRegistered(T)) {\n      throw new Error(`Tried to create a query with an unregistered component`);\n    }\n\n    if (typeof T === \"object\") {\n      var operator = T.operator === \"not\" ? \"!\" : T.operator;\n      ids.push(operator + T.Component._typeId);\n    } else {\n      ids.push(T._typeId);\n    }\n  }\n\n  return ids.sort().join(\"-\");\n}\n\n// Detector for browser's \"window\"\nconst hasWindow = typeof window !== \"undefined\";\n\n// performance.now() \"polyfill\"\nconst now =\n  hasWindow && typeof window.performance !== \"undefined\"\n    ? performance.now.bind(performance)\n    : Date.now.bind(Date);\n\nfunction componentRegistered(T) {\n  return (\n    (typeof T === \"object\" && T.Component._typeId !== undefined) ||\n    (T.isComponent && T._typeId !== undefined)\n  );\n}\n\nclass SystemManager {\n  constructor(world) {\n    this._systems = [];\n    this._executeSystems = []; // Systems that have `execute` method\n    this.world = world;\n    this.lastExecutedSystem = null;\n  }\n\n  registerSystem(SystemClass, attributes) {\n    if (!SystemClass.isSystem) {\n      throw new Error(\n        `System '${SystemClass.name}' does not extend 'System' class`\n      );\n    }\n\n    if (this.getSystem(SystemClass) !== undefined) {\n      console.warn(`System '${SystemClass.getName()}' already registered.`);\n      return this;\n    }\n\n    var system = new SystemClass(this.world, attributes);\n    if (system.init) system.init(attributes);\n    system.order = this._systems.length;\n    this._systems.push(system);\n    if (system.execute) {\n      this._executeSystems.push(system);\n      this.sortSystems();\n    }\n    return this;\n  }\n\n  unregisterSystem(SystemClass) {\n    let system = this.getSystem(SystemClass);\n    if (system === undefined) {\n      console.warn(\n        `Can unregister system '${SystemClass.getName()}'. It doesn't exist.`\n      );\n      return this;\n    }\n\n    this._systems.splice(this._systems.indexOf(system), 1);\n\n    if (system.execute) {\n      this._executeSystems.splice(this._executeSystems.indexOf(system), 1);\n    }\n\n    // @todo Add system.unregister() call to free resources\n    return this;\n  }\n\n  sortSystems() {\n    this._executeSystems.sort((a, b) => {\n      return a.priority - b.priority || a.order - b.order;\n    });\n  }\n\n  getSystem(SystemClass) {\n    return this._systems.find((s) => s instanceof SystemClass);\n  }\n\n  getSystems() {\n    return this._systems;\n  }\n\n  removeSystem(SystemClass) {\n    var index = this._systems.indexOf(SystemClass);\n    if (!~index) return;\n\n    this._systems.splice(index, 1);\n  }\n\n  executeSystem(system, delta, time) {\n    if (system.initialized) {\n      if (system.canExecute()) {\n        let startTime = now();\n        system.execute(delta, time);\n        system.executeTime = now() - startTime;\n        this.lastExecutedSystem = system;\n        system.clearEvents();\n      }\n    }\n  }\n\n  stop() {\n    this._executeSystems.forEach((system) => system.stop());\n  }\n\n  execute(delta, time, forcePlay) {\n    this._executeSystems.forEach(\n      (system) =>\n        (forcePlay || system.enabled) && this.executeSystem(system, delta, time)\n    );\n  }\n\n  stats() {\n    var stats = {\n      numSystems: this._systems.length,\n      systems: {},\n    };\n\n    for (var i = 0; i < this._systems.length; i++) {\n      var system = this._systems[i];\n      var systemStats = (stats.systems[system.getName()] = {\n        queries: {},\n        executeTime: system.executeTime,\n      });\n      for (var name in system.ctx) {\n        systemStats.queries[name] = system.ctx[name].stats();\n      }\n    }\n\n    return stats;\n  }\n}\n\nclass ObjectPool {\n  // @todo Add initial size\n  constructor(T, initialSize) {\n    this.freeList = [];\n    this.count = 0;\n    this.T = T;\n    this.isObjectPool = true;\n\n    if (typeof initialSize !== \"undefined\") {\n      this.expand(initialSize);\n    }\n  }\n\n  acquire() {\n    // Grow the list by 20%ish if we're out\n    if (this.freeList.length <= 0) {\n      this.expand(Math.round(this.count * 0.2) + 1);\n    }\n\n    var item = this.freeList.pop();\n\n    return item;\n  }\n\n  release(item) {\n    item.reset();\n    this.freeList.push(item);\n  }\n\n  expand(count) {\n    for (var n = 0; n < count; n++) {\n      var clone = new this.T();\n      clone._pool = this;\n      this.freeList.push(clone);\n    }\n    this.count += count;\n  }\n\n  totalSize() {\n    return this.count;\n  }\n\n  totalFree() {\n    return this.freeList.length;\n  }\n\n  totalUsed() {\n    return this.count - this.freeList.length;\n  }\n}\n\n/**\n * @private\n * @class EventDispatcher\n */\nclass EventDispatcher {\n  constructor() {\n    this._listeners = {};\n    this.stats = {\n      fired: 0,\n      handled: 0,\n    };\n  }\n\n  /**\n   * Add an event listener\n   * @param {String} eventName Name of the event to listen\n   * @param {Function} listener Callback to trigger when the event is fired\n   */\n  addEventListener(eventName, listener) {\n    let listeners = this._listeners;\n    if (listeners[eventName] === undefined) {\n      listeners[eventName] = [];\n    }\n\n    if (listeners[eventName].indexOf(listener) === -1) {\n      listeners[eventName].push(listener);\n    }\n  }\n\n  /**\n   * Check if an event listener is already added to the list of listeners\n   * @param {String} eventName Name of the event to check\n   * @param {Function} listener Callback for the specified event\n   */\n  hasEventListener(eventName, listener) {\n    return (\n      this._listeners[eventName] !== undefined &&\n      this._listeners[eventName].indexOf(listener) !== -1\n    );\n  }\n\n  /**\n   * Remove an event listener\n   * @param {String} eventName Name of the event to remove\n   * @param {Function} listener Callback for the specified event\n   */\n  removeEventListener(eventName, listener) {\n    var listenerArray = this._listeners[eventName];\n    if (listenerArray !== undefined) {\n      var index = listenerArray.indexOf(listener);\n      if (index !== -1) {\n        listenerArray.splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * Dispatch an event\n   * @param {String} eventName Name of the event to dispatch\n   * @param {Entity} entity (Optional) Entity to emit\n   * @param {Component} component\n   */\n  dispatchEvent(eventName, entity, component) {\n    this.stats.fired++;\n\n    var listenerArray = this._listeners[eventName];\n    if (listenerArray !== undefined) {\n      var array = listenerArray.slice(0);\n\n      for (var i = 0; i < array.length; i++) {\n        array[i].call(this, entity, component);\n      }\n    }\n  }\n\n  /**\n   * Reset stats counters\n   */\n  resetCounters() {\n    this.stats.fired = this.stats.handled = 0;\n  }\n}\n\nclass Query {\n  /**\n   * @param {Array(Component)} Components List of types of components to query\n   */\n  constructor(Components, manager) {\n    this.Components = [];\n    this.NotComponents = [];\n\n    Components.forEach((component) => {\n      if (typeof component === \"object\") {\n        this.NotComponents.push(component.Component);\n      } else {\n        this.Components.push(component);\n      }\n    });\n\n    if (this.Components.length === 0) {\n      throw new Error(\"Can't create a query without components\");\n    }\n\n    this.entities = [];\n\n    this.eventDispatcher = new EventDispatcher();\n\n    // This query is being used by a reactive system\n    this.reactive = false;\n\n    this.key = queryKey(Components);\n\n    // Fill the query with the existing entities\n    for (var i = 0; i < manager._entities.length; i++) {\n      var entity = manager._entities[i];\n      if (this.match(entity)) {\n        // @todo ??? this.addEntity(entity); => preventing the event to be generated\n        entity.queries.push(this);\n        this.entities.push(entity);\n      }\n    }\n  }\n\n  /**\n   * Add entity to this query\n   * @param {Entity} entity\n   */\n  addEntity(entity) {\n    entity.queries.push(this);\n    this.entities.push(entity);\n\n    this.eventDispatcher.dispatchEvent(Query.prototype.ENTITY_ADDED, entity);\n  }\n\n  /**\n   * Remove entity from this query\n   * @param {Entity} entity\n   */\n  removeEntity(entity) {\n    let index = this.entities.indexOf(entity);\n    if (~index) {\n      this.entities.splice(index, 1);\n\n      index = entity.queries.indexOf(this);\n      entity.queries.splice(index, 1);\n\n      this.eventDispatcher.dispatchEvent(\n        Query.prototype.ENTITY_REMOVED,\n        entity\n      );\n    }\n  }\n\n  match(entity) {\n    return (\n      entity.hasAllComponents(this.Components) &&\n      !entity.hasAnyComponents(this.NotComponents)\n    );\n  }\n\n  toJSON() {\n    return {\n      key: this.key,\n      reactive: this.reactive,\n      components: {\n        included: this.Components.map((C) => C.name),\n        not: this.NotComponents.map((C) => C.name),\n      },\n      numEntities: this.entities.length,\n    };\n  }\n\n  /**\n   * Return stats for this query\n   */\n  stats() {\n    return {\n      numComponents: this.Components.length,\n      numEntities: this.entities.length,\n    };\n  }\n}\n\nQuery.prototype.ENTITY_ADDED = \"Query#ENTITY_ADDED\";\nQuery.prototype.ENTITY_REMOVED = \"Query#ENTITY_REMOVED\";\nQuery.prototype.COMPONENT_CHANGED = \"Query#COMPONENT_CHANGED\";\n\n/**\n * @private\n * @class QueryManager\n */\nclass QueryManager {\n  constructor(world) {\n    this._world = world;\n\n    // Queries indexed by a unique identifier for the components it has\n    this._queries = {};\n  }\n\n  onEntityRemoved(entity) {\n    for (var queryName in this._queries) {\n      var query = this._queries[queryName];\n      if (entity.queries.indexOf(query) !== -1) {\n        query.removeEntity(entity);\n      }\n    }\n  }\n\n  /**\n   * Callback when a component is added to an entity\n   * @param {Entity} entity Entity that just got the new component\n   * @param {Component} Component Component added to the entity\n   */\n  onEntityComponentAdded(entity, Component) {\n    // @todo Use bitmask for checking components?\n\n    // Check each indexed query to see if we need to add this entity to the list\n    for (var queryName in this._queries) {\n      var query = this._queries[queryName];\n\n      if (\n        !!~query.NotComponents.indexOf(Component) &&\n        ~query.entities.indexOf(entity)\n      ) {\n        query.removeEntity(entity);\n        continue;\n      }\n\n      // Add the entity only if:\n      // Component is in the query\n      // and Entity has ALL the components of the query\n      // and Entity is not already in the query\n      if (\n        !~query.Components.indexOf(Component) ||\n        !query.match(entity) ||\n        ~query.entities.indexOf(entity)\n      )\n        continue;\n\n      query.addEntity(entity);\n    }\n  }\n\n  /**\n   * Callback when a component is removed from an entity\n   * @param {Entity} entity Entity to remove the component from\n   * @param {Component} Component Component to remove from the entity\n   */\n  onEntityComponentRemoved(entity, Component) {\n    for (var queryName in this._queries) {\n      var query = this._queries[queryName];\n\n      if (\n        !!~query.NotComponents.indexOf(Component) &&\n        !~query.entities.indexOf(entity) &&\n        query.match(entity)\n      ) {\n        query.addEntity(entity);\n        continue;\n      }\n\n      if (\n        !!~query.Components.indexOf(Component) &&\n        !!~query.entities.indexOf(entity) &&\n        !query.match(entity)\n      ) {\n        query.removeEntity(entity);\n        continue;\n      }\n    }\n  }\n\n  /**\n   * Get a query for the specified components\n   * @param {Component} Components Components that the query should have\n   */\n  getQuery(Components) {\n    var key = queryKey(Components);\n    var query = this._queries[key];\n    if (!query) {\n      this._queries[key] = query = new Query(Components, this._world);\n    }\n    return query;\n  }\n\n  /**\n   * Return some stats from this class\n   */\n  stats() {\n    var stats = {};\n    for (var queryName in this._queries) {\n      stats[queryName] = this._queries[queryName].stats();\n    }\n    return stats;\n  }\n}\n\nclass Component {\n  constructor(props) {\n    if (props !== false) {\n      const schema = this.constructor.schema;\n\n      for (const key in schema) {\n        if (props && props.hasOwnProperty(key)) {\n          this[key] = props[key];\n        } else {\n          const schemaProp = schema[key];\n          if (schemaProp.hasOwnProperty(\"default\")) {\n            this[key] = schemaProp.type.clone(schemaProp.default);\n          } else {\n            const type = schemaProp.type;\n            this[key] = type.clone(type.default);\n          }\n        }\n      }\n\n      if ( props !== undefined) {\n        this.checkUndefinedAttributes(props);\n      }\n    }\n\n    this._pool = null;\n  }\n\n  copy(source) {\n    const schema = this.constructor.schema;\n\n    for (const key in schema) {\n      const prop = schema[key];\n\n      if (source.hasOwnProperty(key)) {\n        this[key] = prop.type.copy(source[key], this[key]);\n      }\n    }\n\n    // @DEBUG\n    {\n      this.checkUndefinedAttributes(source);\n    }\n\n    return this;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  reset() {\n    const schema = this.constructor.schema;\n\n    for (const key in schema) {\n      const schemaProp = schema[key];\n\n      if (schemaProp.hasOwnProperty(\"default\")) {\n        this[key] = schemaProp.type.copy(schemaProp.default, this[key]);\n      } else {\n        const type = schemaProp.type;\n        this[key] = type.copy(type.default, this[key]);\n      }\n    }\n  }\n\n  dispose() {\n    if (this._pool) {\n      this._pool.release(this);\n    }\n  }\n\n  getName() {\n    return this.constructor.getName();\n  }\n\n  checkUndefinedAttributes(src) {\n    const schema = this.constructor.schema;\n\n    // Check that the attributes defined in source are also defined in the schema\n    Object.keys(src).forEach((srcKey) => {\n      if (!schema.hasOwnProperty(srcKey)) {\n        console.warn(\n          `Trying to set attribute '${srcKey}' not defined in the '${this.constructor.name}' schema. Please fix the schema, the attribute value won't be set`\n        );\n      }\n    });\n  }\n}\n\nComponent.schema = {};\nComponent.isComponent = true;\nComponent.getName = function () {\n  return this.displayName || this.name;\n};\n\nclass SystemStateComponent extends Component {}\n\nSystemStateComponent.isSystemStateComponent = true;\n\nclass EntityPool extends ObjectPool {\n  constructor(entityManager, entityClass, initialSize) {\n    super(entityClass, undefined);\n    this.entityManager = entityManager;\n\n    if (typeof initialSize !== \"undefined\") {\n      this.expand(initialSize);\n    }\n  }\n\n  expand(count) {\n    for (var n = 0; n < count; n++) {\n      var clone = new this.T(this.entityManager);\n      clone._pool = this;\n      this.freeList.push(clone);\n    }\n    this.count += count;\n  }\n}\n\n/**\n * @private\n * @class EntityManager\n */\nclass EntityManager {\n  constructor(world) {\n    this.world = world;\n    this.componentsManager = world.componentsManager;\n\n    // All the entities in this instance\n    this._entities = [];\n    this._nextEntityId = 0;\n\n    this._entitiesByNames = {};\n\n    this._queryManager = new QueryManager(this);\n    this.eventDispatcher = new EventDispatcher();\n    this._entityPool = new EntityPool(\n      this,\n      this.world.options.entityClass,\n      this.world.options.entityPoolSize\n    );\n\n    // Deferred deletion\n    this.entitiesWithComponentsToRemove = [];\n    this.entitiesToRemove = [];\n    this.deferredRemovalEnabled = true;\n  }\n\n  getEntityByName(name) {\n    return this._entitiesByNames[name];\n  }\n\n  /**\n   * Create a new entity\n   */\n  createEntity(name) {\n    var entity = this._entityPool.acquire();\n    entity.alive = true;\n    entity.name = name || \"\";\n    if (name) {\n      if (this._entitiesByNames[name]) {\n        console.warn(`Entity name '${name}' already exist`);\n      } else {\n        this._entitiesByNames[name] = entity;\n      }\n    }\n\n    this._entities.push(entity);\n    this.eventDispatcher.dispatchEvent(ENTITY_CREATED, entity);\n    return entity;\n  }\n\n  // COMPONENTS\n\n  /**\n   * Add a component to an entity\n   * @param {Entity} entity Entity where the component will be added\n   * @param {Component} Component Component to be added to the entity\n   * @param {Object} values Optional values to replace the default attributes\n   */\n  entityAddComponent(entity, Component, values) {\n    // @todo Probably define Component._typeId with a default value and avoid using typeof\n    if (\n      typeof Component._typeId === \"undefined\" &&\n      !this.world.componentsManager._ComponentsMap[Component._typeId]\n    ) {\n      throw new Error(\n        `Attempted to add unregistered component \"${Component.getName()}\"`\n      );\n    }\n\n    if (~entity._ComponentTypes.indexOf(Component)) {\n      {\n        console.warn(\n          \"Component type already exists on entity.\",\n          entity,\n          Component.getName()\n        );\n      }\n      return;\n    }\n\n    entity._ComponentTypes.push(Component);\n\n    if (Component.__proto__ === SystemStateComponent) {\n      entity.numStateComponents++;\n    }\n\n    var componentPool = this.world.componentsManager.getComponentsPool(\n      Component\n    );\n\n    var component = componentPool\n      ? componentPool.acquire()\n      : new Component(values);\n\n    if (componentPool && values) {\n      component.copy(values);\n    }\n\n    entity._components[Component._typeId] = component;\n\n    this._queryManager.onEntityComponentAdded(entity, Component);\n    this.world.componentsManager.componentAddedToEntity(Component);\n\n    this.eventDispatcher.dispatchEvent(COMPONENT_ADDED, entity, Component);\n  }\n\n  /**\n   * Remove a component from an entity\n   * @param {Entity} entity Entity which will get removed the component\n   * @param {*} Component Component to remove from the entity\n   * @param {Bool} immediately If you want to remove the component immediately instead of deferred (Default is false)\n   */\n  entityRemoveComponent(entity, Component, immediately) {\n    var index = entity._ComponentTypes.indexOf(Component);\n    if (!~index) return;\n\n    this.eventDispatcher.dispatchEvent(COMPONENT_REMOVE, entity, Component);\n\n    if (immediately) {\n      this._entityRemoveComponentSync(entity, Component, index);\n    } else {\n      if (entity._ComponentTypesToRemove.length === 0)\n        this.entitiesWithComponentsToRemove.push(entity);\n\n      entity._ComponentTypes.splice(index, 1);\n      entity._ComponentTypesToRemove.push(Component);\n\n      entity._componentsToRemove[Component._typeId] =\n        entity._components[Component._typeId];\n      delete entity._components[Component._typeId];\n    }\n\n    // Check each indexed query to see if we need to remove it\n    this._queryManager.onEntityComponentRemoved(entity, Component);\n\n    if (Component.__proto__ === SystemStateComponent) {\n      entity.numStateComponents--;\n\n      // Check if the entity was a ghost waiting for the last system state component to be removed\n      if (entity.numStateComponents === 0 && !entity.alive) {\n        entity.remove();\n      }\n    }\n  }\n\n  _entityRemoveComponentSync(entity, Component, index) {\n    // Remove T listing on entity and property ref, then free the component.\n    entity._ComponentTypes.splice(index, 1);\n    var component = entity._components[Component._typeId];\n    delete entity._components[Component._typeId];\n    component.dispose();\n    this.world.componentsManager.componentRemovedFromEntity(Component);\n  }\n\n  /**\n   * Remove all the components from an entity\n   * @param {Entity} entity Entity from which the components will be removed\n   */\n  entityRemoveAllComponents(entity, immediately) {\n    let Components = entity._ComponentTypes;\n\n    for (let j = Components.length - 1; j >= 0; j--) {\n      if (Components[j].__proto__ !== SystemStateComponent)\n        this.entityRemoveComponent(entity, Components[j], immediately);\n    }\n  }\n\n  /**\n   * Remove the entity from this manager. It will clear also its components\n   * @param {Entity} entity Entity to remove from the manager\n   * @param {Bool} immediately If you want to remove the component immediately instead of deferred (Default is false)\n   */\n  removeEntity(entity, immediately) {\n    var index = this._entities.indexOf(entity);\n\n    if (!~index) throw new Error(\"Tried to remove entity not in list\");\n\n    entity.alive = false;\n    this.entityRemoveAllComponents(entity, immediately);\n\n    if (entity.numStateComponents === 0) {\n      // Remove from entity list\n      this.eventDispatcher.dispatchEvent(ENTITY_REMOVED, entity);\n      this._queryManager.onEntityRemoved(entity);\n      if (immediately === true) {\n        this._releaseEntity(entity, index);\n      } else {\n        this.entitiesToRemove.push(entity);\n      }\n    }\n  }\n\n  _releaseEntity(entity, index) {\n    this._entities.splice(index, 1);\n\n    if (this._entitiesByNames[entity.name]) {\n      delete this._entitiesByNames[entity.name];\n    }\n    entity._pool.release(entity);\n  }\n\n  /**\n   * Remove all entities from this manager\n   */\n  removeAllEntities() {\n    for (var i = this._entities.length - 1; i >= 0; i--) {\n      this.removeEntity(this._entities[i]);\n    }\n  }\n\n  processDeferredRemoval() {\n    if (!this.deferredRemovalEnabled) {\n      return;\n    }\n\n    for (let i = 0; i < this.entitiesToRemove.length; i++) {\n      let entity = this.entitiesToRemove[i];\n      let index = this._entities.indexOf(entity);\n      this._releaseEntity(entity, index);\n    }\n    this.entitiesToRemove.length = 0;\n\n    for (let i = 0; i < this.entitiesWithComponentsToRemove.length; i++) {\n      let entity = this.entitiesWithComponentsToRemove[i];\n      while (entity._ComponentTypesToRemove.length > 0) {\n        let Component = entity._ComponentTypesToRemove.pop();\n\n        var component = entity._componentsToRemove[Component._typeId];\n        delete entity._componentsToRemove[Component._typeId];\n        component.dispose();\n        this.world.componentsManager.componentRemovedFromEntity(Component);\n\n        //this._entityRemoveComponentSync(entity, Component, index);\n      }\n    }\n\n    this.entitiesWithComponentsToRemove.length = 0;\n  }\n\n  /**\n   * Get a query based on a list of components\n   * @param {Array(Component)} Components List of components that will form the query\n   */\n  queryComponents(Components) {\n    return this._queryManager.getQuery(Components);\n  }\n\n  // EXTRAS\n\n  /**\n   * Return number of entities\n   */\n  count() {\n    return this._entities.length;\n  }\n\n  /**\n   * Return some stats\n   */\n  stats() {\n    var stats = {\n      numEntities: this._entities.length,\n      numQueries: Object.keys(this._queryManager._queries).length,\n      queries: this._queryManager.stats(),\n      numComponentPool: Object.keys(this.componentsManager._componentPool)\n        .length,\n      componentPool: {},\n      eventDispatcher: this.eventDispatcher.stats,\n    };\n\n    for (var ecsyComponentId in this.componentsManager._componentPool) {\n      var pool = this.componentsManager._componentPool[ecsyComponentId];\n      stats.componentPool[pool.T.getName()] = {\n        used: pool.totalUsed(),\n        size: pool.count,\n      };\n    }\n\n    return stats;\n  }\n}\n\nconst ENTITY_CREATED = \"EntityManager#ENTITY_CREATE\";\nconst ENTITY_REMOVED = \"EntityManager#ENTITY_REMOVED\";\nconst COMPONENT_ADDED = \"EntityManager#COMPONENT_ADDED\";\nconst COMPONENT_REMOVE = \"EntityManager#COMPONENT_REMOVE\";\n\nclass ComponentManager {\n  constructor() {\n    this.Components = [];\n    this._ComponentsMap = {};\n\n    this._componentPool = {};\n    this.numComponents = {};\n    this.nextComponentId = 0;\n  }\n\n  hasComponent(Component) {\n    return this.Components.indexOf(Component) !== -1;\n  }\n\n  registerComponent(Component, objectPool) {\n    if (this.Components.indexOf(Component) !== -1) {\n      console.warn(\n        `Component type: '${Component.getName()}' already registered.`\n      );\n      return;\n    }\n\n    const schema = Component.schema;\n\n    if (!schema) {\n      throw new Error(\n        `Component \"${Component.getName()}\" has no schema property.`\n      );\n    }\n\n    for (const propName in schema) {\n      const prop = schema[propName];\n\n      if (!prop.type) {\n        throw new Error(\n          `Invalid schema for component \"${Component.getName()}\". Missing type for \"${propName}\" property.`\n        );\n      }\n    }\n\n    Component._typeId = this.nextComponentId++;\n    this.Components.push(Component);\n    this._ComponentsMap[Component._typeId] = Component;\n    this.numComponents[Component._typeId] = 0;\n\n    if (objectPool === undefined) {\n      objectPool = new ObjectPool(Component);\n    } else if (objectPool === false) {\n      objectPool = undefined;\n    }\n\n    this._componentPool[Component._typeId] = objectPool;\n  }\n\n  componentAddedToEntity(Component) {\n    this.numComponents[Component._typeId]++;\n  }\n\n  componentRemovedFromEntity(Component) {\n    this.numComponents[Component._typeId]--;\n  }\n\n  getComponentsPool(Component) {\n    return this._componentPool[Component._typeId];\n  }\n}\n\nconst Version = \"0.3.1\";\n\nconst proxyMap = new WeakMap();\n\nconst proxyHandler = {\n  set(target, prop) {\n    throw new Error(\n      `Tried to write to \"${target.constructor.getName()}#${String(\n        prop\n      )}\" on immutable component. Use .getMutableComponent() to modify a component.`\n    );\n  },\n};\n\nfunction wrapImmutableComponent(T, component) {\n  if (component === undefined) {\n    return undefined;\n  }\n\n  let wrappedComponent = proxyMap.get(component);\n\n  if (!wrappedComponent) {\n    wrappedComponent = new Proxy(component, proxyHandler);\n    proxyMap.set(component, wrappedComponent);\n  }\n\n  return wrappedComponent;\n}\n\nclass Entity {\n  constructor(entityManager) {\n    this._entityManager = entityManager || null;\n\n    // Unique ID for this entity\n    this.id = entityManager._nextEntityId++;\n\n    // List of components types the entity has\n    this._ComponentTypes = [];\n\n    // Instance of the components\n    this._components = {};\n\n    this._componentsToRemove = {};\n\n    // Queries where the entity is added\n    this.queries = [];\n\n    // Used for deferred removal\n    this._ComponentTypesToRemove = [];\n\n    this.alive = false;\n\n    //if there are state components on a entity, it can't be removed completely\n    this.numStateComponents = 0;\n  }\n\n  // COMPONENTS\n\n  getComponent(Component, includeRemoved) {\n    var component = this._components[Component._typeId];\n\n    if (!component && includeRemoved === true) {\n      component = this._componentsToRemove[Component._typeId];\n    }\n\n    return  wrapImmutableComponent(Component, component)\n      ;\n  }\n\n  getRemovedComponent(Component) {\n    const component = this._componentsToRemove[Component._typeId];\n\n    return  wrapImmutableComponent(Component, component)\n      ;\n  }\n\n  getComponents() {\n    return this._components;\n  }\n\n  getComponentsToRemove() {\n    return this._componentsToRemove;\n  }\n\n  getComponentTypes() {\n    return this._ComponentTypes;\n  }\n\n  getMutableComponent(Component) {\n    var component = this._components[Component._typeId];\n\n    if (!component) {\n      return;\n    }\n\n    for (var i = 0; i < this.queries.length; i++) {\n      var query = this.queries[i];\n      // @todo accelerate this check. Maybe having query._Components as an object\n      // @todo add Not components\n      if (query.reactive && query.Components.indexOf(Component) !== -1) {\n        query.eventDispatcher.dispatchEvent(\n          Query.prototype.COMPONENT_CHANGED,\n          this,\n          component\n        );\n      }\n    }\n    return component;\n  }\n\n  addComponent(Component, values) {\n    this._entityManager.entityAddComponent(this, Component, values);\n    return this;\n  }\n\n  removeComponent(Component, forceImmediate) {\n    this._entityManager.entityRemoveComponent(this, Component, forceImmediate);\n    return this;\n  }\n\n  hasComponent(Component, includeRemoved) {\n    return (\n      !!~this._ComponentTypes.indexOf(Component) ||\n      (includeRemoved === true && this.hasRemovedComponent(Component))\n    );\n  }\n\n  hasRemovedComponent(Component) {\n    return !!~this._ComponentTypesToRemove.indexOf(Component);\n  }\n\n  hasAllComponents(Components) {\n    for (var i = 0; i < Components.length; i++) {\n      if (!this.hasComponent(Components[i])) return false;\n    }\n    return true;\n  }\n\n  hasAnyComponents(Components) {\n    for (var i = 0; i < Components.length; i++) {\n      if (this.hasComponent(Components[i])) return true;\n    }\n    return false;\n  }\n\n  removeAllComponents(forceImmediate) {\n    return this._entityManager.entityRemoveAllComponents(this, forceImmediate);\n  }\n\n  copy(src) {\n    // TODO: This can definitely be optimized\n    for (var ecsyComponentId in src._components) {\n      var srcComponent = src._components[ecsyComponentId];\n      this.addComponent(srcComponent.constructor);\n      var component = this.getComponent(srcComponent.constructor);\n      component.copy(srcComponent);\n    }\n\n    return this;\n  }\n\n  clone() {\n    return new Entity(this._entityManager).copy(this);\n  }\n\n  reset() {\n    this.id = this._entityManager._nextEntityId++;\n    this._ComponentTypes.length = 0;\n    this.queries.length = 0;\n\n    for (var ecsyComponentId in this._components) {\n      delete this._components[ecsyComponentId];\n    }\n  }\n\n  remove(forceImmediate) {\n    return this._entityManager.removeEntity(this, forceImmediate);\n  }\n}\n\nconst DEFAULT_OPTIONS = {\n  entityPoolSize: 0,\n  entityClass: Entity,\n};\n\nclass World {\n  constructor(options = {}) {\n    this.options = Object.assign({}, DEFAULT_OPTIONS, options);\n\n    this.componentsManager = new ComponentManager(this);\n    this.entityManager = new EntityManager(this);\n    this.systemManager = new SystemManager(this);\n\n    this.enabled = true;\n\n    this.eventQueues = {};\n\n    if (hasWindow && typeof CustomEvent !== \"undefined\") {\n      var event = new CustomEvent(\"ecsy-world-created\", {\n        detail: { world: this, version: Version },\n      });\n      window.dispatchEvent(event);\n    }\n\n    this.lastTime = now() / 1000;\n  }\n\n  registerComponent(Component, objectPool) {\n    this.componentsManager.registerComponent(Component, objectPool);\n    return this;\n  }\n\n  registerSystem(System, attributes) {\n    this.systemManager.registerSystem(System, attributes);\n    return this;\n  }\n\n  hasRegisteredComponent(Component) {\n    return this.componentsManager.hasComponent(Component);\n  }\n\n  unregisterSystem(System) {\n    this.systemManager.unregisterSystem(System);\n    return this;\n  }\n\n  getSystem(SystemClass) {\n    return this.systemManager.getSystem(SystemClass);\n  }\n\n  getSystems() {\n    return this.systemManager.getSystems();\n  }\n\n  execute(delta, time) {\n    if (!delta) {\n      time = now() / 1000;\n      delta = time - this.lastTime;\n      this.lastTime = time;\n    }\n\n    if (this.enabled) {\n      this.systemManager.execute(delta, time);\n      this.entityManager.processDeferredRemoval();\n    }\n  }\n\n  stop() {\n    this.enabled = false;\n  }\n\n  play() {\n    this.enabled = true;\n  }\n\n  createEntity(name) {\n    return this.entityManager.createEntity(name);\n  }\n\n  stats() {\n    var stats = {\n      entities: this.entityManager.stats(),\n      system: this.systemManager.stats(),\n    };\n\n    return stats;\n  }\n}\n\nclass System {\n  canExecute() {\n    if (this._mandatoryQueries.length === 0) return true;\n\n    for (let i = 0; i < this._mandatoryQueries.length; i++) {\n      var query = this._mandatoryQueries[i];\n      if (query.entities.length === 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getName() {\n    return this.constructor.getName();\n  }\n\n  constructor(world, attributes) {\n    this.world = world;\n    this.enabled = true;\n\n    // @todo Better naming :)\n    this._queries = {};\n    this.queries = {};\n\n    this.priority = 0;\n\n    // Used for stats\n    this.executeTime = 0;\n\n    if (attributes && attributes.priority) {\n      this.priority = attributes.priority;\n    }\n\n    this._mandatoryQueries = [];\n\n    this.initialized = true;\n\n    if (this.constructor.queries) {\n      for (var queryName in this.constructor.queries) {\n        var queryConfig = this.constructor.queries[queryName];\n        var Components = queryConfig.components;\n        if (!Components || Components.length === 0) {\n          throw new Error(\"'components' attribute can't be empty in a query\");\n        }\n\n        // Detect if the components have already been registered\n        let unregisteredComponents = Components.filter(\n          (Component) => !componentRegistered(Component)\n        );\n\n        if (unregisteredComponents.length > 0) {\n          throw new Error(\n            `Tried to create a query '${\n              this.constructor.name\n            }.${queryName}' with unregistered components: [${unregisteredComponents\n              .map((c) => c.getName())\n              .join(\", \")}]`\n          );\n        }\n\n        var query = this.world.entityManager.queryComponents(Components);\n\n        this._queries[queryName] = query;\n        if (queryConfig.mandatory === true) {\n          this._mandatoryQueries.push(query);\n        }\n        this.queries[queryName] = {\n          results: query.entities,\n        };\n\n        // Reactive configuration added/removed/changed\n        var validEvents = [\"added\", \"removed\", \"changed\"];\n\n        const eventMapping = {\n          added: Query.prototype.ENTITY_ADDED,\n          removed: Query.prototype.ENTITY_REMOVED,\n          changed: Query.prototype.COMPONENT_CHANGED, // Query.prototype.ENTITY_CHANGED\n        };\n\n        if (queryConfig.listen) {\n          validEvents.forEach((eventName) => {\n            if (!this.execute) {\n              console.warn(\n                `System '${this.getName()}' has defined listen events (${validEvents.join(\n                  \", \"\n                )}) for query '${queryName}' but it does not implement the 'execute' method.`\n              );\n            }\n\n            // Is the event enabled on this system's query?\n            if (queryConfig.listen[eventName]) {\n              let event = queryConfig.listen[eventName];\n\n              if (eventName === \"changed\") {\n                query.reactive = true;\n                if (event === true) {\n                  // Any change on the entity from the components in the query\n                  let eventList = (this.queries[queryName][eventName] = []);\n                  query.eventDispatcher.addEventListener(\n                    Query.prototype.COMPONENT_CHANGED,\n                    (entity) => {\n                      // Avoid duplicates\n                      if (eventList.indexOf(entity) === -1) {\n                        eventList.push(entity);\n                      }\n                    }\n                  );\n                } else if (Array.isArray(event)) {\n                  let eventList = (this.queries[queryName][eventName] = []);\n                  query.eventDispatcher.addEventListener(\n                    Query.prototype.COMPONENT_CHANGED,\n                    (entity, changedComponent) => {\n                      // Avoid duplicates\n                      if (\n                        event.indexOf(changedComponent.constructor) !== -1 &&\n                        eventList.indexOf(entity) === -1\n                      ) {\n                        eventList.push(entity);\n                      }\n                    }\n                  );\n                }\n              } else {\n                let eventList = (this.queries[queryName][eventName] = []);\n\n                query.eventDispatcher.addEventListener(\n                  eventMapping[eventName],\n                  (entity) => {\n                    // @fixme overhead?\n                    if (eventList.indexOf(entity) === -1)\n                      eventList.push(entity);\n                  }\n                );\n              }\n            }\n          });\n        }\n      }\n    }\n  }\n\n  stop() {\n    this.executeTime = 0;\n    this.enabled = false;\n  }\n\n  play() {\n    this.enabled = true;\n  }\n\n  // @question rename to clear queues?\n  clearEvents() {\n    for (let queryName in this.queries) {\n      var query = this.queries[queryName];\n      if (query.added) {\n        query.added.length = 0;\n      }\n      if (query.removed) {\n        query.removed.length = 0;\n      }\n      if (query.changed) {\n        if (Array.isArray(query.changed)) {\n          query.changed.length = 0;\n        } else {\n          for (let name in query.changed) {\n            query.changed[name].length = 0;\n          }\n        }\n      }\n    }\n  }\n\n  toJSON() {\n    var json = {\n      name: this.getName(),\n      enabled: this.enabled,\n      executeTime: this.executeTime,\n      priority: this.priority,\n      queries: {},\n    };\n\n    if (this.constructor.queries) {\n      var queries = this.constructor.queries;\n      for (let queryName in queries) {\n        let query = this.queries[queryName];\n        let queryDefinition = queries[queryName];\n        let jsonQuery = (json.queries[queryName] = {\n          key: this._queries[queryName].key,\n        });\n\n        jsonQuery.mandatory = queryDefinition.mandatory === true;\n        jsonQuery.reactive =\n          queryDefinition.listen &&\n          (queryDefinition.listen.added === true ||\n            queryDefinition.listen.removed === true ||\n            queryDefinition.listen.changed === true ||\n            Array.isArray(queryDefinition.listen.changed));\n\n        if (jsonQuery.reactive) {\n          jsonQuery.listen = {};\n\n          const methods = [\"added\", \"removed\", \"changed\"];\n          methods.forEach((method) => {\n            if (query[method]) {\n              jsonQuery.listen[method] = {\n                entities: query[method].length,\n              };\n            }\n          });\n        }\n      }\n    }\n\n    return json;\n  }\n}\n\nSystem.isSystem = true;\nSystem.getName = function () {\n  return this.displayName || this.name;\n};\n\nfunction Not(Component) {\n  return {\n    operator: \"not\",\n    Component: Component,\n  };\n}\n\nclass TagComponent extends Component {\n  constructor() {\n    super(false);\n  }\n}\n\nTagComponent.isTagComponent = true;\n\nconst copyValue = (src) => src;\n\nconst cloneValue = (src) => src;\n\nconst copyArray = (src, dest) => {\n  if (!src) {\n    return src;\n  }\n\n  if (!dest) {\n    return src.slice();\n  }\n\n  dest.length = 0;\n\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i]);\n  }\n\n  return dest;\n};\n\nconst cloneArray = (src) => src && src.slice();\n\nconst copyJSON = (src) => JSON.parse(JSON.stringify(src));\n\nconst cloneJSON = (src) => JSON.parse(JSON.stringify(src));\n\nconst copyCopyable = (src, dest) => {\n  if (!src) {\n    return src;\n  }\n\n  if (!dest) {\n    return src.clone();\n  }\n\n  return dest.copy(src);\n};\n\nconst cloneClonable = (src) => src && src.clone();\n\nfunction createType(typeDefinition) {\n  var mandatoryProperties = [\"name\", \"default\", \"copy\", \"clone\"];\n\n  var undefinedProperties = mandatoryProperties.filter((p) => {\n    return !typeDefinition.hasOwnProperty(p);\n  });\n\n  if (undefinedProperties.length > 0) {\n    throw new Error(\n      `createType expects a type definition with the following properties: ${undefinedProperties.join(\n        \", \"\n      )}`\n    );\n  }\n\n  typeDefinition.isType = true;\n\n  return typeDefinition;\n}\n\n/**\n * Standard types\n */\nconst Types = {\n  Number: createType({\n    name: \"Number\",\n    default: 0,\n    copy: copyValue,\n    clone: cloneValue,\n  }),\n\n  Boolean: createType({\n    name: \"Boolean\",\n    default: false,\n    copy: copyValue,\n    clone: cloneValue,\n  }),\n\n  String: createType({\n    name: \"String\",\n    default: \"\",\n    copy: copyValue,\n    clone: cloneValue,\n  }),\n\n  Array: createType({\n    name: \"Array\",\n    default: [],\n    copy: copyArray,\n    clone: cloneArray,\n  }),\n\n  Ref: createType({\n    name: \"Ref\",\n    default: undefined,\n    copy: copyValue,\n    clone: cloneValue,\n  }),\n\n  JSON: createType({\n    name: \"JSON\",\n    default: null,\n    copy: copyJSON,\n    clone: cloneJSON,\n  }),\n};\n\nfunction generateId(length) {\n  var result = \"\";\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nfunction injectScript(src, onLoad) {\n  var script = document.createElement(\"script\");\n  // @todo Use link to the ecsy-devtools repo?\n  script.src = src;\n  script.onload = onLoad;\n  (document.head || document.documentElement).appendChild(script);\n}\n\n/* global Peer */\n\nfunction hookConsoleAndErrors(connection) {\n  var wrapFunctions = [\"error\", \"warning\", \"log\"];\n  wrapFunctions.forEach((key) => {\n    if (typeof console[key] === \"function\") {\n      var fn = console[key].bind(console);\n      console[key] = (...args) => {\n        connection.send({\n          method: \"console\",\n          type: key,\n          args: JSON.stringify(args),\n        });\n        return fn.apply(null, args);\n      };\n    }\n  });\n\n  window.addEventListener(\"error\", (error) => {\n    connection.send({\n      method: \"error\",\n      error: JSON.stringify({\n        message: error.error.message,\n        stack: error.error.stack,\n      }),\n    });\n  });\n}\n\nfunction includeRemoteIdHTML(remoteId) {\n  let infoDiv = document.createElement(\"div\");\n  infoDiv.style.cssText = `\n    align-items: center;\n    background-color: #333;\n    color: #aaa;\n    display:flex;\n    font-family: Arial;\n    font-size: 1.1em;\n    height: 40px;\n    justify-content: center;\n    left: 0;\n    opacity: 0.9;\n    position: absolute;\n    right: 0;\n    text-align: center;\n    top: 0;\n  `;\n\n  infoDiv.innerHTML = `Open ECSY devtools to connect to this page using the code:&nbsp;<b style=\"color: #fff\">${remoteId}</b>&nbsp;<button onClick=\"generateNewCode()\">Generate new code</button>`;\n  document.body.appendChild(infoDiv);\n\n  return infoDiv;\n}\n\nfunction enableRemoteDevtools(remoteId) {\n  if (!hasWindow) {\n    console.warn(\"Remote devtools not available outside the browser\");\n    return;\n  }\n\n  window.generateNewCode = () => {\n    window.localStorage.clear();\n    remoteId = generateId(6);\n    window.localStorage.setItem(\"ecsyRemoteId\", remoteId);\n    window.location.reload(false);\n  };\n\n  remoteId = remoteId || window.localStorage.getItem(\"ecsyRemoteId\");\n  if (!remoteId) {\n    remoteId = generateId(6);\n    window.localStorage.setItem(\"ecsyRemoteId\", remoteId);\n  }\n\n  let infoDiv = includeRemoteIdHTML(remoteId);\n\n  window.__ECSY_REMOTE_DEVTOOLS_INJECTED = true;\n  window.__ECSY_REMOTE_DEVTOOLS = {};\n\n  let Version = \"\";\n\n  // This is used to collect the worlds created before the communication is being established\n  let worldsBeforeLoading = [];\n  let onWorldCreated = (e) => {\n    var world = e.detail.world;\n    Version = e.detail.version;\n    worldsBeforeLoading.push(world);\n  };\n  window.addEventListener(\"ecsy-world-created\", onWorldCreated);\n\n  let onLoaded = () => {\n    // var peer = new Peer(remoteId);\n    var peer = new Peer(remoteId, {\n      host: \"peerjs.ecsy.io\",\n      secure: true,\n      port: 443,\n      config: {\n        iceServers: [\n          { url: \"stun:stun.l.google.com:19302\" },\n          { url: \"stun:stun1.l.google.com:19302\" },\n          { url: \"stun:stun2.l.google.com:19302\" },\n          { url: \"stun:stun3.l.google.com:19302\" },\n          { url: \"stun:stun4.l.google.com:19302\" },\n        ],\n      },\n      debug: 3,\n    });\n\n    peer.on(\"open\", (/* id */) => {\n      peer.on(\"connection\", (connection) => {\n        window.__ECSY_REMOTE_DEVTOOLS.connection = connection;\n        connection.on(\"open\", function () {\n          // infoDiv.style.visibility = \"hidden\";\n          infoDiv.innerHTML = \"Connected\";\n\n          // Receive messages\n          connection.on(\"data\", function (data) {\n            if (data.type === \"init\") {\n              var script = document.createElement(\"script\");\n              script.setAttribute(\"type\", \"text/javascript\");\n              script.onload = () => {\n                script.parentNode.removeChild(script);\n\n                // Once the script is injected we don't need to listen\n                window.removeEventListener(\n                  \"ecsy-world-created\",\n                  onWorldCreated\n                );\n                worldsBeforeLoading.forEach((world) => {\n                  var event = new CustomEvent(\"ecsy-world-created\", {\n                    detail: { world: world, version: Version },\n                  });\n                  window.dispatchEvent(event);\n                });\n              };\n              script.innerHTML = data.script;\n              (document.head || document.documentElement).appendChild(script);\n              script.onload();\n\n              hookConsoleAndErrors(connection);\n            } else if (data.type === \"executeScript\") {\n              let value = eval(data.script);\n              if (data.returnEval) {\n                connection.send({\n                  method: \"evalReturn\",\n                  value: value,\n                });\n              }\n            }\n          });\n        });\n      });\n    });\n  };\n\n  // Inject PeerJS script\n  injectScript(\n    \"https://cdn.jsdelivr.net/npm/peerjs@0.3.20/dist/peer.min.js\",\n    onLoaded\n  );\n}\n\nif (hasWindow) {\n  const urlParams = new URLSearchParams(window.location.search);\n\n  // @todo Provide a way to disable it if needed\n  if (urlParams.has(\"enable-remote-devtools\")) {\n    enableRemoteDevtools();\n  }\n}\n\nexport { Component, Not, ObjectPool, System, SystemStateComponent, TagComponent, Types, Version, World, Entity as _Entity, cloneArray, cloneClonable, cloneJSON, cloneValue, copyArray, copyCopyable, copyJSON, copyValue, createType, enableRemoteDevtools };\n","class VRButton {\n\n\tstatic createButton( renderer ) {\n\n\t\tconst button = document.createElement( 'button' );\n\n\t\tfunction showEnterVR( /*device*/ ) {\n\n\t\t\tlet currentSession = null;\n\n\t\t\tasync function onSessionStarted( session ) {\n\n\t\t\t\tsession.addEventListener( 'end', onSessionEnded );\n\n\t\t\t\tawait renderer.xr.setSession( session );\n\t\t\t\tbutton.textContent = 'EXIT VR';\n\n\t\t\t\tcurrentSession = session;\n\n\t\t\t}\n\n\t\t\tfunction onSessionEnded( /*event*/ ) {\n\n\t\t\t\tcurrentSession.removeEventListener( 'end', onSessionEnded );\n\n\t\t\t\tbutton.textContent = 'ENTER VR';\n\n\t\t\t\tcurrentSession = null;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tbutton.style.display = '';\n\n\t\t\tbutton.style.cursor = 'pointer';\n\t\t\tbutton.style.left = 'calc(50% - 50px)';\n\t\t\tbutton.style.width = '100px';\n\n\t\t\tbutton.textContent = 'ENTER VR';\n\n\t\t\tbutton.onmouseenter = function () {\n\n\t\t\t\tbutton.style.opacity = '1.0';\n\n\t\t\t};\n\n\t\t\tbutton.onmouseleave = function () {\n\n\t\t\t\tbutton.style.opacity = '0.5';\n\n\t\t\t};\n\n\t\t\tbutton.onclick = function () {\n\n\t\t\t\tif ( currentSession === null ) {\n\n\t\t\t\t\t// WebXR's requestReferenceSpace only works if the corresponding feature\n\t\t\t\t\t// was requested at session creation time. For simplicity, just ask for\n\t\t\t\t\t// the interesting ones as optional features, but be aware that the\n\t\t\t\t\t// requestReferenceSpace call will fail if it turns out to be unavailable.\n\t\t\t\t\t// ('local' is always available for immersive sessions and doesn't need to\n\t\t\t\t\t// be requested separately.)\n\n\t\t\t\t\tconst sessionInit = { optionalFeatures: [ 'local-floor', 'bounded-floor', 'hand-tracking', 'layers' ] };\n\t\t\t\t\tnavigator.xr.requestSession( 'immersive-vr', sessionInit ).then( onSessionStarted );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcurrentSession.end();\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction disableButton() {\n\n\t\t\tbutton.style.display = '';\n\n\t\t\tbutton.style.cursor = 'auto';\n\t\t\tbutton.style.left = 'calc(50% - 75px)';\n\t\t\tbutton.style.width = '150px';\n\n\t\t\tbutton.onmouseenter = null;\n\t\t\tbutton.onmouseleave = null;\n\n\t\t\tbutton.onclick = null;\n\n\t\t}\n\n\t\tfunction showWebXRNotFound() {\n\n\t\t\tdisableButton();\n\n\t\t\tbutton.textContent = 'VR NOT SUPPORTED';\n\n\t\t}\n\n\t\tfunction showVRNotAllowed( exception ) {\n\n\t\t\tdisableButton();\n\n\t\t\tconsole.warn( 'Exception when trying to call xr.isSessionSupported', exception );\n\n\t\t\tbutton.textContent = 'VR NOT ALLOWED';\n\n\t\t}\n\n\t\tfunction stylizeElement( element ) {\n\n\t\t\telement.style.position = 'absolute';\n\t\t\telement.style.bottom = '20px';\n\t\t\telement.style.padding = '12px 6px';\n\t\t\telement.style.border = '1px solid #fff';\n\t\t\telement.style.borderRadius = '4px';\n\t\t\telement.style.background = 'rgba(0,0,0,0.1)';\n\t\t\telement.style.color = '#fff';\n\t\t\telement.style.font = 'normal 13px sans-serif';\n\t\t\telement.style.textAlign = 'center';\n\t\t\telement.style.opacity = '0.5';\n\t\t\telement.style.outline = 'none';\n\t\t\telement.style.zIndex = '999';\n\n\t\t}\n\n\t\tif ( 'xr' in navigator ) {\n\n\t\t\tbutton.id = 'VRButton';\n\t\t\tbutton.style.display = 'none';\n\n\t\t\tstylizeElement( button );\n\n\t\t\tnavigator.xr.isSessionSupported( 'immersive-vr' ).then( function ( supported ) {\n\n\t\t\t\tsupported ? showEnterVR() : showWebXRNotFound();\n\n\t\t\t\tif ( supported && VRButton.xrSessionIsGranted ) {\n\n\t\t\t\t\tbutton.click();\n\n\t\t\t\t}\n\n\t\t\t} ).catch( showVRNotAllowed );\n\n\t\t\treturn button;\n\n\t\t} else {\n\n\t\t\tconst message = document.createElement( 'a' );\n\n\t\t\tif ( window.isSecureContext === false ) {\n\n\t\t\t\tmessage.href = document.location.href.replace( /^http:/, 'https:' );\n\t\t\t\tmessage.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\n\n\t\t\t} else {\n\n\t\t\t\tmessage.href = 'https://immersiveweb.dev/';\n\t\t\t\tmessage.innerHTML = 'WEBXR NOT AVAILABLE';\n\n\t\t\t}\n\n\t\t\tmessage.style.left = 'calc(50% - 90px)';\n\t\t\tmessage.style.width = '180px';\n\t\t\tmessage.style.textDecoration = 'none';\n\n\t\t\tstylizeElement( message );\n\n\t\t\treturn message;\n\n\t\t}\n\n\t}\n\n\tstatic registerSessionGrantedListener() {\n\n\t\tif ( typeof navigator !== 'undefined' && 'xr' in navigator ) {\n\n\t\t\t// WebXRViewer (based on Firefox) has a bug where addEventListener\n\t\t\t// throws a silent exception and aborts execution entirely.\n\t\t\tif ( /WebXRViewer\\//i.test( navigator.userAgent ) ) return;\n\n\t\t\tnavigator.xr.addEventListener( 'sessiongranted', () => {\n\n\t\t\t\tVRButton.xrSessionIsGranted = true;\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n}\n\nVRButton.xrSessionIsGranted = false;\nVRButton.registerSessionGrantedListener();\n\nexport { VRButton };\n"],"names":["class","_createElementVNode","id","_hoisted_2","_hoisted_3","_createElementBlock","_hoisted_1","_hoisted_4","DEFAULT_HAND_PROFILE_PATH","XRHandMeshModel","constructor","handModel","controller","path","handedness","loader","this","bones","GLTFLoader","setPath","load","gltf","object","scene","children","add","mesh","getObjectByProperty","frustumCulled","castShadow","receiveShadow","joints","forEach","jointName","bone","getObjectByName","undefined","console","warn","push","updateMesh","XRJoints","i","length","XRJoint","visible","position","copy","quaternion","TOUCH_RADIUS","POINTING_JOINT","OculusHandModel","Object3D","super","motionController","envMap","addEventListener","event","xrInputSource","data","hand","clear","updateMatrixWorld","force","getPointerPosition","indexFingerTip","intersectBoxObject","boxObject","pointerPosition","indexSphere","Sphere","box","Box3","setFromObject","intersectsBox","checkButton","button","onPress","onClear","isPressed","whilePressed","PINCH_MAX","PINCH_THRESHOLD","PINCH_MIN","POINTER_ADVANCE_MAX","POINTER_OPACITY_MAX","POINTER_OPACITY_MIN","POINTER_FRONT_RADIUS","POINTER_REAR_RADIUS","POINTER_REAR_RADIUS_MIN","POINTER_LENGTH","POINTER_SEGMENTS","POINTER_RINGS","POINTER_HEMISPHERE_ANGLE","YAXIS","THREE","ZAXIS","CURSOR_RADIUS","CURSOR_MAX_DISTANCE","OculusHandPointerModel","pointerGeometry","pointerMesh","pointerObject","pinched","attached","cursorObject","raycaster","_onConnected","bind","_onDisconnected","createPointer","dispose","material","_drawVerticesRing","vertices","baseVector","ringIndex","segmentVector","clone","applyAxisAngle","Math","PI","vid","x","y","z","_updatePointerVertices","rearRadius","attributes","array","frontFaceBase","rearBase","sin","cos","frontCenterIndex","rearCenterIndex","frontCenter","rearCenter","setAttribute","j","Array","fill","indices","transparent","opacity","setIndex","set","cursorGeometry","cursorMaterial","_updateRaycaster","pointerMatrix","matrixWorld","tempMatrix","identity","extractRotation","ray","origin","setFromMatrixPosition","direction","applyMatrix4","_updatePointer","indexTip","thumbTip","distance","distanceTo","multiplyScalar","pinchScale","focusScale","isPinched","setAttached","isAttached","intersectObject","recursive","intersectObjects","objects","checkIntersections","intersections","intersection","setCursor","removeEventListener","createText","message","height","canvas","document","createElement","context","getContext","metrics","textHeight","font","measureText","textWidth","width","textAlign","textBaseline","fillStyle","fillText","texture","needsUpdate","color","side","map","geometry","plane","mounted","Component","schema","type","Types","Ref","Button","currState","String","default","prevState","action","ButtonSystem","System","execute","queries","buttons","results","entity","getMutableComponent","buttonMesh","getComponent","scale","components","Draggable","state","originalParent","attachedPointer","DraggableSystem","draggable","parent","attach","Intersectable","TagComponent","HandRaySystem","init","handPointers","hp","intersectingEntity","intersectable","hasComponent","log","HandsInstructionText","InstructionSystem","controllers","instructionTexts","OffsetFromCamera","Number","NeedCalibration","CalibrationSystem","camera","renderer","needCalibration","xr","getSession","offset","xrCamera","getCamera","removeComponent","Randomizable","RandomizerSystem","needRandomizing","randomizable","setHex","random","rotation","world","World","clock","makeButtonMesh","rendererWrapper","getElementById","container","appendChild","background","window","innerWidth","innerHeight","light","shadow","top","bottom","right","left","mapSize","antialias","setPixelRatio","devicePixelRatio","setSize","shadowMap","enabled","cameraAutoUpdate","domElement","sessionInit","requiredFeatures","body","VRButton","createButton","controller1","getController","controller2","controllerModelFactory","XRControllerModelFactory","controllerGrip1","getControllerGrip","createControllerModel","hand1","getHand","handPointer1","controllerGrip2","hand2","handPointer2","floorGeometry","floorMaterial","floor","menuGeometry","menuMaterial","menuMesh","resetButton","resetButtonText","exitButton","exitButtonText","instructionText","exitText","registerComponent","registerSystem","createEntity","addComponent","menuEntity","rbEntity","rbAction","getSystem","ebEntity","ebAction","setTimeout","end","itEntity","onWindowResize","aspect","updateProjectionMatrix","animate","setAnimationLoop","render","delta","getDelta","elapsedTime","updateCamera","onComponentUnmounted","vrButton","removeChild","unmounted","dispatchEvent","Event","__exports__","queryKey","Components","ids","n","T","componentRegistered","Error","operator","_typeId","sort","join","hasWindow","now","performance","Date","isComponent","SystemManager","_systems","_executeSystems","lastExecutedSystem","SystemClass","isSystem","name","getName","system","order","sortSystems","unregisterSystem","splice","indexOf","a","b","priority","find","s","getSystems","removeSystem","index","executeSystem","time","initialized","canExecute","startTime","executeTime","clearEvents","stop","forcePlay","stats","numSystems","systems","systemStats","ctx","ObjectPool","initialSize","freeList","count","isObjectPool","expand","acquire","round","item","pop","release","reset","_pool","totalSize","totalFree","totalUsed","EventDispatcher","_listeners","fired","handled","eventName","listener","listeners","hasEventListener","listenerArray","component","slice","call","resetCounters","Query","manager","NotComponents","entities","eventDispatcher","reactive","key","_entities","match","addEntity","prototype","ENTITY_ADDED","removeEntity","ENTITY_REMOVED","hasAllComponents","hasAnyComponents","toJSON","included","C","not","numEntities","numComponents","COMPONENT_CHANGED","QueryManager","_world","_queries","onEntityRemoved","queryName","query","onEntityComponentAdded","onEntityComponentRemoved","getQuery","props","hasOwnProperty","schemaProp","checkUndefinedAttributes","source","prop","src","Object","keys","srcKey","displayName","SystemStateComponent","isSystemStateComponent","EntityPool","entityManager","entityClass","EntityManager","componentsManager","_nextEntityId","_entitiesByNames","_queryManager","_entityPool","options","entityPoolSize","entitiesWithComponentsToRemove","entitiesToRemove","deferredRemovalEnabled","getEntityByName","alive","ENTITY_CREATED","entityAddComponent","values","_ComponentsMap","_ComponentTypes","__proto__","numStateComponents","componentPool","getComponentsPool","_components","componentAddedToEntity","COMPONENT_ADDED","entityRemoveComponent","immediately","COMPONENT_REMOVE","_entityRemoveComponentSync","_ComponentTypesToRemove","_componentsToRemove","remove","componentRemovedFromEntity","entityRemoveAllComponents","_releaseEntity","removeAllEntities","processDeferredRemoval","queryComponents","numQueries","numComponentPool","_componentPool","ecsyComponentId","pool","used","size","ComponentManager","nextComponentId","objectPool","propName","Version","proxyMap","WeakMap","proxyHandler","target","wrapImmutableComponent","wrappedComponent","get","Proxy","Entity","_entityManager","includeRemoved","getRemovedComponent","getComponents","getComponentsToRemove","getComponentTypes","forceImmediate","hasRemovedComponent","removeAllComponents","srcComponent","DEFAULT_OPTIONS","assign","systemManager","eventQueues","CustomEvent","detail","version","lastTime","hasRegisteredComponent","play","_mandatoryQueries","queryConfig","unregisteredComponents","filter","c","mandatory","validEvents","eventMapping","added","removed","changed","listen","eventList","isArray","changedComponent","json","queryDefinition","jsonQuery","methods","method","Not","isTagComponent","copyValue","cloneValue","copyArray","dest","cloneArray","copyJSON","JSON","parse","stringify","cloneJSON","copyCopyable","cloneClonable","createType","typeDefinition","mandatoryProperties","undefinedProperties","p","isType","Boolean","generateId","result","characters","charactersLength","charAt","injectScript","onLoad","script","onload","head","documentElement","hookConsoleAndErrors","connection","wrapFunctions","fn","args","send","apply","error","stack","includeRemoteIdHTML","remoteId","infoDiv","style","cssText","innerHTML","enableRemoteDevtools","generateNewCode","localStorage","setItem","location","reload","getItem","__ECSY_REMOTE_DEVTOOLS_INJECTED","__ECSY_REMOTE_DEVTOOLS","worldsBeforeLoading","onWorldCreated","e","onLoaded","peer","Peer","host","secure","port","config","iceServers","url","debug","on","parentNode","value","eval","returnEval","urlParams","URLSearchParams","search","has","showEnterVR","currentSession","async","onSessionStarted","session","onSessionEnded","setSession","textContent","display","cursor","onmouseenter","onmouseleave","onclick","optionalFeatures","navigator","requestSession","then","disableButton","showWebXRNotFound","showVRNotAllowed","exception","stylizeElement","element","padding","border","borderRadius","outline","zIndex","isSessionSupported","supported","xrSessionIsGranted","click","catch","isSecureContext","href","replace","textDecoration","registerSessionGrantedListener","test","userAgent"],"sourceRoot":""}